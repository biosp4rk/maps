[{"label": "InterruptSetup", "addr": {"U": "C0", "E": "C0", "J": "C0"}, "size": "44", "mode": "arm", "params": null, "return": null, "notes": "Sets the Pointer To Interrupt Code and calls MainGameLoop"}, {"label": "InterruptCode", "addr": {"U": "104", "E": "104", "J": "104"}, "size": "138", "mode": "arm", "params": null, "return": null, "notes": "Interrupt code"}, {"label": "MainGameLoop", "addr": {"U": "23C", "E": "23C", "J": "23C"}, "size": {"U": "464", "E": "498", "J": "464"}, "mode": "thumb", "params": null, "return": null, "notes": "Main game loop"}, {"label": "InitGame", "addr": {"U": "6A0", "E": "6D4", "J": "6A0"}, "size": "124", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the game data"}, {"label": "SoftResetCheck", "addr": {"U": "7D0", "E": "804", "J": "7D0"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if a soft reset should happen"}, {"label": "SoftReset", "addr": {"U": "804", "E": "838", "J": "804"}, "size": {"U": "108", "E": "128", "J": "108"}, "mode": "thumb", "params": null, "return": null, "notes": "Handles a soft reset"}, {"label": "CallLZ77UnComp16Bit", "addr": {"U": "90C", "E": "960", "J": "90C"}, "size": "C", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u16 *", "notes": "Source address"}, {"label": "DestinationAddress", "type": "u16 *", "notes": "Destination address"}], "return": null, "notes": "Calls LZ77UnCompReadNormalWrite16bit"}, {"label": "CallLZ77UnComp8Bit", "addr": {"U": "918", "E": "96C", "J": "918"}, "size": "C", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u8 *", "notes": "Source address"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}], "return": null, "notes": "Calls LZ77UnCompReadNormalWrite8bit"}, {"label": "CallSoundBias", "addr": {"U": "940", "E": "994", "J": "940"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Calls SoundBias0 and SoundBias0x200"}, {"label": "CallMultiBoot", "addr": {"U": "950", "E": "9A4", "J": "950"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Calls MultiBoot"}, {"label": "CallVBlankIntrWait", "addr": {"U": "95C", "E": "9B0", "J": "95C"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Calls VBlankIntrWait"}, {"label": "UpdateInput", "addr": {"U": "968", "E": "9BC", "J": "968"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Updates the input"}, {"label": "ClearRAM", "addr": {"U": "9A0", "E": "9F4", "J": "9A0"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Clears OAM, PALRAM and VRAM"}, {"label": "LoadInterruptCode", "addr": {"U": "9E8", "E": "A3C", "J": "9E8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Loads the interrupt code"}, {"label": "ResetFreeOam", "addr": {"U": "A18", "E": "A6C", "J": "A18"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Resets the OAM"}, {"label": "FixedPointMultiply", "addr": {"U": "A4C", "E": "AA0", "J": "A4C"}, "size": "1C", "mode": "thumb", "params": [{"label": "Multiplicand", "type": "s16"}, {"label": "Multiplier", "type": "s16", "notes": "Multiplier (1/256)"}], "return": {"label": "Product", "type": "s16"}, "notes": "Fixed-point multiplication of two values, where the second has a scaling factor of 1/256 (ranges from -128 to 127.99)"}, {"label": "FixedPointDivide", "addr": {"U": "A68", "E": "ABC", "J": "A68"}, "size": "18", "mode": "thumb", "params": [{"label": "Dividend", "type": "s16"}, {"label": "Divisor", "type": "s16", "notes": "Divisor (1/4)"}], "return": {"label": "Quotient", "type": "s16"}, "notes": "Fixed-point division of two values, where the second has a scaling factor of 1/4 (ranges from -8192 to 8191.75)"}, {"label": "FixedPointInverse", "addr": {"U": "A80", "E": "AD4", "J": "A80"}, "size": "18", "mode": "thumb", "params": [{"label": "Value", "type": "s16"}], "return": {"label": "Inverse", "type": "s16", "notes": "Inverse (1/65536)"}, "notes": "Fixed-point inverse of a value, with a scaling factor of 1/65536"}, {"label": "CallVBlankCode", "addr": {"U": "A98", "E": "AEC", "J": "A98"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Calls the Vblank code with the function in VBlankCodePointer"}, {"label": "SetVBlankCodePtr", "addr": {"U": "AE4", "E": "B38", "J": "AE4"}, "size": "1C", "mode": "thumb", "params": [{"label": "VBlankCodePtr", "type": "void *", "tags": ["thumb"], "notes": "V-Blank code pointer"}], "return": null, "notes": "Sets VBlankCodePointer to r0"}, {"label": "CallHBlankCode", "addr": {"U": "B00", "E": "B54", "J": "B00"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calls the Vblank code with the function in HBlankCodePointer"}, {"label": "SetHBlankCodePtr", "addr": {"U": "B24", "E": "B78", "J": "B24"}, "size": "1C", "mode": "thumb", "params": [{"label": "HBlankCodePtr", "type": "void *", "tags": ["thumb"], "notes": "H-Blank code pointer"}], "return": null, "notes": "Sets HBlankCodePointer to r0"}, {"label": "CallVCountCode", "addr": {"U": "B40", "E": "B94", "J": "B40"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calls the VCount code with the function in VCountCodePointer"}, {"label": "SetVCountCodePtr", "addr": {"U": "B64", "E": "BB8", "J": "B64"}, "size": "1C", "mode": "thumb", "params": [{"label": "VCountCodePtr", "type": "void *", "tags": ["thumb"], "notes": "V-Count code pointer"}], "return": null, "notes": "Sets VCountCodePointer to r0"}, {"label": "CallSerialCommunicationCode", "addr": {"U": "B80", "E": "BD4", "J": "B80"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calls the serial communication code with the function in SerialCommunicationCodePointer"}, {"label": "SetSerialCommunicationCode", "addr": {"U": "BA4", "E": "BF8", "J": "BA4"}, "size": "1C", "mode": "thumb", "params": [{"label": "FunctionPtr", "type": "void *", "tags": ["thumb"], "notes": "Function pointer"}], "return": null, "notes": "Sets SerialCommunicationCodePointer to r0"}, {"label": "CallTimer3OverflowCode", "addr": {"U": "BC0", "E": "C14", "J": "BC0"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calls the timer 3 overflow code with the function in Timer3OverflowCodePointer"}, {"label": "SetTimer3OverflowCode", "addr": {"U": "BE4", "E": "C38", "J": "BE4"}, "size": "1C", "mode": "thumb", "params": [{"label": "FunctionPtr", "type": "void *", "tags": ["thumb"], "notes": "Function pointer"}], "return": null, "notes": "Sets Timer3OverflowCodePointer to r0"}, {"label": "EmptyFunction_C00", "addr": {"U": "C00", "E": "C54", "J": "C00"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function (interrupt handler)"}, {"label": "Music_EmptyFunction", "addr": {"U": "24BC", "E": "2510", "J": "24BC"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "InitSound", "addr": {"U": "2564", "E": "25B8", "J": "2564"}, "size": "294", "mode": "thumb", "params": null, "return": null, "notes": "Initializes registers and RAM values that are related to sound/music (sets the pointers to the sound codes)"}, {"label": "TransferSound", "addr": {"U": "28F4", "E": "2948", "J": "28F4"}, "size": "124", "mode": "thumb", "params": null, "return": null, "notes": "Sets up 2 repeat DMA Transfers from the raw sound data to the FIFO channels"}, {"label": "PlaySound1", "addr": {"U": "2A18", "E": "2A6C", "J": "2A18"}, "size": "10", "mode": "thumb", "params": [{"label": "SoundId", "type": "u16", "notes": "Sound ID"}], "return": null, "notes": "Plays a sound"}, {"label": "StopSound", "addr": {"U": "2A28", "E": "2A7C", "J": "2A28"}, "size": "10", "mode": "thumb", "params": [{"label": "SoundId", "type": "u16", "notes": "Sound ID"}], "return": null, "notes": "Stops a sound"}, {"label": "StopAllMusicAndSounds", "addr": {"U": "2A58", "E": "2AAC", "J": "2A58"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Stops every music/sound currently playing"}, {"label": "FadeAllSounds", "addr": {"U": "2ACC", "E": "2B20", "J": "2ACC"}, "size": "54", "mode": "thumb", "params": [{"label": "Timer", "type": "u16"}], "return": null, "notes": "Fades every single sound"}, {"label": "PlaySoundIfNotPlaying", "addr": {"U": "2B20", "E": "2B74", "J": "2B20"}, "size": "44", "mode": "thumb", "params": [{"label": "SoundId", "type": "u16", "notes": "Sound ID"}], "return": null, "notes": "Plays a sound, only if it's not currently playing"}, {"label": "FadeSound", "addr": {"U": "2C80", "E": "2CD4", "J": "2C80"}, "size": "14", "mode": "thumb", "params": [{"label": "SoundId", "type": "u16", "notes": "Sound ID"}, {"label": "Timer", "type": "u16"}], "return": null, "notes": "Fades a sound"}, {"label": "ApplyMusicOrSoundFading", "addr": {"U": "2C94", "E": "2CE8", "J": "2C94"}, "size": "54", "mode": "thumb", "params": [{"label": "TrackDataPtr", "type": "u8 *", "notes": "Track data pointer"}, {"label": "Timer", "type": "u16"}], "return": null, "notes": "Applies the fading for a sound/music"}, {"label": "PlaySoundAfterCutscene", "addr": {"U": "2DE8", "E": "2E3C", "J": "2DE8"}, "size": "14", "mode": "thumb", "params": [{"label": "SoundId", "type": "u16", "notes": "Sound ID"}, {"label": "Timer", "type": "u16"}], "return": null, "notes": "Plays a fading in sound (used to replay the elevator sound after a cutscene)"}, {"label": "InitFadeInMusic", "addr": {"U": "2DFC", "E": "2E50", "J": "2DFC"}, "size": "38", "mode": "thumb", "params": [{"label": "TrackDataPtr", "type": "u8 *", "notes": "Track data pointer"}, {"label": "SoundEntryPtr", "type": "u8 *", "notes": "Sound entry pointer"}, {"label": "Timer", "type": "u16"}], "return": null, "notes": "Initialises a music that fades in"}, {"label": "DMATransfer", "addr": {"U": "31E4", "E": "3238", "J": "31E4"}, "size": "D0", "mode": "thumb", "params": [{"label": "DmaChannel", "type": "u8", "notes": "DMA channel"}, {"label": "SourceAddress", "type": "u8 *", "notes": "Source address"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}, {"label": "Length", "type": "u16"}, {"label": "BitSize", "type": "u8", "notes": "Bit size"}], "return": null, "notes": "Performs a DMA Transfer"}, {"label": "FillBytes", "addr": {"U": "32B4", "E": "3308", "J": "32B4"}, "size": "CC", "mode": "thumb", "params": [{"label": "DmaChannel", "type": "u8", "notes": "DMA channel"}, {"label": "Value", "type": "u8"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}, {"label": "Length", "type": "u16"}, {"label": "BitSize", "type": "u8", "notes": "Bit size"}], "return": null, "notes": "Fills the destination address with r1, r3 times"}, {"label": "CheckSetNewMusicTrack", "addr": {"U": "36D0", "E": "3724", "J": "36D0"}, "size": "BC", "mode": "thumb", "params": [{"label": "MusicTrack", "type": "u16", "notes": "Music track"}], "return": null, "notes": "Checks if r0 is a new music track"}, {"label": "CheckPlayNewMusicTrack", "addr": {"U": "3878", "E": "38CC", "J": "3878"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Check play new music track"}, {"label": "UpdateMusicAfterAlarmStops", "addr": {"U": "3930", "E": "3984", "J": "3930"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Updates the current played music after the alarm stops in chozodia"}, {"label": "PlayMusic", "addr": {"U": "39F4", "E": "3A48", "J": "39F4"}, "size": "78", "mode": "thumb", "params": [{"label": "MusicTrack", "type": "u16", "notes": "Music track"}, {"label": "Priority", "type": "u8"}], "return": null, "notes": "Plays the music in r0"}, {"label": "FadeMusic", "addr": {"U": "3A98", "E": "3AEC", "J": "3A98"}, "size": "4C", "mode": "thumb", "params": [{"label": "Timer", "type": "u16"}], "return": null, "notes": "Fades the current music track"}, {"label": "FadeMusicForDemo", "addr": {"U": "3AE4", "E": "3B38", "J": "3AE4"}, "size": "4C", "mode": "thumb", "params": [{"label": "Timer", "type": "u16"}], "return": null, "notes": "Fades the current music track (only used for demo)"}, {"label": "FadeMusicAndQueueNext", "addr": {"U": "3B30", "E": "3B84", "J": "3B30"}, "size": "4C", "mode": "thumb", "params": [{"label": "Timer", "type": "u16"}, {"label": "MusicTrack", "type": "u16", "notes": "Music track"}, {"label": "Priority", "type": "u8"}], "return": null, "notes": "Fades the current music track and queries the track in r1 to be immediately played next"}, {"label": "CheckFadeInMusic", "addr": {"U": "3C20", "E": "3C74", "J": "3C20"}, "size": "80", "mode": "thumb", "params": [{"label": "MusicTrack", "type": "u16", "notes": "Music track"}, {"label": "Timer", "type": "u16"}, {"label": "Priority", "type": "u8"}], "return": null, "notes": "Checks if a fading music can play"}, {"label": "PlayMusicAndQueueCurr", "addr": {"U": "3CA0", "E": "3CF4", "J": "3CA0"}, "size": "AC", "mode": "thumb", "params": [{"label": "MusicTrack", "type": "u16", "notes": "Music track"}, {"label": "param_1", "type": "bool"}], "return": null, "notes": "Queues the current music, plays the music in r0, and when the music is done replays the queued music"}, {"label": "QueueSound", "addr": {"U": "3FAC", "E": "4000", "J": "3FAC"}, "size": "68", "mode": "thumb", "params": [{"label": "SoundId", "type": "u16", "notes": "Sound ID"}, {"label": "Timer", "type": "u16"}], "return": null, "notes": "Initialises a sound in the sound queue"}, {"label": "FadeOrStopSound", "addr": {"U": "4014", "E": "4068", "J": "4014"}, "size": "70", "mode": "thumb", "params": [{"label": "SoundId", "type": "u16", "notes": "Sound ID"}, {"label": "Timer", "type": "u16"}], "return": null, "notes": "Fades or stops a sound depending on r1"}, {"label": "PlaySoundTestMusicTrack", "addr": {"U": "4228", "E": "427C", "J": "4228"}, "size": "38", "mode": "thumb", "params": [{"label": "MusicTrack", "type": "u16", "notes": "Music track"}], "return": null, "notes": "Plays a sound test"}, {"label": "ReplaySoundTestMusicTrack", "addr": {"U": "4260", "E": "42B4", "J": "4260"}, "size": "1C", "mode": "thumb", "params": [{"label": "SoundId", "type": "u16", "notes": "Sound ID"}], "return": null, "notes": "Replays a sound test"}, {"label": "CallSoundCodeB", "addr": {"U": "4310", "E": "4364", "J": "4310"}, "size": "10", "mode": "thumb", "params": [{"label": "SourceRamAddress", "type": "u8 *", "notes": "Source RAM address"}, {"label": "SourceRamAddressCopy", "type": "u8 *", "notes": "Source RAM address copy"}, {"label": "DestinationRamAddress", "type": "u8 *", "notes": "Destination RAM address"}, {"label": "param_3", "type": "u8"}], "return": {"label": "EndDestinationAddress", "type": "u8 *", "notes": "End destination address"}, "notes": "Call sound code B"}, {"label": "SoundCodeB", "addr": {"U": "4320", "E": "4374", "J": "4320"}, "size": "94", "mode": "arm", "params": [{"label": "SourceRamAddress", "type": "u8 *", "notes": "Source RAM address"}, {"label": "SourceRamAddressCopy", "type": "u8 *", "notes": "Source RAM address copy"}, {"label": "DestinationRamAddress", "type": "u8 *", "notes": "Destination RAM address"}, {"label": "param_3", "type": "u8"}], "return": {"label": "EndDestinationAddress", "type": "u8 *", "notes": "End destination address"}, "notes": "Sound code B"}, {"label": "CallSoundCodeC", "addr": {"U": "43B4", "E": "4408", "J": "43B4"}, "size": "10", "mode": "thumb", "params": [{"label": "DestinationRamAddress", "type": "u8 *", "notes": "Destination RAM address"}, {"label": "SourceRamAddress", "type": "u8 *", "notes": "Source RAM address"}, {"label": "param_2", "type": "u8"}], "return": {"label": "EndSourceAddress", "type": "u8 *", "notes": "End source address"}, "notes": "Call sound code C"}, {"label": "SoundCodeC", "addr": {"U": "43C4", "E": "4418", "J": "43C4"}, "size": "A0", "mode": "arm", "params": [{"label": "DestinationRamAddress", "type": "u8 *", "notes": "Destination RAM address"}, {"label": "SourceRamAddress", "type": "u8 *", "notes": "Source RAM address"}, {"label": "param_2", "type": "u8"}], "return": {"label": "EndSourceAddress", "type": "u8 *", "notes": "End source address"}, "notes": "Sound code C"}, {"label": "CallSoundCodeA", "addr": {"U": "4464", "E": "44B8", "J": "4464"}, "size": "10", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u8 *", "notes": "Source address?"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address?"}, {"label": "param_2", "type": "u8"}], "return": {"label": "EndSourceAddress", "type": "u8 *", "notes": "End source address?"}, "notes": "Call sound code A"}, {"label": "SoundCodeA", "addr": {"U": "4474", "E": "44C8", "J": "4474"}, "size": "648", "mode": "arm", "params": [{"label": "SourceAddress", "type": "u8 *", "notes": "Source address?"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address?"}, {"label": "param_2", "type": "u8"}], "return": {"label": "EndSourceAddress", "type": "u8 *", "notes": "End source address?"}, "notes": "Sound code A"}, {"label": "CallGetNoteFrenquency", "addr": {"U": "4ABC", "E": "4B10", "J": "4ABC"}, "size": "4", "mode": "thumb", "params": [{"label": "Frequency", "type": "u32"}, {"label": "MusicPitch", "type": "u32", "notes": "Music Pitch"}], "return": {"label": "Frequency", "type": "u32"}, "notes": "Switches to ARM state and jumps to function below"}, {"label": "GetNoteFrequency", "addr": {"U": "4AC0", "E": "4B14", "J": "4AC0"}, "size": "18", "mode": "arm", "params": [{"label": "Frequency", "type": "u32"}, {"label": "MusicPitch", "type": "u32", "notes": "Music Pitch"}], "return": {"label": "Frequency", "type": "u32"}, "notes": "Gets the frequency of a note"}, {"label": "StopMusicOrSound", "addr": {"U": "4C1C", "E": "4C70", "J": "4C1C"}, "size": "78", "mode": "thumb", "params": [{"label": "TrackDataPtr", "type": "u8 *", "notes": "Track data pointer"}], "return": null, "notes": "Stops the music of the track in r0"}, {"label": "CpuFastSet", "addr": {"U": "5190", "E": "51E4", "J": "5190"}, "size": "4", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u8 *", "notes": "Source address"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}, {"label": "LengthMode", "type": "u32", "notes": "Length/Mode"}], "return": null, "notes": "Calls software interrupt 0xc"}, {"label": "CpuSet", "addr": {"U": "5194", "E": "51E8", "J": "5194"}, "size": "4", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u8 *", "notes": "Source address"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}, {"label": "LengthMode", "type": "u32", "notes": "Length/Mode"}], "return": null, "notes": "Calls software interrupt 0xb"}, {"label": "DivArm_Divide", "addr": {"U": "5198", "E": "51EC", "J": "5198"}, "size": "4", "mode": "thumb", "params": [{"label": "Denominator", "type": "s32"}, {"label": "Numerator", "type": "s32"}], "return": {"label": "Quotient", "type": "s32"}, "notes": "Calls software interrupt 0x7"}, {"label": "DivArm_Modulo", "addr": {"U": "519C", "E": "51F0", "J": "519C"}, "size": "8", "mode": "thumb", "params": [{"label": "Denominator", "type": "s32"}, {"label": "Numerator", "type": "s32"}], "return": {"label": "Remainder", "type": "s32"}, "notes": "Calls software interrupt 0x7"}, {"label": "LZ77UnCompReadNormalWrite16bit", "addr": {"U": "51A4", "E": "51F8", "J": "51A4"}, "size": "4", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u16 *", "notes": "Source address"}, {"label": "DestinationAddress", "type": "u16 *", "notes": "Destination address"}, {"label": "CallbackParameter", "type": "u32", "notes": "Callback parameter"}, {"label": "CallbackStructure", "type": "u32", "notes": "Callback structure"}], "return": null, "notes": "Calls software interrupt 0x12"}, {"label": "LZ77UnCompReadNormalWrite8bit", "addr": {"U": "51A8", "E": "51FC", "J": "51A8"}, "size": "4", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u8 *", "notes": "Source address"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}, {"label": "CallbackParameter", "type": "u32", "notes": "Callback parameter"}, {"label": "CallbackStructure", "type": "u32", "notes": "Callback structure"}], "return": null, "notes": "Calls software interrupt 0x11"}, {"label": "MidiKey2Freq", "addr": {"U": "51AC", "E": "5200", "J": "51AC"}, "size": "4", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u8 *", "notes": "Source address"}, {"label": "MidiKey", "type": "u8", "notes": "Midi key"}, {"label": "AdjustmentValue", "type": "u8", "notes": "Adjustment value"}], "return": {"label": "Frequency", "type": "u16"}, "notes": "Calls software interrupt 0x1f"}, {"label": "MultiBoot", "addr": {"U": "51B0", "E": "5204", "J": "51B0"}, "size": "8", "mode": "thumb", "params": [{"label": "PtrToMultibootparamStruct", "type": "u8 *", "notes": "Pointer to MultiBootParam struct"}], "return": {"label": "FailureFlag", "type": "bool", "notes": "Failure flag"}, "notes": "Calls software interrupt 0x25"}, {"label": "SoundBias_0", "addr": {"U": "51B8", "E": "520C", "J": "51B8"}, "size": "8", "mode": "thumb", "params": null, "return": null, "notes": "Calls software interrupt 0x19, r0 = 0"}, {"label": "SoundBias_200", "addr": {"U": "51C0", "E": "5214", "J": "51C0"}, "size": "8", "mode": "thumb", "params": null, "return": null, "notes": "Calls software interrupt 0x19, r0 = 1"}, {"label": "Sqrt", "addr": {"U": "51C8", "E": "521C", "J": "51C8"}, "size": "4", "mode": "thumb", "params": [{"label": "Num", "type": "u32", "notes": "Number"}], "return": {"label": "Result", "type": "u32"}, "notes": "Calls software interrupt 0x8"}, {"label": "VBlankIntrWait", "addr": {"U": "51CC", "E": "5220", "J": "51CC"}, "size": "8", "mode": "thumb", "params": null, "return": null, "notes": "Calls software interrupt 0x5"}, {"label": "SamusCheckScrewSpeedAffectingEnvironment", "addr": {"U": "5368", "E": "53BC", "J": "5368"}, "size": "10C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusPhysicsPtr", "type": "SamusPhysics *", "notes": "Samus physics pointer"}], "return": null, "notes": "Checks for screw attack/speedbooster damage to the environment"}, {"label": "SamusWalkingCheckSidesCollision", "addr": {"U": "58A0", "E": "58F4", "J": "58A0"}, "size": "238", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusPhysicsPtr", "type": "SamusPhysics *", "notes": "Samus physics pointer"}], "return": null, "notes": "Checks for the sides collision when walking"}, {"label": "SamusStandingCheckGroundCollision", "addr": {"U": "5B8C", "E": "5BE0", "J": "5B8C"}, "size": "C0", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusPhysicsPtr", "type": "SamusPhysics *", "notes": "Samus physics pointer"}], "return": {"label": "NewPose", "type": "u8", "enum": "SamusPose", "notes": "New pose"}, "notes": "Checks for block collision when not moving on the ground"}, {"label": "SamusCheckLandingCollision", "addr": {"U": "5C4C", "E": "5CA0", "J": "5C4C"}, "size": "1D0", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusPhysicsPtr", "type": "SamusPhysics *", "notes": "Samus physics pointer"}], "return": {"label": "NewPose", "type": "u8", "enum": "SamusPose", "notes": "New pose"}, "notes": "Checks for a block collision to land"}, {"label": "SamusCheckTopCollision", "addr": {"U": "5E1C", "E": "5E70", "J": "5E1C"}, "size": "11C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusPhysicsPtr", "type": "SamusPhysics *", "notes": "Samus physics pointer"}], "return": {"label": "NewPose", "type": "u8", "enum": "SamusPose", "notes": "New pose"}, "notes": "Checks for top block collision"}, {"label": "SamusCheckCollision", "addr": {"U": "5F38", "E": "5F8C", "J": "5F38"}, "size": "2DC", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusPhysicsPtr", "type": "SamusPhysics *", "notes": "Samus physics pointer"}], "return": null, "notes": "Calls other functions related to checking for collision"}, {"label": "SamusCheckSetEnvironmentEffect", "addr": {"U": "6214", "E": "6268", "J": "6214"}, "size": "3DC", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "param_1", "type": "u8"}, {"label": "param_2", "type": "u8"}], "return": null, "notes": "Checks if a environmental effect should spawn"}, {"label": "SamusUpdateEnvironmentEffects", "addr": {"U": "65F0", "E": "6644", "J": "65F0"}, "size": "360", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": null, "notes": "Updates the environmental effects and checks if a liquid damage environment effect should happen"}, {"label": "SamusUpdateJumpVelocity", "addr": {"U": "6950", "E": "69A4", "J": "6950"}, "size": "2DC", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusDataCopyPtr", "type": "SamusData *", "notes": "Samus data copy pointer"}, {"label": "SamusWeaponInfoPtr", "type": "SamusWeaponInfo *", "notes": "Samus weapon info pointer"}], "return": null, "notes": "Updates the velocity of samus mid-air (spin breaking, starting to spin, forced movements\u2026)"}, {"label": "SamusSetLandingPose", "addr": {"U": "6C2C", "E": "6C80", "J": "6C2C"}, "size": "280", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusDataCopyPtr", "type": "SamusData *", "notes": "Samus data copy pointer"}], "return": null, "notes": "Determines the new pose when samus lands on ground"}, {"label": "SamusSetHurtPose", "addr": {"U": "6EAC", "E": "6F00", "J": "6EAC"}, "size": "19C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusDataCopyPtr", "type": "SamusData *", "notes": "Samus data copy pointer"}, {"label": "SamusWeaponInfoPtr", "type": "SamusWeaponInfo *", "notes": "Samus weapon info pointer"}], "return": null, "notes": "Determines the new pose when samus gets hurt"}, {"label": "SamusSetKnockbackPose", "addr": {"U": "7048", "E": "709C", "J": "7048"}, "size": "11C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusDataCopyPtr", "type": "SamusData *", "notes": "Samus data copy pointer"}, {"label": "SamusWeaponInfoPtr", "type": "SamusWeaponInfo *", "notes": "Samus weapon info pointer"}], "return": null, "notes": "Determines the new pose when samus receives knockback"}, {"label": "SamusTurnAroundArmCannon", "addr": {"U": "7164", "E": "71B8", "J": "7164"}, "size": "384", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusDataCopyPtr", "type": "SamusData *", "notes": "Samus data copy pointer"}, {"label": "SamusWeaponInfoPtr", "type": "SamusWeaponInfo *", "notes": "Samus weapon info pointer"}], "return": null, "notes": "Checks if some fields should be carried from samus data copy"}, {"label": "SamusSetPose", "addr": {"U": "74E8", "E": "753C", "J": "74E8"}, "size": "D4", "mode": "thumb", "params": [{"label": "SamusPose", "type": "u8", "enum": "SamusPose", "notes": "Samus pose"}], "return": null, "notes": "Sets samus pose to r0"}, {"label": "SamusCopyData", "addr": {"U": "75BC", "E": "7610", "J": "75BC"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Copies Samus Data into Samus Data Copy (parameter is unused)"}, {"label": "SamusUpdatePhysics", "addr": {"U": "761C", "E": "7670", "J": "761C"}, "size": "110", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": null, "notes": "Sets samus physics default values and check if slowed by liquid"}, {"label": "SamusGetXVelocityOnSlope", "addr": {"U": "772C", "E": "7780", "J": "772C"}, "size": "44", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewXVelocity", "type": "s16", "notes": "New X velocity"}, "notes": "Checks if samus is on a slope and changes the velocity according to it"}, {"label": "SamusCopyPalette", "addr": {"U": "7770", "E": "77C4", "J": "7770"}, "size": "2C", "mode": "thumb", "params": [{"label": "SourceAddress", "type": "u16 *", "notes": "Source address"}, {"label": "PaletteOffset", "type": "u32", "notes": "Palette offset"}, {"label": "NumOfColors", "type": "u32", "notes": "Number of colors"}], "return": null, "notes": "Copies Samus Palette"}, {"label": "SamusUpdate", "addr": {"U": "779C", "E": "77F0", "J": "779C"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Calls SamusUpdatePhysics, SamusExecutePoseRoutine, SamusUpdateVelocityPosition, sub B8A8 and increments the animation counter"}, {"label": "SamusUpdateHitbox", "addr": {"U": "77E8", "E": "783C", "J": "77E8"}, "size": {"U": "F8", "E": "100", "J": "F8"}, "mode": "thumb", "params": null, "return": null, "notes": "Updates the hitbox and the moving direction of samus"}, {"label": "SamusUpdateGfx", "addr": {"U": "78E0", "E": "793C", "J": "78E0"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Calls UpdateSamusGraphics, SamusUpdateAnimationAndTimers and  SamusUpdateGroundEffects"}, {"label": "CallCheckPlayLowHealthSound", "addr": {"U": "791C", "E": "7978", "J": "791C"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Calls the CheckPlayLowHealthSound function"}, {"label": "CallUpdateArmCannonOffset", "addr": {"U": "7928", "E": "7984", "J": "7928"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Calls UpdateArmCannonPositionOffset"}, {"label": "SamusBombJump", "addr": {"U": "7948", "E": "79A4", "J": "7948"}, "size": "5C", "mode": "thumb", "params": [{"label": "Direction", "type": "u8", "notes": "Direction (0xA = right, 0xB = up, 0xC = left, 0x80 = Bomb above Samus flag)"}], "return": null, "notes": "Makes samus bounce with a bomb"}, {"label": "SamusAimCannon", "addr": {"U": "79A4", "E": "7A00", "J": "79A4"}, "size": "354", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": null, "notes": "Sets the aim of the cannon"}, {"label": "SamusFireBeamOrMissile", "addr": {"U": "7CF8", "E": "7D54", "J": "7CF8"}, "size": "BC", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusWeaponInfoPtr", "type": "SamusWeaponInfo *", "notes": "Samus weapon info pointer"}, {"label": "SamusEquipmentPtr", "type": "Equipment *", "notes": "Samus equipment pointer"}], "return": {"label": "FiredBeamOrMissile", "type": "bool", "notes": "Fired beam or missile"}, "notes": "Determines which new projectile samus is firing"}, {"label": "SamusCheckFirePistol", "addr": {"U": "7DB4", "E": "7E10", "J": "7DB4"}, "size": "6C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusWeaponInfoPtr", "type": "SamusWeaponInfo *", "notes": "Samus weapon info pointer"}], "return": {"label": "NewProjectile", "type": "u8", "notes": "New projectile (0 = none, 1 = pistol, 2 = charged pistol)"}, "notes": "Increments charge counter and checks if fully charged when B is released"}, {"label": "SamusSpawnNewProjectile", "addr": {"U": "7E20", "E": "7E7C", "J": "7E20"}, "size": "23C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusWeaponInfoPtr", "type": "SamusWeaponInfo *", "notes": "Samus weapon info pointer"}, {"label": "SamusEquipmentPtr", "type": "Equipment *", "notes": "Samus equipment pointer"}], "return": null, "notes": "Determines what new projectile should spawn, calls the 2 previously listed functions"}, {"label": "SamusCheckAButtonPressed", "addr": {"U": "805C", "E": "80B8", "J": "805C"}, "size": "24", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "AButtonPressed", "type": "bool", "notes": "A button pressed"}, "notes": "Checks if A is pressed and if so sets forced movement flag to 1 used in the standing pose subroutines (morphball, turning around and standing)"}, {"label": "SamusSetHighlightedWeapon", "addr": {"U": "8080", "E": "80DC", "J": "8080"}, "size": "140", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusWeaponInfoPtr", "type": "SamusWeaponInfo *", "notes": "Samus weapon info pointer"}, {"label": "SamusEquipmentPtr", "type": "Equipment *", "notes": "Samus equipment pointer"}], "return": null, "notes": "Sets what weapon is hightlighted in the HUD  (also arms the cannon for missiles)"}, {"label": "SamusSetSpinningPose", "addr": {"U": "81C0", "E": "821C", "J": "81C0"}, "size": "B8", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusEquipmentPtr", "type": "Equipment *", "notes": "Samus equipment pointer"}], "return": null, "notes": "Sets the spinning pose (space jumping, spinning, screw attacking)"}, {"label": "SamusApplyXAcceleration", "addr": {"U": "8278", "E": "82D4", "J": "8278"}, "size": "40", "mode": "thumb", "params": [{"label": "XAcceleration", "type": "s16", "notes": "X Acceleration"}, {"label": "XVelocity", "type": "s16", "notes": "X Velocity"}, {"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": null, "notes": "Applies an X acceleration to samus"}, {"label": "SamusCheckHazardDamage", "addr": {"U": "82B8", "E": "8314", "J": "82B8"}, "size": "168", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusEquipmentPtr", "type": "Equipment *", "notes": "Samus equipment pointer"}, {"label": "SamusHazardDamagePtr", "type": "SamusHazardDamage *", "notes": "Samus hazard damage pointer"}], "return": {"label": "GettingKnockedBackOrDying", "type": "bool", "notes": "Getting knocked back or dying"}, "notes": "Checks for varia and gravity and inflicts hazard damage"}, {"label": "SamusCheckShinesparkingPose", "addr": {"U": "8420", "E": "847C", "J": "8420"}, "size": "58", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": null, "notes": "Checks if samus is shinesparking"}, {"label": "SamusInactivity", "addr": {"U": "8478", "E": "84D4", "J": "8478"}, "size": "4", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "AlwaysFF", "type": "u8", "notes": "Always 0xFF"}, "notes": "Default function used for pose subroutines that don't have any behavior (generally when the player isn't in control of samus)"}, {"label": "SamusRunning", "addr": {"U": "84DC", "E": "8538", "J": "84DC"}, "size": "D4", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Running pose subroutine"}, {"label": "SamusRunningGfx", "addr": {"U": "85B0", "E": "860C", "J": "85B0"}, "size": "124", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Running pose GFX update subroutine"}, {"label": "SamusStanding", "addr": {"U": "86D4", "E": "8730", "J": "86D4"}, "size": "148", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Standing pose subroutine"}, {"label": "SamusStandingGfx", "addr": {"U": "881C", "E": "8878", "J": "881C"}, "size": "20", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Standing pose GFX update subroutine"}, {"label": "SamusTurningAround", "addr": {"U": "883C", "E": "8898", "J": "883C"}, "size": "BC", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning around pose subroutine"}, {"label": "SamusTurningAroundGfx", "addr": {"U": "88F8", "E": "8954", "J": "88F8"}, "size": "48", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning around pose GFX update subroutine"}, {"label": "SamusShootingGfx", "addr": {"U": "8940", "E": "899C", "J": "8940"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Shooting pose GFX update subroutine"}, {"label": "SamusCrouching", "addr": {"U": "895C", "E": "89B8", "J": "895C"}, "size": "1B8", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Crouching pose subroutine"}, {"label": "SamusTurningAroundAndCrouching", "addr": {"U": "8B14", "E": "8B70", "J": "8B14"}, "size": "110", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning around and crouching pose subroutine"}, {"label": "SamusTurningAroundAndCrouchingGfx", "addr": {"U": "8C24", "E": "8C80", "J": "8C24"}, "size": "2C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning around and crouching pose GFX update subroutine"}, {"label": "SamusShootingAndCrouchingGfx", "addr": {"U": "8C50", "E": "8CAC", "J": "8C50"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Shooting and crouching pose GFX update subroutine"}, {"label": "SamusSkidding", "addr": {"U": "8C6C", "E": "8CC8", "J": "8C6C"}, "size": "8C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Skidding pose subroutine"}, {"label": "SamusMidair", "addr": {"U": "8CF8", "E": "8D54", "J": "8CF8"}, "size": "100", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Jumping/Falling pose subroutine"}, {"label": "SamusMidAirGfx", "addr": {"U": "8DF8", "E": "8E54", "J": "8DF8"}, "size": "40", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Jumping/Falling pose GFX update subroutine"}, {"label": "SamusTurningAroundMidAir", "addr": {"U": "8E38", "E": "8E94", "J": "8E38"}, "size": "80", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning around and Jumping/Falling pose subroutine"}, {"label": "SamusTurningAroundMidAirGfx", "addr": {"U": "8EB8", "E": "8F14", "J": "8EB8"}, "size": "20", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning around and Jumping/Falling pose GFX update subroutine"}, {"label": "SamusStartingSpinJumpGfx", "addr": {"U": "8ED8", "E": "8F34", "J": "8ED8"}, "size": "24", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Starting a spin jump pose GFX update subroutine"}, {"label": "SamusSpinning", "addr": {"U": "8EFC", "E": "8F58", "J": "8EFC"}, "size": "144", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Spinning pose subroutine"}, {"label": "SamusSpinningGfx", "addr": {"U": "9040", "E": "909C", "J": "9040"}, "size": "5C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Spinning pose GFX update subroutine"}, {"label": "SamusStartingWallJump", "addr": {"U": "909C", "E": "90F8", "J": "909C"}, "size": "44", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Starting wall jump pose subroutine"}, {"label": "SamusStartingWallJumpGfx", "addr": {"U": "90E0", "E": "913C", "J": "90E0"}, "size": "24", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Starting wall jump pose GFX update subroutine"}, {"label": "SamusSpaceJumpingGfx", "addr": {"U": "9104", "E": "9160", "J": "9104"}, "size": "4C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Space jumping pose GFX update subroutine"}, {"label": "SamusScrewAttackingGfx", "addr": {"U": "9150", "E": "91AC", "J": "9150"}, "size": "C0", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Screw attacking pose GFX update subroutine"}, {"label": "SamusMorphing", "addr": {"U": "9210", "E": "926C", "J": "9210"}, "size": "20", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Morphing pose subroutine"}, {"label": "SamusMorphingGfx", "addr": {"U": "9230", "E": "928C", "J": "9230"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Morphing pose GFX update subroutine"}, {"label": "SamusMorphball", "addr": {"U": "924C", "E": "92A8", "J": "924C"}, "size": "170", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Morphball pose subroutine"}, {"label": "SamusRolling", "addr": {"U": "93BC", "E": "9418", "J": "93BC"}, "size": "CC", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Rolling pose subroutine"}, {"label": "SamusRollingGfx", "addr": {"U": "9488", "E": "94E4", "J": "9488"}, "size": "38", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Rolling pose GFX update subroutine"}, {"label": "SamusUnmorphing", "addr": {"U": "94C0", "E": "951C", "J": "94C0"}, "size": "48", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Unmorphing pose subroutine"}, {"label": "SamusUnmorphingGfx", "addr": {"U": "9508", "E": "9564", "J": "9508"}, "size": "24", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Unmorphing pose GFX update subroutine"}, {"label": "SamusMorphballMidAir", "addr": {"U": "952C", "E": "9588", "J": "952C"}, "size": "D8", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Jumping/Falling in morphball pose subroutine"}, {"label": "SamusHangingOnLedge", "addr": {"U": "9604", "E": "9660", "J": "9604"}, "size": "16C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Hanging on ledge pose subroutine"}, {"label": "SamusHangingOnLedgeGfx", "addr": {"U": "9770", "E": "97CC", "J": "9770"}, "size": "28", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Hanging on ledge pose GFX update subroutine"}, {"label": "SamusTurningToAimWhileHanging", "addr": {"U": "9798", "E": "97F4", "J": "9798"}, "size": "C8", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning to aim while hanging pose subroutine"}, {"label": "SamusTurningToAimWhileHangingGfx", "addr": {"U": "9860", "E": "98BC", "J": "9860"}, "size": "24", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning to aim while hanging pose GFX update subroutine"}, {"label": "SamusHidingArmCannonWhileHangingGfx", "addr": {"U": "9884", "E": "98E0", "J": "9884"}, "size": "30", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Hiding arm cannon while hanging pose GFX update subroutine"}, {"label": "SamusAimingWhileHanging", "addr": {"U": "98B4", "E": "9910", "J": "98B4"}, "size": "18C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Aiming while hanging pose subroutine"}, {"label": "SamusPullingSelfUp", "addr": {"U": "9A40", "E": "9A9C", "J": "9A40"}, "size": "28", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Pulling yourself up from hanging pose subroutine"}, {"label": "SamusPullingSelfUpGfx", "addr": {"U": "9A68", "E": "9AC4", "J": "9A68"}, "size": "2C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Pulling self up pose GFX update subroutine"}, {"label": "SamusPullingSelfForward", "addr": {"U": "9A94", "E": "9AF0", "J": "9A94"}, "size": "20", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Pulling self forward from hanging pose subroutine"}, {"label": "SamusPullingSelfForwardGfx", "addr": {"U": "9AB4", "E": "9B10", "J": "9AB4"}, "size": "2C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Pulling self forward pose GFX update subroutine"}, {"label": "SamusPullingSelfIntoMorphballTunnelGfx", "addr": {"U": "9AE0", "E": "9B3C", "J": "9AE0"}, "size": "48", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Pulling self into morphball tunnel pose GFX update subroutine"}, {"label": "SamusUsingAnElevator", "addr": {"U": "9B28", "E": "9B84", "J": "9B28"}, "size": "8C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Using an elevator pose subroutine"}, {"label": "SamusUsingAnElevatorGfx", "addr": {"U": "9BB4", "E": "9C10", "J": "9BB4"}, "size": "50", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Using an elevator pose GFX update subroutine"}, {"label": "SamusFacingTheForeground", "addr": {"U": "9C04", "E": "9C60", "J": "9C04"}, "size": "28", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Facing the foreground pose subroutine"}, {"label": "SamusTurningFromFacingForegroundGfx", "addr": {"U": "9C2C", "E": "9C88", "J": "9C2C"}, "size": "3C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning from facing the foreground pose GFX update subroutine"}, {"label": "SamusDelayBeforeShinesparkingGfx", "addr": {"U": "9C68", "E": "9CC4", "J": "9C68"}, "size": "38", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Delay before shinesparking pose GFX update subroutine"}, {"label": "SamusShinesparking", "addr": {"U": "9CA0", "E": "9CFC", "J": "9CA0"}, "size": "B0", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Shinesparking pose subroutine"}, {"label": "SamusShinesparkingGfx", "addr": {"U": "9D50", "E": "9DAC", "J": "9D50"}, "size": "8C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Shinesparking pose GFX update subroutine"}, {"label": "SamusShinesparkCollisionGfx", "addr": {"U": "9DDC", "E": "9E38", "J": "9DDC"}, "size": "14", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Shinesparking collision pose GFX update subroutine"}, {"label": "SamusDelayAfterShinesparkingGfx", "addr": {"U": "9DF0", "E": "9E4C", "J": "9DF0"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Delay after Shinesparking pose GFX update subroutine"}, {"label": "SamusDelayBeforeBallsparking", "addr": {"U": "9E0C", "E": "9E68", "J": "9E0C"}, "size": "28", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Delay before ballsparking pose subroutine"}, {"label": "SamusDelayBeforeBallsparkingGfx", "addr": {"U": "9E34", "E": "9E90", "J": "9E34"}, "size": "88", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Delay before ballparking pose GFX update subroutine"}, {"label": "SamusBallsparkingGfx", "addr": {"U": "9EBC", "E": "9F18", "J": "9EBC"}, "size": "7C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Ballparking pose GFX update subroutine"}, {"label": "SamusBallsparkCollisionGfx", "addr": {"U": "9F38", "E": "9F94", "J": "9F38"}, "size": "14", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Ballparking collision pose GFX update subroutine"}, {"label": "SamusOnZipline", "addr": {"U": "9F4C", "E": "9FA8", "J": "9F4C"}, "size": "58", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "On zipline pose subroutine"}, {"label": "SamusShootingOnZiplineGfx", "addr": {"U": "9FA4", "E": "A000", "J": "9FA4"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Shooting on zipline pose GFX update subroutine"}, {"label": "SamusMorphballOnZipline", "addr": {"U": "9FC0", "E": "A01C", "J": "9FC0"}, "size": "30", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Morphball on zipline pose subroutine"}, {"label": "SamusSavingLoadingGame", "addr": {"U": "9FF0", "E": "A04C", "J": "9FF0"}, "size": "18", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Saving/Loading game pose subroutine"}, {"label": "SamusTurningAroundToDowloadMapDataGfx", "addr": {"U": "A008", "E": "A064", "J": "A008"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning around to download map data pose GFX update subroutine"}, {"label": "SamusGettingHurt", "addr": {"U": "A024", "E": "A080", "J": "A024"}, "size": "68", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Getting hurt pose subroutine"}, {"label": "SamusGettingHurtGfx", "addr": {"U": "A08C", "E": "A0E8", "J": "A08C"}, "size": "20", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Getting hurt pose GFX update subroutine"}, {"label": "SamusGettingKnockedBack", "addr": {"U": "A0AC", "E": "A108", "J": "A0AC"}, "size": "30", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Getting knocked back pose subroutine"}, {"label": "SamusDying", "addr": {"U": "A0DC", "E": "A138", "J": "A0DC"}, "size": "10C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Dying pose subroutine"}, {"label": "SamusCrouchingToCrawlGfx", "addr": {"U": "A1E8", "E": "A244", "J": "A1E8"}, "size": "34", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Crouching to crawl pose GFX update subroutine"}, {"label": "SamusCrawlingStopped", "addr": {"U": "A21C", "E": "A278", "J": "A21C"}, "size": "68", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Crawling stopped pose subroutine"}, {"label": "SamusStartingToCrawlGfx", "addr": {"U": "A284", "E": "A2E0", "J": "A284"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Starting to crawl pose GFX update subroutine"}, {"label": "SamusCrawling", "addr": {"U": "A2A0", "E": "A2FC", "J": "A2A0"}, "size": "74", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Crawling pose subroutine"}, {"label": "SamusDyingGfx", "addr": {"U": "A314", "E": "A370", "J": "A314"}, "size": "44", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Dying pose GFX update subroutine"}, {"label": "SamusTurningAroundWhileCrawling", "addr": {"U": "A358", "E": "A3B4", "J": "A358"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning around while crawling pose subroutine"}, {"label": "SamusCrawlingGfx", "addr": {"U": "A374", "E": "A3D0", "J": "A374"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Crawling pose GFX update subroutine"}, {"label": "SamusGrabbingALedgeSuitlessGfx", "addr": {"U": "A390", "E": "A3EC", "J": "A390"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Samus grabbing a ledge suitless pose GFX update subroutine"}, {"label": "SamusFacingTheBackground", "addr": {"U": "A3AC", "E": "A408", "J": "A3AC"}, "size": "28", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Facing the background pose subroutine"}, {"label": "SamusTurningFromFacingBackgroundGfx", "addr": {"U": "A3D4", "E": "A430", "J": "A3D4"}, "size": "54", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Samus turning fromfacing the background pose GFX update subroutine"}, {"label": "SamusTurningToEnterEscapeShipGfx", "addr": {"U": "A428", "E": "A484", "J": "A428"}, "size": "1C", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewSamusPose", "type": "u8", "enum": "SamusPose", "notes": "New Samus pose (0xFF if none)"}, "notes": "Turning to enter escape ship pose GFX update subroutine"}, {"label": "SamusExecutePoseSubroutine", "addr": {"U": "A444", "E": "A4A0", "J": "A444"}, "size": {"U": "BC", "E": "D8", "J": "BC"}, "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "NewPose", "type": "u8", "enum": "SamusPose", "notes": "New pose"}, "notes": "Calls BXR1 to execute the current pose subroutines, also calls  SamusSpawnNewWeapon, SamusSetHighlightedWeapon, SamusLiquidDamage, SamusCheckShinesparking and SamusSetSpinningPose"}, {"label": "SamusUpdateVelocityAndPosition", "addr": {"U": "A500", "E": "A578", "J": "A500"}, "size": "188", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": null, "notes": "Updates the velocity and the position of samus"}, {"label": "SamusUpdateGraphicsRam", "addr": {"U": "A688", "E": "A700", "J": "A688"}, "size": "DE4", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "FacingLeftOrRight", "type": "u8", "notes": "0 if facing right, 1 if facing left"}], "return": null, "notes": "Updates Samus graphics, echo, and OAM"}, {"label": "SamusUpdatePalette", "addr": {"U": "B46C", "E": "B4E4", "J": "B46C"}, "size": "3FC", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": null, "notes": "Updates the palette of samus"}, {"label": "CheckPlayLowHealthSound", "addr": {"U": "B868", "E": "B8E0", "J": "B868"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the low health sound should be played"}, {"label": "SamusUpdateDrawDistanceAndStandingStatus", "addr": {"U": "B8A8", "E": "B920", "J": "B8A8"}, "size": "68", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusPhysicsPtr", "type": "SamusPhysics *", "notes": "Samus physics pointer"}], "return": null, "notes": "Updates the draw distances and the standing status"}, {"label": "UpdateArmCannonOffset", "addr": {"U": "B910", "E": "B988", "J": "B910"}, "size": "3A8", "mode": "thumb", "params": [{"label": "Direction", "type": "u8", "notes": "0 if facing right, 1 if facing left"}], "return": null, "notes": "Updates the arm cannon position offset"}, {"label": "InitSamusData", "addr": {"U": "BCB8", "E": "BD30", "J": "BCB8"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Initializes samus' data"}, {"label": "DrawSamus", "addr": {"U": "BDE8", "E": "BE60", "J": "BDE8"}, "size": "4F0", "mode": "thumb", "params": null, "return": null, "notes": "Draws samus"}, {"label": "DemoMainLoop", "addr": {"U": "C2D8", "E": "C350", "J": "C2D8"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Main loop for a demo"}, {"label": "UpdateDemoInput", "addr": {"U": "C384", "E": "C3FC", "J": "C384"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Updates the input for the current demo"}, {"label": "CopyDemoButtonInput", "addr": {"U": "C414", "E": "C48C", "J": "C414"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Copies the demo button"}, {"label": "InGameSubroutine", "addr": {"U": "C4B4", "E": "C52C", "J": "C4B4"}, "size": {"U": "244", "E": "234", "J": "244"}, "mode": "thumb", "params": null, "return": {"label": "ReturnToTitleScreen", "type": "bool", "notes": "Return to title screen"}, "notes": "Main loop in game"}, {"label": "SetVBlankCodeForInGame", "addr": {"U": "C6F8", "E": "C760", "J": "C6F8"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Sets the Vblank code for in game"}, {"label": "UpdateSamusGfx", "addr": {"U": "C734", "E": "C7E8", "J": "C734"}, "size": "160", "mode": "thumb", "params": [{"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}, {"label": "SamusPhysicsPtr", "type": "SamusPhysics *", "notes": "Samus physics pointer"}], "return": null, "notes": "Transfers samus' graphics and palettes to VRAM"}, {"label": "VBlankCodeDuringInGameLoads", "addr": {"U": "C894", "E": "C948", "J": "C894"}, "size": "158", "mode": "thumb", "params": null, "return": null, "notes": "VBlank code during in game loads"}, {"label": "VBlankCodeDuringInGame", "addr": {"U": "CA6C", "E": "CB20", "J": "CA6C"}, "size": "134", "mode": "thumb", "params": null, "return": null, "notes": "VBlank code during in game"}, {"label": "InitAndLoadGenerics", "addr": {"U": "CBAC", "E": "CC60", "J": "CBAC"}, "size": "23C", "mode": "thumb", "params": null, "return": null, "notes": "Loads and/or initializes generic data"}, {"label": "UpdateSprites", "addr": {"U": "CF00", "E": "CFB4", "J": "CF00"}, "size": "42C", "mode": "thumb", "params": null, "return": null, "notes": "Calls sprites AI, updates sprite info (animation counter, stun timer), updates sprite debris, does checks related to samus on sprite and updates the alarm timer"}, {"label": "UpdateSpriteAnimation", "addr": {"U": "D32C", "E": "D3E0", "J": "D32C"}, "size": "40", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": null, "notes": "Updates the animation duration counter and the current animation frame"}, {"label": "DrawOnScreenSprites", "addr": {"U": "D430", "E": "D4E4", "J": "D430"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Loop that calls the DrawSprite function, actually draws sprites, updates sprite debris and is affected by the DisableDrawingSprites flag"}, {"label": "DrawSprite", "addr": {"U": "D544", "E": "D5F8", "J": "D544"}, "size": "890", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "RamSlot", "type": "u32", "notes": "RAM slot?"}], "return": null, "notes": "Draws the sprite based on the data in r0 and r1"}, {"label": "CheckSpriteIsOnScreen", "addr": {"U": "DDD4", "E": "DE88", "J": "DDD4"}, "size": "150", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": null, "notes": "Checks if the sprite in r0 is on screen"}, {"label": "LoadSpriteDataForRoom", "addr": {"U": "DF24", "E": "DFD8", "J": "DF24"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Calls : ClearSpriteData, LoadSpriteset, CheckReloadEscapeDigitsGraphics, LoadLocationText,  LoadRoomSprites and SpawnSpacePiratesWaiting"}, {"label": "LoadSpriteset", "addr": {"U": "DF84", "E": "E038", "J": "DF84"}, "size": "100", "mode": "thumb", "params": null, "return": null, "notes": "Loads a spriteset"}, {"label": "LoadNewSpriteGfx", "addr": {"U": "E084", "E": "E138", "J": "E084"}, "size": "2C", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}, {"label": "SpriteGfxRow", "type": "u8", "notes": "Sprite graphics row"}], "return": null, "notes": "Loads a sprite graphics"}, {"label": "LoadNewSpritePalette", "addr": {"U": "E0B0", "E": "E164", "J": "E0B0"}, "size": "40", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}, {"label": "SpriteGfxRow", "type": "u8", "notes": "Sprite graphics row"}, {"label": "LengthRows", "type": "u8", "notes": "Length (rows)"}], "return": null, "notes": "Loads a sprite palette"}, {"label": "ClearSpriteData", "addr": {"U": "E0F0", "E": "E1A4", "J": "E0F0"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Clears the sprite data"}, {"label": "InitSpritesInRoom", "addr": {"U": "E134", "E": "E1E8", "J": "E134"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Loads the sprites of a room"}, {"label": "InitPrimarySprite", "addr": {"U": "E17C", "E": "E230", "J": "E17C"}, "size": "DC", "mode": "thumb", "params": [{"label": "SpritePropertySpritesetSlot", "type": "u8", "notes": "Sprite property/spriteset slot"}, {"label": "SpriteYPosition", "type": "u16", "notes": "Sprite Y position"}, {"label": "SpriteXPosition", "type": "u16", "notes": "Sprite X position"}, {"label": "RoomSpriteNum", "type": "u8", "notes": "Room sprite number"}], "return": null, "notes": "Initializes a primary sprite"}, {"label": "SpawnNewSecondarySprite", "addr": {"U": "E258", "E": "E30C", "J": "E258"}, "size": "C4", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "SecondarySpriteID", "notes": "Sprite ID"}, {"label": "PartNum", "type": "u8", "notes": "Part number"}, {"label": "SpritesetGfxRow", "type": "u8", "notes": "Spriteset graphics row"}, {"label": "PrimarySpriteRamSlot", "type": "u8", "notes": "Primary sprite RAM slot"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "Status", "type": "u16", "tags": ["flags"], "enum": "SpriteStatus"}], "return": {"label": "AssignedSpriteRamSlot", "type": "u8", "notes": "Assigned sprite RAM slot, 0xFF otherwise"}, "notes": "Spawns a new secondary sprite"}, {"label": "SpawnNewPrimarySprite", "addr": {"U": "E31C", "E": "E3D0", "J": "E31C"}, "size": "B8", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}, {"label": "RoomSlot", "type": "u8", "notes": "Room slot"}, {"label": "SpritesetGfxRow", "type": "u8", "notes": "Spriteset graphics row"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "Status", "type": "u16", "tags": ["flags"], "enum": "SpriteStatus"}], "return": {"label": "AssignedSpriteRamSlot", "type": "u8", "notes": "Assigned sprite RAM slot, 0xFF otherwise"}, "notes": "Spawns a new primary sprite"}, {"label": "SpawnDropsAndFollowers", "addr": {"U": "E3D4", "E": "E488", "J": "E3D4"}, "size": "C4", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}, {"label": "RoomSlot", "type": "u8", "notes": "Room slot"}, {"label": "SpritesetGfxRow", "type": "u8", "notes": "Spriteset graphics row"}, {"label": "PrimarySpriteRamSlot", "type": "u8", "notes": "Primary sprite RAM slot"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "Status", "type": "u16", "tags": ["flags"], "enum": "SpriteStatus"}], "return": {"label": "AssignedSpriteRamSlot", "type": "u8", "notes": "Assigned sprite RAM slot, 0xFF otherwise"}, "notes": "Spawns a drop according to the data in parameters is also used to spawn the follower sprites"}, {"label": "LoadLocationTextSprite", "addr": {"U": "E498", "E": "E54C", "J": "E498"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a new primary sprite to be a location text"}, {"label": "TakeDamageFromSprite", "addr": {"U": "E634", "E": "E6E8", "J": "E634"}, "size": "C4", "mode": "thumb", "params": [{"label": "KnockbackFlag", "type": "bool", "notes": "Knockback flag"}, {"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "DamageMultiplier", "type": "u16", "notes": "Damage multiplier"}], "return": {"label": "EnergyAt0", "type": "bool", "notes": "Energy at 0"}, "notes": "Handles taking damage from a sprite"}, {"label": "CheckObjectsTouching", "addr": {"U": "E6F8", "E": "E7AC", "J": "E6F8"}, "size": "50", "mode": "thumb", "params": [{"label": "Object1TopPosition", "type": "u16", "notes": "Object 1 top position"}, {"label": "Object1BottomPosition", "type": "u16", "notes": "Object 1 bottom position"}, {"label": "Object1LeftPosition", "type": "u16", "notes": "Object 1 left position"}, {"label": "Object1RightPosition", "type": "u16", "notes": "Object 1 right position"}, {"label": "Object2TopPosition", "type": "u16", "notes": "Object 2 top position"}, {"label": "Object2BottomPosition", "type": "u16", "notes": "Object 2 bottom position"}, {"label": "Object2LeftPosition", "type": "u16", "notes": "Object 2 left position"}, {"label": "Object2RightPosition", "type": "u16", "notes": "Object 2 right position"}], "return": {"label": "ObjectsTouching", "type": "bool", "notes": "Objects touching"}, "notes": "Checks if 2 objects are touching"}, {"label": "SamusAndSpriteCollision", "addr": {"U": "E748", "E": "E7FC", "J": "E748"}, "size": "C18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is colliding with a sprite, applies that collision"}, {"label": "CheckVerticalCollisionAtPosition", "addr": {"U": "F360", "E": "F414", "J": "F360"}, "size": "11C", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": {"label": "BlockTopEdgeYPosition", "type": "u16", "notes": "Block top edge Y position"}, "notes": "Checks the vertical collision at the position"}, {"label": "CheckVerticalCollisionAtPosition_Slopes", "addr": {"U": "F47C", "E": "F530", "J": "F47C"}, "size": "118", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": {"label": "BlockTopEdgeYPosition", "type": "u16", "notes": "Block top edge Y position"}, "notes": "Checks the vertical collision at the position, accouts for slopes"}, {"label": "CheckCollisionAtPosition", "addr": {"U": "F688", "E": "F73C", "J": "F688"}, "size": "98", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Checks the collision at the position"}, {"label": "GetCollisionAtPosition", "addr": {"U": "F720", "E": "F7D4", "J": "F720"}, "size": "7C", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": {"label": "CollisionCheck", "type": "u32", "notes": "Collision check"}, "notes": "Checks the collision at the position and return the collision check"}, {"label": "CurrSpriteFalling", "addr": {"U": "F79C", "E": "F850", "J": "F79C"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the current sprite falling, seems unused"}, {"label": "SpriteChooseRandomXFlip", "addr": {"U": "F80C", "E": "F8C0", "J": "F80C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Chooses a random X flip for the current sprite"}, {"label": "SpriteChooseRandomXDirection", "addr": {"U": "F844", "E": "F8F8", "J": "F844"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Chosses a random X direction for the current sprite"}, {"label": "SpriteChooseRandomXDirection_RoomSlot", "addr": {"U": "F880", "E": "F934", "J": "F880"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Sprite choose random X direction with room slot"}, {"label": "MakeSpriteFaceSamus_XFlip", "addr": {"U": "F8B0", "E": "F964", "J": "F8B0"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Makes the sprite face samus using X flip"}, {"label": "MakeSpriteFaceSamus_Direction", "addr": {"U": "F8E0", "E": "F994", "J": "F8E0"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Makes the sprite face samus using direction"}, {"label": "MakeSpriteFaceAwayFromSamus_XFlip", "addr": {"U": "F914", "E": "F9C8", "J": "F914"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Makes the sprite face away from samus using X flip"}, {"label": "MakeSpriteFaceAwayFromSamus_Direction", "addr": {"U": "F944", "E": "F9F8", "J": "F944"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Makes the sprite face away from samus using direction"}, {"label": "MechaRidleyMissileRotation", "addr": {"U": "FA78", "E": "FB2C", "J": "FA78"}, "size": "150", "mode": "thumb", "params": [{"label": "OamRotation", "type": "u16", "notes": "OAM rotation"}, {"label": "SamusYPosition", "type": "u16", "notes": "Samus Y position"}, {"label": "SamusXPosition", "type": "u16", "notes": "Samus X position"}, {"label": "SpriteYPosition", "type": "u16", "notes": "Sprite Y position"}, {"label": "SpriteXPosition", "type": "u16", "notes": "Sprite X position"}], "return": {"label": "NewOamRotation", "type": "u16", "notes": "New OAM rotation"}, "notes": "Calculates the new OAM rotation for the current sprite to face samus"}, {"label": "CheckEndOfSpriteAnimation_Curr", "addr": {"U": "FBC8", "E": "FC7C", "J": "FBC8"}, "size": "38", "mode": "thumb", "params": null, "return": {"label": "AnimationEnded", "type": "bool", "notes": "Animation ended"}, "notes": "Checks if the animation of the current sprite has ended"}, {"label": "CheckNearEndOfSpriteAnimation_Curr", "addr": {"U": "FC00", "E": "FCB4", "J": "FC00"}, "size": "3C", "mode": "thumb", "params": null, "return": {"label": "AnimationNearEnd", "type": "bool", "notes": "Animation near end"}, "notes": "Checks if the animation of the current sprite has nearly ended"}, {"label": "CheckEndOfSpriteAnimation_Slot", "addr": {"U": "FC3C", "E": "FCF0", "J": "FC3C"}, "size": "48", "mode": "thumb", "params": [{"label": "SpriteSlotNum", "type": "u8", "notes": "Sprite slot number"}], "return": {"label": "AnimationEnded", "type": "bool", "notes": "Animation ended"}, "notes": "Checks if the animation of the sprite with the room slot has ended"}, {"label": "CheckNearEndOfSpriteAnimation_Slot", "addr": {"U": "FC84", "E": "FD38", "J": "FC84"}, "size": "4C", "mode": "thumb", "params": [{"label": "SpriteSlotNum", "type": "u8", "notes": "Sprite slot number"}], "return": {"label": "AnimationNearEnd", "type": "bool", "notes": "Animation near end"}, "notes": "Checks if the animation of the sprite with the room slot has nearly ended"}, {"label": "CheckEndOfSubSpriteData1Animation", "addr": {"U": "FCD0", "E": "FD84", "J": "FCD0"}, "size": "38", "mode": "thumb", "params": null, "return": {"label": "AnimationEnded", "type": "bool", "notes": "Animation ended"}, "notes": "Checks if the sprite animation of the sub sprite data 1 has ended"}, {"label": "CheckNearEndOfSubSpriteData1Animation", "addr": {"U": "FD08", "E": "FDBC", "J": "FD08"}, "size": "3C", "mode": "thumb", "params": null, "return": {"label": "AnimationNearEnd", "type": "bool", "notes": "Animation near end"}, "notes": "Checks if the sprite animation of the sub sprite data 1 has nearly ended"}, {"label": "CheckEndOfSubSpriteData2Animation", "addr": {"U": "FD44", "E": "FDF8", "J": "FD44"}, "size": "38", "mode": "thumb", "params": null, "return": {"label": "AnimationEnded", "type": "bool", "notes": "Animation ended"}, "notes": "Checks if the sprite animation of the sub sprite data 2 has ended"}, {"label": "CheckEndOfSubSpriteAnimation_Ptr", "addr": {"U": "FD7C", "E": "FE30", "J": "FD7C"}, "size": "30", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": {"label": "AnimationEnded", "type": "bool", "notes": "Animation ended"}, "notes": "Checks if the sprite animation of the sub sprite data in r0 has ended"}, {"label": "CheckNearEndOfSubSpriteAnimation_Ptr", "addr": {"U": "FDAC", "E": "FE60", "J": "FDAC"}, "size": "34", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": {"label": "AnimationNearEnd", "type": "bool", "notes": "Animation near end"}, "notes": "Checks if the sprite animation of the sub sprite data in r0 has nearly ended"}, {"label": "CheckSamusNearSprite_LeftRight", "addr": {"U": "FDE0", "E": "FE94", "J": "FDE0"}, "size": "68", "mode": "thumb", "params": [{"label": "YRange", "type": "u16", "notes": "Y range"}, {"label": "XRange", "type": "u16", "notes": "X range"}], "return": {"label": "Side", "type": "u8", "notes": "4 if left of sprite, 8 if right of sprite, 0 if out of range"}, "notes": "Checks if samus is in range of the sprite on the left and right with r0 and r1"}, {"label": "CheckSamusNearSprite_AboveBelow", "addr": {"U": "FE48", "E": "FEFC", "J": "FE48"}, "size": "68", "mode": "thumb", "params": [{"label": "YRange", "type": "u16", "notes": "Y range"}, {"label": "XRange", "type": "u16", "notes": "X range"}], "return": {"label": "Side", "type": "u8", "notes": "1 if above sprite, 2 if below sprite, 0 if out of range"}, "notes": "Checks if samus is in range of the sprite above and below with r0 and r1"}, {"label": "CheckSamusNearSprite_FrontBehindX", "addr": {"U": "FEB0", "E": "FF64", "J": "FEB0"}, "size": "B0", "mode": "thumb", "params": [{"label": "YRange", "type": "u16", "notes": "Y range"}, {"label": "XRangeFront", "type": "u16", "notes": "X range (front)"}, {"label": "XRangeBehind", "type": "u16", "notes": "X range (behind)"}], "return": {"label": "Side", "type": "u8", "notes": "3 if in front, 0xC if behind, 0 if out of range"}, "notes": "Checks if samus is in range of the sprite front and behind with r0, r1 and r2"}, {"label": "SamusStandingOnSprite", "addr": {"U": "FF60", "E": "10014", "J": "FF60"}, "size": "88", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": null, "notes": "Handles samus standing on a sprite"}, {"label": "UpdateSpriteFreezeTimer", "addr": {"U": "FFE8", "E": "1009C", "J": "FFE8"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Updates the current sprite freeze timer"}, {"label": "SpriteUnfreezeAnimation_EasyMode", "addr": {"U": "1004C", "E": "10100", "J": "1004C"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Unfreeze animation for metroids on easy mode and for winged ripper on any difficulty"}, {"label": "MetroidUnfreezeAnimation", "addr": {"U": "100A4", "E": "10158", "J": "100A4"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Unfreeze animation for metroids on normal and hard difficulty"}, {"label": "UpdateSecondarySpriteFreezeTimer", "addr": {"U": "100FC", "E": "101B0", "J": "100FC"}, "size": "9C", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "SecondarySpriteID", "notes": "Sprite ID"}, {"label": "PrimaryRamSlot", "type": "u8", "notes": "Primary RAM slot"}], "return": null, "notes": "Updates the freeze timer of the secondary sprites with r0 and r1"}, {"label": "UpdatePrimarySpriteFreezeTimer", "addr": {"U": "10198", "E": "1024C", "J": "10198"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the freeze timer of the primary sprite of the current sprite"}, {"label": "UnfreezeSecondarySprites", "addr": {"U": "101F4", "E": "102A8", "J": "101F4"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Unfreeze secondary sprites (unused?)"}, {"label": "RefillEnergy", "addr": {"U": "1025C", "E": "10310", "J": "1025C"}, "size": "44", "mode": "thumb", "params": null, "return": {"label": "EnergyNotFullAtStart", "type": "bool", "notes": "Energy not full at start"}, "notes": "Refills the energy of samus"}, {"label": "RefillMissiles", "addr": {"U": "102A0", "E": "10354", "J": "102A0"}, "size": "44", "mode": "thumb", "params": null, "return": {"label": "MissilesNotFullAtStart", "type": "bool", "notes": "Missiles not full at start"}, "notes": "Refills the missiles of samus"}, {"label": "RefillSuperMissiles", "addr": {"U": "102E4", "E": "10398", "J": "102E4"}, "size": "44", "mode": "thumb", "params": null, "return": {"label": "SuperMissilesNotFullAtStart", "type": "bool", "notes": "Super missiles not full at start"}, "notes": "Refill super missiles"}, {"label": "RefillPowerBombs", "addr": {"U": "10328", "E": "103DC", "J": "10328"}, "size": "44", "mode": "thumb", "params": null, "return": {"label": "PowerBombsNotFullAtStart", "type": "bool", "notes": "Power bombs not full at start"}, "notes": "Refills the power bombs of samus"}, {"label": "CheckCrouchingOrMorphed", "addr": {"U": "1036C", "E": "10420", "J": "1036C"}, "size": "110", "mode": "thumb", "params": null, "return": {"label": "CrouchingOrMorphed", "type": "bool", "notes": "Crouching or morphed"}, "notes": "Checks if samus is crouching or morphing"}, {"label": "CheckCrouchingOrCrawling", "addr": {"U": "1047C", "E": "10530", "J": "1047C"}, "size": "2C", "mode": "thumb", "params": null, "return": {"label": "CrouchingOrCrawling", "type": "bool", "notes": "Crouching or crawling"}, "notes": "Checks if samus is crouching or crawling"}, {"label": "CheckMorphed", "addr": {"U": "104A8", "E": "1055C", "J": "104A8"}, "size": "24", "mode": "thumb", "params": null, "return": {"label": "Morphed", "type": "bool"}, "notes": "Checks if samus is morphed"}, {"label": "CheckSamusPosePausesSprites", "addr": {"U": "104CC", "E": "10580", "J": "104CC"}, "size": "2C", "mode": "thumb", "params": null, "return": {"label": "Paused", "type": "bool"}, "notes": "Checks if samus has a pose that stops the sprite activity"}, {"label": "SpriteTakeDamageFromSamusContact", "addr": {"U": "104F8", "E": "105AC", "J": "104F8"}, "size": "1B0", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "SamusDataPtr", "type": "SamusData *", "notes": "Samus data pointer"}], "return": {"label": "DamageContactType", "type": "u8", "notes": "Damage contact type (0 = none, 1 = shinespark, 2 = speedbooster, 3 = screw attack, 4 = pseudo screw)"}, "notes": "Determines if a sprite should take damage when entering in collision with  samus and applies said damage"}, {"label": "CheckPullingSelfUp", "addr": {"U": "106A8", "E": "1075C", "J": "106A8"}, "size": "20", "mode": "thumb", "params": null, "return": {"label": "PullingSelfUp", "type": "bool", "notes": "Pulling self up"}, "notes": "Checks if samus is pulling herself up"}, {"label": "CheckOnZipline", "addr": {"U": "106C8", "E": "1077C", "J": "106C8"}, "size": "20", "mode": "thumb", "params": null, "return": {"label": "OnAZipline", "type": "bool", "notes": "On a zipline"}, "notes": "Checks if samus is on a zipline"}, {"label": "CountPrimarySprites", "addr": {"U": "106E8", "E": "1079C", "J": "106E8"}, "size": "50", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": {"label": "PrimarySpriteCount", "type": "u8", "notes": "Primary sprite count"}, "notes": "Counts the number of primary sprites with r0"}, {"label": "CountSecondarySpritesWithCurrPrimarySlot", "addr": {"U": "10738", "E": "107EC", "J": "10738"}, "size": "60", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "SecondarySpriteID", "notes": "Sprite ID"}], "return": {"label": "SecondarySpriteCount", "type": "u8", "notes": "Secondary sprite count"}, "notes": "Counts the number of secondary sprites with r0 and the current sprite RAM slot"}, {"label": "CountPrimarySpritesWithCurrPrimarySlot", "addr": {"U": "10798", "E": "1084C", "J": "10798"}, "size": "60", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": {"label": "PrimarySpriteCount", "type": "u8", "notes": "Primary sprite count"}, "notes": "Counts the number of primary sprites with r0 and the current sprite RAM slot"}, {"label": "FindPrimarySprite", "addr": {"U": "107F8", "E": "108AC", "J": "107F8"}, "size": "58", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": {"label": "SpriteRamSlot", "type": "u8", "notes": "Sprite RAM slot, 0xFF otherwise"}, "notes": "Finds the first primary sprite with r0"}, {"label": "FindSecondarySpriteWithPartNumber", "addr": {"U": "10850", "E": "10904", "J": "10850"}, "size": "60", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "SecondarySpriteID", "notes": "Sprite ID"}, {"label": "PartNum", "type": "u8", "notes": "Part number"}], "return": {"label": "SpriteRamSlot", "type": "u8", "notes": "Sprite RAM slot, 0xFF otherwise"}, "notes": "Finds the first secondary sprite with r0 and r1"}, {"label": "CheckCurrEnemyHasDrop", "addr": {"U": "108B0", "E": "10964", "J": "108B0"}, "size": "50", "mode": "thumb", "params": null, "return": {"label": "CurrEnemyHasDrop", "type": "bool", "notes": "Current enemy has drop"}, "notes": "Checks if the current sprite has a drop"}, {"label": "CountEnemyDrops", "addr": {"U": "10900", "E": "109B4", "J": "10900"}, "size": "44", "mode": "thumb", "params": null, "return": {"label": "EnemyDropCount", "type": "u8", "notes": "Enemy drop count"}, "notes": "Counts the number of drops the current enemy has"}, {"label": "MoveMechaRidleyMissile", "addr": {"U": "10944", "E": "109F8", "J": "10944"}, "size": "254", "mode": "thumb", "params": [{"label": "SamusYPosition", "type": "u16", "notes": "Samus Y position"}, {"label": "SamusXPosition", "type": "u16", "notes": "Samus X position"}, {"label": "MissileYSpeed", "type": "u8", "notes": "Missile Y speed"}, {"label": "MissileXSpeed", "type": "u8", "notes": "Missile X speed"}, {"label": "SpeedDivisor", "type": "u8", "notes": "Speed divisor"}], "return": null, "notes": "Handles a mecha ridley missile moving"}, {"label": "RidleyFireballMove", "addr": {"U": "10B98", "E": "10C4C", "J": "10B98"}, "size": "158", "mode": "thumb", "params": [{"label": "SamusYPosition", "type": "u16", "notes": "Samus Y position"}, {"label": "SamusXPosition", "type": "u16", "notes": "Samus X position"}, {"label": "YSpeed", "type": "u8", "notes": "Y speed"}, {"label": "XSpeed", "type": "u8", "notes": "X speed"}, {"label": "SpeedDivisor", "type": "u8", "notes": "Speed divisor"}], "return": null, "notes": "Handles a ridley fireball moving"}, {"label": "UpdateSpriteStunTimer", "addr": {"U": "10CF0", "E": "10DA4", "J": "10CF0"}, "size": "78", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": null, "notes": "Updates the invicibilty stun flash timer of the sprite in r0"}, {"label": "RandomSpriteDebris", "addr": {"U": "10D68", "E": "10E1C", "J": "10D68"}, "size": "128", "mode": "thumb", "params": [{"label": "CloudType", "type": "u8", "enum": "DebrisCloudType", "notes": "Cloud type"}, {"label": "NumOfDebris", "type": "u8", "notes": "Number of debris"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Initialize 1 to 3 sprite debris between a set of 2  choosed randomly (only the debris type changes)"}, {"label": "GetAmmoDropSpriteID", "addr": {"U": "10E90", "E": "10F44", "J": "10E90"}, "size": "5C", "mode": "thumb", "params": [{"label": "RandomNum", "type": "u8", "notes": "Random number"}], "return": {"label": "AmmoDropSpriteID", "type": "u8", "enum": "PrimarySpriteID", "notes": "Ammo drop sprite ID, 0 otherwise"}, "notes": "Gets the ammo sprite ID"}, {"label": "DetermineEnemyDropSpriteID", "addr": {"U": "10EEC", "E": "10FA0", "J": "10EEC"}, "size": "198", "mode": "thumb", "params": null, "return": {"label": "EnemyDropSpriteID", "type": "u8", "enum": "PrimarySpriteID", "notes": "Enemy drop sprite ID, 0 otherwise"}, "notes": "Determines the enemy drop"}, {"label": "SpriteDeath", "addr": {"U": "11084", "E": "11138", "J": "11084"}, "size": "1FC", "mode": "thumb", "params": [{"label": "DeathType", "type": "u8", "notes": "Death type (0 = normal, 1 = respawning, 2 = already has drop)"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "PlaySoundFlag", "type": "bool", "notes": "Play sound flag"}, {"label": "ParticleEffect", "type": "u8", "enum": "ParticleEffect", "notes": "Particle effect"}], "return": null, "notes": "Called when a sprite dies, spawn a drop, calls RandomSpriteDebris, SetParticleEffect and calls SpawnDrop if r0 = 1"}, {"label": "IsSpriteStunned", "addr": {"U": "11280", "E": "11334", "J": "11280"}, "size": "48", "mode": "thumb", "params": null, "return": {"label": "SpriteIsStunned", "type": "bool", "notes": "Sprite is stunned"}, "notes": "Checks if a sprite is stunned"}, {"label": "IsSpriteOnScreenAndShaking", "addr": {"U": "112C8", "E": "1137C", "J": "112C8"}, "size": "38", "mode": "thumb", "params": null, "return": {"label": "SpriteOnScreenAndScreenShakeIsActive", "type": "bool", "notes": "Sprite on-screen and screen shake is active"}, "notes": "Checks if a sprite is on screen and a screen shake is active (used in sova, zoomer and zeela AI)"}, {"label": "UpdateSubSprite1Animation", "addr": {"U": "11330", "E": "113E4", "J": "11330"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the animation duration counter and the current animation frame of the sub sprite data 1"}, {"label": "SyncCurrSpritePositionWithSubSprite1Position", "addr": {"U": "1136C", "E": "11420", "J": "1136C"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the position of the current sprite with the position of the sub sprite data 1"}, {"label": "SyncCurrSpritePositionWithSubSprite1OAM", "addr": {"U": "113B0", "E": "11464", "J": "113B0"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Syncronises the current sprite position with the sub sprite data 1 and the X/Y coordinates of its OAM data"}, {"label": "UpdateSubSprite2Animation", "addr": {"U": "11410", "E": "114C4", "J": "11410"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the animation duration counter and the current animation frame of the sub sprite data 2"}, {"label": "SyncCurrSpritePositionWithSubSprite2OAM", "addr": {"U": "1144C", "E": "11500", "J": "1144C"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Syncronises the current sprite position with the sub sprite data 2 and the X/Y coordinates of its OAM data"}, {"label": "UpdateSubSpriteAnimation", "addr": {"U": "114AC", "E": "11560", "J": "114AC"}, "size": "38", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Updates the animation duration counter and the current animation frame of the sub sprite data in r0"}, {"label": "SyncCurrSpritePositionWithSubSpriteOAM", "addr": {"U": "114E4", "E": "11598", "J": "114E4"}, "size": "3C", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Synchronizes the position of the current sprite with the position of the sub sprite data in r0"}, {"label": "SpriteCheckOverlappingSamus", "addr": {"U": "1157C", "E": "11630", "J": "1157C"}, "size": "A4", "mode": "thumb", "params": null, "return": {"label": "Overlapping", "type": "bool"}, "notes": "Calls CheckObjectsTouching to detect collision between the current sprite and samus' draw distance offsets"}, {"label": "SetSpriteSplashEffect", "addr": {"U": "11620", "E": "116D4", "J": "11620"}, "size": "AC", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "SplashSize", "type": "u8", "notes": "Splash size (0 = none, 1 = small, 2 = big, 3 = huge)"}], "return": null, "notes": "Handles the splashing effect when a sprite goes in/out of a room effect"}, {"label": "CheckSpriteLeavingLiquid", "addr": {"U": "116CC", "E": "11780", "J": "116CC"}, "size": "4C", "mode": "thumb", "params": [{"label": "PrevYPosition", "type": "u16", "notes": "Previous Y position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "SplashSize", "type": "u8", "notes": "Splash size"}], "return": {"label": "LeavingLiquid", "type": "bool", "notes": "Leaving liquid"}, "notes": "Checks if the current sprite is going out of the current room effect"}, {"label": "CheckSpriteEnteringLiquid", "addr": {"U": "11718", "E": "117CC", "J": "11718"}, "size": "44", "mode": "thumb", "params": [{"label": "PrevYPosition", "type": "u16", "notes": "Previous Y position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "SplashSize", "type": "u8", "notes": "Splash size"}], "return": {"label": "EnteringLiquid", "type": "bool", "notes": "Entering liquid"}, "notes": "Checks if the current sprite is going in the current room effect"}, {"label": "GetNumOfItemsCollected", "addr": {"U": "1175C", "E": "11810", "J": "1175C"}, "size": "2C", "mode": "thumb", "params": null, "return": {"label": "NumOfItemsCollected", "type": "u32", "notes": "Number of items collected"}, "notes": "Gets the current completion percentage"}, {"label": "SetDebrisSplashEffect", "addr": {"U": "11788", "E": "1183C", "J": "11788"}, "size": "2C", "mode": "thumb", "params": [{"label": "PrevYPosition", "type": "u16", "notes": "Previous Y position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Handles the splashing effect when a debris goes in a room effect"}, {"label": "ProcessSpriteDebris", "addr": {"U": "117B4", "E": "11868", "J": "117B4"}, "size": "4D4", "mode": "thumb", "params": [{"label": "DebrisDataPtr", "type": "SpriteDebris *", "notes": "Debris data pointer"}], "return": null, "notes": "Processes the sprite debris in r0"}, {"label": "UpdateAllSpriteDebris", "addr": {"U": "11C88", "E": "11D3C", "J": "11C88"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Loops on all sprite debris and calls ProcessSpriteDebris also updates the animation related info"}, {"label": "DrawSpriteDebris", "addr": {"U": "11CF4", "E": "11DA8", "J": "11CF4"}, "size": "110", "mode": "thumb", "params": [{"label": "SpriteDebrisPtr", "type": "SpriteDebris *", "notes": "Sprite debris pointer"}], "return": null, "notes": "Draws the sprite debris in r0"}, {"label": "DrawAllSpriteDebris", "addr": {"U": "11E04", "E": "11EB8", "J": "11E04"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Loops on all sprite debris and calls DrawSpriteDebris"}, {"label": "InitSpriteDebris", "addr": {"U": "11E48", "E": "11EFC", "J": "11E48"}, "size": "90", "mode": "thumb", "params": [{"label": "CloudType", "type": "u8", "notes": "Cloud type"}, {"label": "DebrisType", "type": "u8", "enum": "SpriteDebrisType", "notes": "Debris type"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Initializes a sprite debris"}, {"label": "GetBrinstarLocationTextNum", "addr": {"U": "11ED8", "E": "11F8C", "J": "11ED8"}, "size": "B8", "mode": "thumb", "params": null, "return": {"label": "LocationTextNum", "type": "u8", "notes": "Location text number, 0xFF otherwise"}, "notes": "Gets the location text of the current room in brinstar"}, {"label": "GetKraidLocationTextNum", "addr": {"U": "11F90", "E": "12044", "J": "11F90"}, "size": "D0", "mode": "thumb", "params": null, "return": {"label": "LocationTextNum", "type": "u8", "notes": "Location text number, 0xFF otherwise"}, "notes": "Gets the location text of the current room in kraid"}, {"label": "GetCrateriaLocationTextNum", "addr": {"U": "12060", "E": "12114", "J": "12060"}, "size": "7C", "mode": "thumb", "params": null, "return": {"label": "LocationTextNum", "type": "u8", "notes": "Location text number, 0xFF otherwise"}, "notes": "Gets the location text of the current room in crateria"}, {"label": "GetNorfairLocationTextNum", "addr": {"U": "120DC", "E": "12190", "J": "120DC"}, "size": "E8", "mode": "thumb", "params": null, "return": {"label": "LocationTextNum", "type": "u8", "notes": "Location text number, 0xFF otherwise"}, "notes": "Gets the location text of the current room in norfair"}, {"label": "GetRidleyLocationTextNum", "addr": {"U": "121C4", "E": "12278", "J": "121C4"}, "size": "98", "mode": "thumb", "params": null, "return": {"label": "LocationTextNum", "type": "u8", "notes": "Location text number, 0xFF otherwise"}, "notes": "Gets the location text of the current room in ridley"}, {"label": "GetChozodiaLocationTextNum", "addr": {"U": "1225C", "E": "12310", "J": "1225C"}, "size": "1A8", "mode": "thumb", "params": null, "return": {"label": "LocationTextNum", "type": "u8", "notes": "Location text number, 0xFF otherwise"}, "notes": "Gets the location text of the current room in chozodia"}, {"label": "GetTourianLocationTextNum", "addr": {"U": "12404", "E": "124B8", "J": "12404"}, "size": "80", "mode": "thumb", "params": null, "return": {"label": "LocationTextNum", "type": "u8", "notes": "Location text number, 0xFF otherwise"}, "notes": "Gets the location text of the current room in tourian"}, {"label": "LoadAreaBannerGfx", "addr": {"U": "12484", "E": "12538", "J": "12484"}, "size": "58", "mode": "thumb", "params": null, "return": {"label": "GfxSlot", "type": "u8", "notes": "Graphics slot"}, "notes": "Loads area banner graphics and palette"}, {"label": "GetLocationTextGfxSlot", "addr": {"U": "124DC", "E": "12590", "J": "124DC"}, "size": "10C", "mode": "thumb", "params": null, "return": {"label": "GfxSlot", "type": "u8", "notes": "Graphics slot"}, "notes": "Gets the current area location text number and returns the GFX slot for it"}, {"label": "ChozoStatueEcho", "addr": {"U": "125E8", "E": "1269C", "J": "125E8"}, "size": "160", "mode": "thumb", "params": [{"label": "Stage", "type": "u8"}], "return": null, "notes": "Spawns a new chozo statue movement secondary sprite"}, {"label": "ChozoStatueMovement_AI", "addr": {"U": "12748", "E": "127FC", "J": "12748"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Chozo statue movement AI"}, {"label": "WaterDropInit", "addr": {"U": "12780", "E": "12834", "J": "12780"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a water drop sprite"}, {"label": "WaterDrop_AI", "addr": {"U": "127AC", "E": "12860", "J": "127AC"}, "size": "288", "mode": "thumb", "params": null, "return": null, "notes": "Water drop AI"}, {"label": "Explosion_ZebesEscape_AI", "addr": {"U": "12A34", "E": "12AE8", "J": "12A34"}, "size": "2E0", "mode": "thumb", "params": null, "return": null, "notes": "Explosion zebes escape AI"}, {"label": "EnemyDropInit", "addr": {"U": "12D14", "E": "12DC8", "J": "12D14"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an enemy drop sprite"}, {"label": "EnemyDropGet", "addr": {"U": "12E98", "E": "12F4C", "J": "12E98"}, "size": "158", "mode": "thumb", "params": null, "return": null, "notes": "Samus and enemy drop collision handler"}, {"label": "EnemyDrop_AI", "addr": {"U": "12FF0", "E": "130A4", "J": "12FF0"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Enemy drop AI"}, {"label": "UnusedPrimarySprite_0_to_10_AI", "addr": {"U": "13024", "E": "130D8", "J": "13024"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Unused primary sprites 0-10 AI"}, {"label": "MorphBallInit", "addr": {"U": "13080", "E": "13134", "J": "13080"}, "size": "AC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a morph ball sprite"}, {"label": "MorphBallGet", "addr": {"U": "1312C", "E": "131E0", "J": "1312C"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Samus and morph ball collision handler"}, {"label": "MorphBallFlashAnimation", "addr": {"U": "131A0", "E": "13254", "J": "131A0"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the morph ball flashing animation when samus is grabbing it"}, {"label": "MorphBallOutsideInit", "addr": {"U": "131DC", "E": "13290", "J": "131DC"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a morph ball outside sprite"}, {"label": "MorphBallOutsideAnim", "addr": {"U": "13234", "E": "132E8", "J": "13234"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the morph ball outside animation"}, {"label": "MorphBall_AI", "addr": {"U": "13270", "E": "13324", "J": "13270"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Morph ball AI"}, {"label": "MorphBall_Outside_AI", "addr": {"U": "132A8", "E": "1335C", "J": "132A8"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Morph ball outisde AI"}, {"label": "PowerGrip_AI", "addr": {"U": "132D4", "E": "13388", "J": "132D4"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Power grip AI"}, {"label": "PowerGripGlow_AI", "addr": {"U": "13410", "E": "134C4", "J": "13410"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Power grip glow AI"}, {"label": "ChargeBeamInit", "addr": {"U": "13498", "E": "1354C", "J": "13498"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a charge beam sprite"}, {"label": "ChargeBeamSpawnGlow", "addr": {"U": "1353C", "E": "135F0", "J": "1353C"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the charge beam glow secondary sprite"}, {"label": "ChargeBeamInitGfxAndCollision", "addr": {"U": "13588", "E": "1363C", "J": "13588"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the charge beam to be visible"}, {"label": "ChargeBeamGet", "addr": {"U": "135CC", "E": "13680", "J": "135CC"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Samus and charge beam collision handler"}, {"label": "ChargeBeamFlashingAnim", "addr": {"U": "13694", "E": "13748", "J": "13694"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the charge beam flashing animation when samus is grabbing it"}, {"label": "ChargeBeamGlowInit", "addr": {"U": "136D8", "E": "1378C", "J": "136D8"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a charge beam glow sprite"}, {"label": "ChargeBeamGlowMovement", "addr": {"U": "1373C", "E": "137F0", "J": "1373C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Handles the charge beam glow movement based on the charge beam y position"}, {"label": "ChargeBeam_AI", "addr": {"U": "1375C", "E": "13810", "J": "1375C"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Charge beam AI"}, {"label": "ChargeBeamGlow_AI", "addr": {"U": "1382C", "E": "138E0", "J": "1382C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Charge beam glow AI"}, {"label": "ChozoStatueSyncBodyPosition", "addr": {"U": "13850", "E": "13904", "J": "13850"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the chozo statue body sprites position with the chozo statue main sprite"}, {"label": "SetChozoStatueEventAndEquipmentFlags", "addr": {"U": "138D8", "E": "1398C", "J": "138D8"}, "size": "30C", "mode": "thumb", "params": [{"label": "SpriteID", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": null, "notes": "Swicthes on r0 and sets event/updates equipment according to it"}, {"label": "SetChozoStatueDirection", "addr": {"U": "13BE4", "E": "13C98", "J": "13BE4"}, "size": "1FC", "mode": "thumb", "params": null, "return": null, "notes": "Sets the direction of a chozo statue"}, {"label": "CheckChozoItemCollected", "addr": {"U": "13DE0", "E": "13E94", "J": "13DE0"}, "size": "2BC", "mode": "thumb", "params": [{"label": "SpriteID", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": {"label": "ChozoStatueBehavior", "type": "u8", "notes": "Chozo statue behavior (0 = item, 1 = refill, 2 = hint, 3 = hint taken)"}, "notes": "Swicthes on r0 and checks if the item/hint is already collected"}, {"label": "ChozoStatueInit", "addr": {"U": "1409C", "E": "14150", "J": "1409C"}, "size": "1F8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a chozo statue sprite"}, {"label": "ChozoStatueRegisterItem", "addr": {"U": "14298", "E": "1434C", "J": "14298"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Calls RegisterStatueItem and updates the chozo statue sprite"}, {"label": "ChozoStatueHintFlashing", "addr": {"U": "142FC", "E": "143B0", "J": "142FC"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing before displaying the minimap for a hint"}, {"label": "ChozoStatueHintEnd", "addr": {"U": "143B8", "E": "1446C", "J": "143B8"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Called one right after the minimap is closed after a hint"}, {"label": "ChozoStatueHintSit", "addr": {"U": "143F8", "E": "144AC", "J": "143F8"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the chozo statue sitting animation"}, {"label": "ChozoStatueHintSitFinish", "addr": {"U": "14444", "E": "144F8", "J": "14444"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of the chozo statue sitting animation"}, {"label": "ChozoStatueCheckCollectItem", "addr": {"U": "14468", "E": "1451C", "J": "14468"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is collecting the item"}, {"label": "ChozoStatueItemBeforeBanner", "addr": {"U": "14494", "E": "14548", "J": "14494"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Called once before the item banner spawns"}, {"label": "ChozoStatueSpawnRefill", "addr": {"U": "144B8", "E": "1456C", "J": "144B8"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a chozo statue refill secondary sprite"}, {"label": "ChozoStatueRefillFlashingAnim", "addr": {"U": "14500", "E": "145B4", "J": "14500"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the chozo statue flashing animation when samus is refilling"}, {"label": "ChozoStatueRefillEnd", "addr": {"U": "1454C", "E": "14600", "J": "1454C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the end of the refill"}, {"label": "ChozoStatueReplayRoomMusic", "addr": {"U": "1456C", "E": "14620", "J": "1456C"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Replays the current room music track"}, {"label": "ChozoStatueBodyInit", "addr": {"U": "145C4", "E": "14678", "J": "145C4"}, "size": "174", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a chozo statue body sprite"}, {"label": "ChozoStatueBodyHandRefillAnim", "addr": {"U": "14738", "E": "147EC", "J": "14738"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the blue tube thing animation on the chozo statue hand"}, {"label": "ChozoStatueBodyGrabSamus", "addr": {"U": "14794", "E": "14848", "J": "14794"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus needs to be grabbed, if so sets samus pose to grabbed by chozo statue and updates chozo statue GFX"}, {"label": "ChozoStatueBodySyncSamusPosition", "addr": {"U": "14834", "E": "148E8", "J": "14834"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes samus's position with the chozo statue one"}, {"label": "ChozoStatueBodySyncSamusPositionWhileSitting", "addr": {"U": "14864", "E": "14918", "J": "14864"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes samus's position with the chozo statue one while sitting"}, {"label": "ChozoStatueBodySyncSamusPositionAfterSitting", "addr": {"U": "148A8", "E": "1495C", "J": "148A8"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes samus's position with the chozo statue one after sitting"}, {"label": "ChozoStatueBodyDetectSamus", "addr": {"U": "148E8", "E": "1499C", "J": "148E8"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus needs to be grabbed, if so sets samus pose to grabbed by chozo statue and updates chozo statue GFX"}, {"label": "ChozoStatueBodyRefill", "addr": {"U": "149E4", "E": "14A98", "J": "149E4"}, "size": "140", "mode": "thumb", "params": null, "return": null, "notes": "Refills samus energy and weapons"}, {"label": "ChozoStatueBody_Empty", "addr": {"U": "14B24", "E": "14BD8", "J": "14B24"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "ChozoStatueBodyEndRefill", "addr": {"U": "14B28", "E": "14BDC", "J": "14B28"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the end of the refill"}, {"label": "ChozoStatueBodyReleaseSamus", "addr": {"U": "14B58", "E": "14C0C", "J": "14B58"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Releases samus and updates chozo statue GFX after a refill"}, {"label": "ChozoStatueBodyInitHintGfx", "addr": {"U": "14B90", "E": "14C44", "J": "14B90"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initializes graphics for an hint"}, {"label": "ChozoStatueBodyCheckEyeOpenedHint", "addr": {"U": "14BB0", "E": "14C64", "J": "14BB0"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the chozo statue's eyes are fully opened at the beginning of a hint"}, {"label": "ChozoStatueItemAfterBanner", "addr": {"U": "14BDC", "E": "14C90", "J": "14BDC"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the item banner spawns"}, {"label": "ChozoStatueBodyCheckEyeClosedRefill", "addr": {"U": "14BFC", "E": "14CB0", "J": "14BFC"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the chozo statue's eyes are fully closed after a refill"}, {"label": "ChozoStatue_AI", "addr": {"U": "14C70", "E": "14D24", "J": "14C70"}, "size": "148", "mode": "thumb", "params": null, "return": null, "notes": "Chozo statue AI"}, {"label": "ChozoStatueBody_AI", "addr": {"U": "14DB8", "E": "14E6C", "J": "14DB8"}, "size": "248", "mode": "thumb", "params": null, "return": null, "notes": "Chozo statue body AI"}, {"label": "ChozoStatueRefill_AI", "addr": {"U": "15000", "E": "150B4", "J": "15000"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Chozo statue refill AI"}, {"label": "UnknownItemChozoStatueSyncBodyPosition", "addr": {"U": "150A8", "E": "1515C", "J": "150A8"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the chozo statue body sprites position with the chozo statue main sprite"}, {"label": "UnknownItemChozoStatueInit", "addr": {"U": "15130", "E": "151E4", "J": "15130"}, "size": "1F8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a unknown item chozo statue body sprite"}, {"label": "UnknownItemChozoStatueRegisterItem", "addr": {"U": "1532C", "E": "153E0", "J": "1532C"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Calls RegisterStatueItem and updates the chozo statue sprite"}, {"label": "UnknownItemChozoStatueHintFlashing_Unused", "addr": {"U": "1537C", "E": "15430", "J": "1537C"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Same code as ChozoStatueHintFlashing, unused"}, {"label": "UnknownItemChozoItemEndHint_Unused", "addr": {"U": "15438", "E": "154EC", "J": "15438"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Same code as ChozoStatueEndHint, unused"}, {"label": "UnknownItemChozoStatueHintSit_Unused", "addr": {"U": "15478", "E": "1552C", "J": "15478"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Same code as ChozoStatueHintSit, unused"}, {"label": "UnknownItemChozoStatueHintSitFinish_Unused", "addr": {"U": "154C4", "E": "15578", "J": "154C4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Same code as ChozoStatueHintSitFinish, unused"}, {"label": "UnknownItemChozoStatueCheckCollectItem", "addr": {"U": "154E8", "E": "1559C", "J": "154E8"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is collecting the item"}, {"label": "UnknownItemChozoStatueCheckItemBannerSpawned", "addr": {"U": "15514", "E": "155C8", "J": "15514"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Decrements a timer that ends when the item banner has fully appeared"}, {"label": "UnknownItemChozoStatueSpawnRefill", "addr": {"U": "15538", "E": "155EC", "J": "15538"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a unknown item chozo statue refill secondary sprite"}, {"label": "UnknownItemChozoStatueRefillFlashingAnim", "addr": {"U": "15580", "E": "15634", "J": "15580"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the unknown item chozo statue flashing animation when samus is refilling"}, {"label": "UnknownItemChozoStatueRefillEnd", "addr": {"U": "155CC", "E": "15680", "J": "155CC"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the end of the refill"}, {"label": "UnknownItemChozoStatueReplayRoomMusic", "addr": {"U": "155EC", "E": "156A0", "J": "155EC"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Replays the current room music track"}, {"label": "UnknownItemChozoStatueBodyInit", "addr": {"U": "15644", "E": "156F8", "J": "15644"}, "size": "174", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a unknown item chozo statue body sprite"}, {"label": "UnknownItemChozoStatueBodyHandRefillAnim", "addr": {"U": "157B8", "E": "1586C", "J": "157B8"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the blue tube thing animation on the chozo statue hand"}, {"label": "UnknwonItemChozoStatueBodyGrabSamus", "addr": {"U": "15814", "E": "158C8", "J": "15814"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus needs to be grabbed, if so sets samus pose to grabbed by chozo statue and updates chozo statue GFX"}, {"label": "UnknownItemChozoStatueBodySyncSamusPosition", "addr": {"U": "158B4", "E": "15968", "J": "158B4"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes samus's position with the chozo statue one"}, {"label": "UnknownItemChozoStatueBodySyncSamusPositionWhileSitting", "addr": {"U": "158E4", "E": "15998", "J": "158E4"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Unknown item Chozo statue body sync Samus position while sitting"}, {"label": "UnknownItemChozoStatueBodySyncSamusPositionAfterSitting", "addr": {"U": "15928", "E": "159DC", "J": "15928"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Unknown item Chozo statue body sync Samus position after sitting"}, {"label": "UnknownItemChozoStatueBodyDetectSamus", "addr": {"U": "15968", "E": "15A1C", "J": "15968"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus needs to be grabbed, if so sets samus pose to grabbed by chozo statue and updates chozo statue GFX"}, {"label": "UnknownItemChozoStatueBodyRefill", "addr": {"U": "15A64", "E": "15B18", "J": "15A64"}, "size": "140", "mode": "thumb", "params": null, "return": null, "notes": "Refills samus energy and weapons"}, {"label": "UnknownItemChozoStatueBody_Empty", "addr": {"U": "15BA4", "E": "15C58", "J": "15BA4"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "UnknownItemChozoStatueBodyEndRefill", "addr": {"U": "15BA8", "E": "15C5C", "J": "15BA8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the end of the refill"}, {"label": "UnknownItemChozoStatueBodyReleaseSamus", "addr": {"U": "15BD8", "E": "15C8C", "J": "15BD8"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Releases samus and updates chozo statue GFX after a refill"}, {"label": "UnknownItemChozoStatueBodyInitHintGfx_Unused", "addr": {"U": "15C10", "E": "15CC4", "J": "15C10"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Same code as ChozoStatueBodyInitHintGFX, unused"}, {"label": "UnknownItemChozoStatueBodyCheckEyeOpenedHint", "addr": {"U": "15C30", "E": "15CE4", "J": "15C30"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Unknown item Chozo statue body check eye fully open"}, {"label": "UnknownItemChozoStatueItemAfterBanner", "addr": {"U": "15C5C", "E": "15D10", "J": "15C5C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the item banner spawns"}, {"label": "UnknownItemChozoStatueBodyCheckEyeClosedRefill", "addr": {"U": "15C7C", "E": "15D30", "J": "15C7C"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the chozo statue's eyes are fully closed after a refill"}, {"label": "UnknownItemChozoStatue_AI", "addr": {"U": "15CF0", "E": "15DA4", "J": "15CF0"}, "size": "148", "mode": "thumb", "params": null, "return": null, "notes": "Unknown item chozo statue AI"}, {"label": "UnknownItemChozoStatueBody_AI", "addr": {"U": "15E38", "E": "15EEC", "J": "15E38"}, "size": "248", "mode": "thumb", "params": null, "return": null, "notes": "Unknown item chozo statue body AI"}, {"label": "UnknownItemChozoStatueRefill_AI", "addr": {"U": "16080", "E": "16134", "J": "16080"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Unknown item chozo statue refill AI"}, {"label": "ChozoStatueHintChangeClipAction", "addr": {"U": "16128", "E": "161DC", "J": "16128"}, "size": "104", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction1", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata Affecting Action 1"}, {"label": "ClipdataAffectingAction2", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata Affecting Action 2"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/Disable chozo statue hitbox related to hint poses (standing and sitting)"}, {"label": "ChozoStatueSittingChangeClipAction", "addr": {"U": "1622C", "E": "162E0", "J": "1622C"}, "size": "84", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata Affecting Action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/Disable chozo statue hitbox when sitting"}, {"label": "ChozoBallSpawnItemBanner", "addr": {"U": "162B0", "E": "16364", "J": "162B0"}, "size": "94", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": null, "notes": "Spawns the corresponding item banner depending on r0"}, {"label": "ChozoBallSetOamPtr", "addr": {"U": "16344", "E": "163F8", "J": "16344"}, "size": "64", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": null, "notes": "Sets the OAM pointer of the chozo ball depending on r0 (determines color)"}, {"label": "ChozoBallRevealedSetOamPtr", "addr": {"U": "163A8", "E": "1645C", "J": "163A8"}, "size": "64", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": null, "notes": "Sets the OAM pointer of the chozo ball depending on r0 after its revealing"}, {"label": "ChozoBallRevealingSetOamPtr", "addr": {"U": "1640C", "E": "164C0", "J": "1640C"}, "size": "64", "mode": "thumb", "params": [{"label": "SpriteId", "type": "u8", "enum": "PrimarySpriteID", "notes": "Sprite ID"}], "return": null, "notes": "Sets the OAM pointer of the chozo ball depending on r0 when it's revealed"}, {"label": "ChozoBallInit", "addr": {"U": "16470", "E": "16524", "J": "16470"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a chozo ball sprite"}, {"label": "ChozoBall_Empty", "addr": {"U": "164E4", "E": "16598", "J": "164E4"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "ChozoBallRevealed", "addr": {"U": "164E8", "E": "1659C", "J": "164E8"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Calls ChozoBallRevealingSetOAMPointer and updates the sprite data"}, {"label": "ChozoBallRevealingAnim", "addr": {"U": "16558", "E": "1660C", "J": "16558"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the revealing animation has ended"}, {"label": "ChozoBallRegisterItem", "addr": {"U": "16594", "E": "16648", "J": "16594"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Registers the item grabbed and calls ChozoBallSpawnIemBanner"}, {"label": "ChozoBallFlashAnimation", "addr": {"U": "16600", "E": "166B4", "J": "16600"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the chozo ball flashing animation when samus is grabbing it"}, {"label": "ChozoBall_AI", "addr": {"U": "1663C", "E": "166F0", "J": "1663C"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Chozo ball AI"}, {"label": "ZoomerCheckMidair", "addr": {"U": "16694", "E": "16748", "J": "16694"}, "size": "94", "mode": "thumb", "params": null, "return": {"label": "Midair", "type": "bool"}, "notes": "Checks if the zoomer is colliding with air, used to see if it's still crawling on something and if it's colliding on ground when falling"}, {"label": "ZoomerCollisionInit", "addr": {"U": "16728", "E": "167DC", "J": "16728"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Initialiaze a zoomer's sprite collisions"}, {"label": "ZoomerGfxInit", "addr": {"U": "167A8", "E": "1685C", "J": "167A8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zoomer's GFX"}, {"label": "ZoomerNormalDirectionGfxInit", "addr": {"U": "167D8", "E": "1688C", "J": "167D8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zoomer's GFX facing the normal direction (used when a zoomer is falling)"}, {"label": "ZoomerInit", "addr": {"U": "16808", "E": "168BC", "J": "16808"}, "size": "114", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zoomer sprite"}, {"label": "ZoomerCallGfxInit", "addr": {"U": "1691C", "E": "169D0", "J": "1691C"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Calls ZoomerGFXInit and sets pose to 9"}, {"label": "ZoomerMove", "addr": {"U": "16934", "E": "169E8", "J": "16934"}, "size": "3E8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a zoomer"}, {"label": "ZoomerGfxRotationUpdate", "addr": {"U": "16D1C", "E": "16DD0", "J": "16D1C"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Updates the GFX of a zoomer while it's turning"}, {"label": "ZoomerTurning", "addr": {"U": "16EB0", "E": "16F64", "J": "16EB0"}, "size": "1CC", "mode": "thumb", "params": null, "return": null, "notes": "Updates the position of a zoomer while it's turning"}, {"label": "Zoomer_Unused", "addr": {"U": "1707C", "E": "17130", "J": "1707C"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Calls ZoomerNormalDirectionGFXInit and sets pose to F, seems unused"}, {"label": "ZoomerBackOnGround", "addr": {"U": "17094", "E": "17148", "J": "17094"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Handles a zoomer touching gorund again after falling"}, {"label": "ZoomerStartFalling", "addr": {"U": "170C4", "E": "17178", "J": "170C4"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the start of a zoomer falling"}, {"label": "ZoomerFalling", "addr": {"U": "1712C", "E": "171E0", "J": "1712C"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles a zoomer falling"}, {"label": "ZoomerDeath", "addr": {"U": "171B0", "E": "17264", "J": "171B0"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of a zoomer, calls SpriteDeath"}, {"label": "Zoomer_AI", "addr": {"U": "1720C", "E": "172C0", "J": "1720C"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Zoomer AI"}, {"label": "ZeelaSpawnEyes", "addr": {"U": "17328", "E": "173DC", "J": "17328"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the zeela eyes secondary sprite"}, {"label": "ZeelaCheckMidair", "addr": {"U": "17440", "E": "174F4", "J": "17440"}, "size": "B8", "mode": "thumb", "params": null, "return": {"label": "Midair", "type": "bool"}, "notes": "Checks if the zeela is colliding with air, used to see if it's still crawling on something and if it's colliding on ground when falling"}, {"label": "ZeelaHitboxInit", "addr": {"U": "174F8", "E": "175AC", "J": "174F8"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the hitbox of a zeela"}, {"label": "ZeelaGfxInit", "addr": {"U": "17578", "E": "1762C", "J": "17578"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the GFX of a zeela"}, {"label": "ZeelaNormalDirectionGfxInit", "addr": {"U": "175C0", "E": "17674", "J": "175C0"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zeela's GFX facing the normal direction (used when a zeela is falling)"}, {"label": "ZeelaInit", "addr": {"U": "175F0", "E": "176A4", "J": "175F0"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zeela sprite"}, {"label": "ZeelaCallGfxInit", "addr": {"U": "17718", "E": "177CC", "J": "17718"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Calls ZeelaGFXInit and sets pose to 9"}, {"label": "ZeelaMove", "addr": {"U": "17730", "E": "177E4", "J": "17730"}, "size": "418", "mode": "thumb", "params": null, "return": null, "notes": "Handles the zeela moving"}, {"label": "ZeelaGfxRotationUpdate", "addr": {"U": "17B48", "E": "17BFC", "J": "17B48"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Updates the GFX of a zeela while it's turning"}, {"label": "ZeelaTurning", "addr": {"U": "17CDC", "E": "17D90", "J": "17CDC"}, "size": "1CC", "mode": "thumb", "params": null, "return": null, "notes": "Updates the position of a zeela while it's turning"}, {"label": "Zeela_Unused", "addr": {"U": "17EA8", "E": "17F5C", "J": "17EA8"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Calls ZeelaNormalDirectionGFXInit and sets pose to F, seems unused"}, {"label": "ZeelaBackOnGround", "addr": {"U": "17EC0", "E": "17F74", "J": "17EC0"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles a zeela touching gorund again after falling"}, {"label": "ZeelaStartFalling", "addr": {"U": "17EF8", "E": "17FAC", "J": "17EF8"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the start of a zeela falling"}, {"label": "ZeelaFalling", "addr": {"U": "17F60", "E": "18014", "J": "17F60"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Handles a zeela falling"}, {"label": "ZeelaDeath", "addr": {"U": "17FE8", "E": "1809C", "J": "17FE8"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of a zeela, calls SpriteDeath"}, {"label": "ZeelaEyesInit", "addr": {"U": "18054", "E": "18108", "J": "18054"}, "size": "AC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zeela eyes sprite"}, {"label": "ZeelaEyesMove", "addr": {"U": "18100", "E": "181B4", "J": "18100"}, "size": "134", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a zeela eye"}, {"label": "ZeelaEyesGroundCollision", "addr": {"U": "18234", "E": "182E8", "J": "18234"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the collision between a zeela eye and the ground"}, {"label": "ZeelaEyesCheckExplosionDone", "addr": {"U": "18260", "E": "18314", "J": "18260"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the explosion is done and deletes the sprite if so"}, {"label": "Zeela_AI", "addr": {"U": "18284", "E": "18338", "J": "18284"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Zeela AI"}, {"label": "ZeelaEyes_AI", "addr": {"U": "183A0", "E": "18454", "J": "183A0"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Zeela eyes AI"}, {"label": "KraidMouthDetermineSpikePosition", "addr": {"U": "183D8", "E": "1848C", "J": "183D8"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Syncs the sub sprites with kraid"}, {"label": "KraidCheckProjectilesCollidingWithBelly", "addr": {"U": "18440", "E": "184F4", "J": "18440"}, "size": "1AC", "mode": "thumb", "params": null, "return": null, "notes": "Checks if any projectile is colliding with kraid's belly, if so spaws appropriate particle effect 2 random sprite debris, starts an horizontal screen shake and destroys the projectile"}, {"label": "KraidOpenCloseRoutineAndProjectileCollision", "addr": {"U": "185EC", "E": "186A0", "J": "185EC"}, "size": "470", "mode": "thumb", "params": null, "return": null, "notes": "Handles the opening/closing of the mouth and the projectile collision: damage and bouncing off"}, {"label": "KraidRandomSpriteDebrisOnCeiling", "addr": {"U": "18A5C", "E": "18B10", "J": "18A5C"}, "size": "1A0", "mode": "thumb", "params": [{"label": "Timer2OfCurrSprite", "type": "u8", "notes": "Timer 2 of current sprite"}], "return": null, "notes": "Spawns random sprite debris on the ceiling when kraid appears/dies"}, {"label": "KraidMouthUpdateArmIdleHitbox", "addr": {"U": "18C18", "E": "18CCC", "J": "18C18"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the arm hibox depending on the current animation frame when it's idle"}, {"label": "KraidMouthUpdateArmAttackingHitbox", "addr": {"U": "18D34", "E": "18DE8", "J": "18D34"}, "size": "154", "mode": "thumb", "params": null, "return": null, "notes": "Updates the arm hibox depending on the current animation frame when it's attacking"}, {"label": "KraidMouthUpdateLeftArmIdleHitbox", "addr": {"U": "18EB0", "E": "18F64", "J": "18EB0"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the left arm hibox depending on the current animation frame when it's idle"}, {"label": "KraidMouthUpdateLeftArmAttackingHitbox", "addr": {"U": "19104", "E": "191B8", "J": "19104"}, "size": "22C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the left arm hibox depending on the current animation frame when it's throwing nails"}, {"label": "KraidInit", "addr": {"U": "19370", "E": "19424", "J": "19370"}, "size": "22C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a kraid sprite"}, {"label": "KraidIsFullyUp", "addr": {"U": "1959C", "E": "19650", "J": "1959C"}, "size": "50", "mode": "thumb", "params": null, "return": {"label": "FullyUp", "type": "bool", "notes": "Fully up"}, "notes": "Checks if kraid has finished going up at the beginning of the fight calls KraidRandomSpriteDebrisOnCeiling"}, {"label": "KraidGoUp", "addr": {"U": "195EC", "E": "196A0", "J": "195EC"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Makes Kraid go up at the beginning of the fight"}, {"label": "KraidCheckFullyUp", "addr": {"U": "19640", "E": "196F4", "J": "19640"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if kraid is fully up"}, {"label": "KraidMoveFeet", "addr": {"U": "1966C", "E": "19720", "J": "1966C"}, "size": "1A4", "mode": "thumb", "params": null, "return": {"label": "MovementStage", "type": "u8", "notes": "Movement stage"}, "notes": "Moves a feet"}, {"label": "KraidStartMovingFeetSameDirectionAsPosition", "addr": {"U": "19810", "E": "198C4", "J": "19810"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Initializes Kraid to do the first step"}, {"label": "KraidFeetMovementSameDirectionAsPositionUpdate", "addr": {"U": "19854", "E": "19908", "J": "19854"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Updates the first step"}, {"label": "KraidMoveFeetToOppositeDirectionAsPosition", "addr": {"U": "19934", "E": "199E8", "J": "19934"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Initializes Kraid to do the second step"}, {"label": "KraidFeetMovementOppsiteDirectionAsPositionUpdate", "addr": {"U": "19978", "E": "19A2C", "J": "19978"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Updates the second step"}, {"label": "KraidEndTwoSteps", "addr": {"U": "19A58", "E": "19B0C", "J": "19A58"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initalizes Kraid to be standing"}, {"label": "KraidBeforeStartMovingFeetSameDirectionAsPosition", "addr": {"U": "19A7C", "E": "19B30", "J": "19A7C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles Kraid standing"}, {"label": "KraidAfterMovingFeetSameDirectionAsPosition", "addr": {"U": "19AB4", "E": "19B68", "J": "19AB4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initializes Kraid to be standing (between steps)"}, {"label": "KraidBeforeStartMovingFeetOppositeDirectionAsPosition", "addr": {"U": "19AD8", "E": "19B8C", "J": "19AD8"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles Kraid standing (between steps)"}, {"label": "KraidPreventSamusGoingThrough", "addr": {"U": "19B10", "E": "19BC4", "J": "19B10"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Prevents Samus from going through Kraid when he is dying"}, {"label": "KraidDeath", "addr": {"U": "19B34", "E": "19BE8", "J": "19B34"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Sets the Kraid killed event and updates the minimap"}, {"label": "KraidDying", "addr": {"U": "19BE4", "E": "19C98", "J": "19BE4"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Calls KraidPreventSamusGoingThrough, KraidRandomSpriteDebrisOnCeiling, starts screen shake, sets particle effects and plays the kraid statue opening cutscene"}, {"label": "KraidBeforeDeath", "addr": {"U": "19D44", "E": "19DF8", "J": "19D44"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Called when kraid is stationary when dying, saves the in game time at kraid and spawns a bunch of particle effects"}, {"label": "KraidMouthInit", "addr": {"U": "19EC8", "E": "19F7C", "J": "19EC8"}, "size": "360", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a kraid part sprite"}, {"label": "KraidMouthThrowNails", "addr": {"U": "1A228", "E": "1A2DC", "J": "1A228"}, "size": "E8", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the nails should spawn, if so spawns 2 kraid nail secondary sprite"}, {"label": "KraidMouthCheckSamusNear", "addr": {"U": "1A310", "E": "1A3C4", "J": "1A310"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is near enough for the hand attack"}, {"label": "KraidMouthCallKraidCheckProkectilesCollidingWithBelly", "addr": {"U": "1A3E4", "E": "1A498", "J": "1A3E4"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Calls KraidCheckProjectilesCollidingWithBelly"}, {"label": "KraidMouthCheckShouldSpawnSpikes", "addr": {"U": "1A3F0", "E": "1A4A4", "J": "1A3F0"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if spikes should spawn"}, {"label": "KraidMouthSpawnSpike", "addr": {"U": "1A50C", "E": "1A5C0", "J": "1A50C"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a kraid spike secondary sprite"}, {"label": "KraidMouthArmMovementDying", "addr": {"U": "1A648", "E": "1A6FC", "J": "1A648"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the arms when kraid is dying"}, {"label": "KraidMouthArmMovementDyingStationary", "addr": {"U": "1A6C8", "E": "1A77C", "J": "1A6C8"}, "size": "188", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the arms when kraid is dying and stationary"}, {"label": "KraidNailMovement", "addr": {"U": "1A850", "E": "1A904", "J": "1A850"}, "size": "1EC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a kraid nail"}, {"label": "Kraid_AI", "addr": {"U": "1AA3C", "E": "1AAF0", "J": "1AA3C"}, "size": "474", "mode": "thumb", "params": null, "return": null, "notes": "Kraid AI"}, {"label": "KraidMouth_AI", "addr": {"U": "1AEB0", "E": "1AF64", "J": "1AEB0"}, "size": "198", "mode": "thumb", "params": null, "return": null, "notes": "Kraid part AI"}, {"label": "KraidSpike_AI", "addr": {"U": "1B048", "E": "1B0FC", "J": "1B048"}, "size": "4AC", "mode": "thumb", "params": null, "return": null, "notes": "Kraid spike AI"}, {"label": "KraidNail_AI", "addr": {"U": "1B4F4", "E": "1B5A8", "J": "1B4F4"}, "size": "1C4", "mode": "thumb", "params": null, "return": null, "notes": "Kraid nail AI"}, {"label": "ItemBannerInit", "addr": {"U": "1B6B8", "E": "1B76C", "J": "1B6B8"}, "size": "110", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an item banner sprite"}, {"label": "ItemBannerGfxInit", "addr": {"U": "1B7C8", "E": "1B87C", "J": "1B7C8"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Loads the item banner GFX and sets the PreventMovementTimer to 3e8"}, {"label": "ItemBannerPopUp", "addr": {"U": "1B824", "E": "1B8D8", "J": "1B824"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Handles the pop up animaion of an item banner, alos spawns the save yes no cursor secondary sprite if necessary"}, {"label": "ItemBannerStatic", "addr": {"U": "1B9A8", "E": "1BA5C", "J": "1B9A8"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the part when the item banner is static (checks for input)"}, {"label": "ItemBannerRemoval", "addr": {"U": "1BA10", "E": "1BAC4", "J": "1BA10"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Called once at the beginning of the removal animation, calls FinishCollectingTank if samus is collecting a tank"}, {"label": "ItemBannerRemovalAnimation", "addr": {"U": "1BA60", "E": "1BB14", "J": "1BA60"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the removal animation, spawns a falling chozo pillar primary sprite if the item banner is the fully powered suit one"}, {"label": "ItemBanner_AI", "addr": {"U": "1BB14", "E": "1BBC8", "J": "1BB14"}, "size": "E8", "mode": "thumb", "params": null, "return": null, "notes": "Item banner AI"}, {"label": "SaveYesNoCursor_AI", "addr": {"U": "1BBFC", "E": "1BCB0", "J": "1BBFC"}, "size": "190", "mode": "thumb", "params": null, "return": null, "notes": "Save yes/no cursor AI"}, {"label": "RipperInit", "addr": {"U": "1BD8C", "E": "1BE40", "J": "1BD8C"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ripper sprite"}, {"label": "RipperGfxInit", "addr": {"U": "1BDFC", "E": "1BEB0", "J": "1BDFC"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ripper GFX"}, {"label": "RipperMove", "addr": {"U": "1BE1C", "E": "1BED0", "J": "1BE1C"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a ripper"}, {"label": "RipperTurnAroundGfxInit", "addr": {"U": "1BE88", "E": "1BF3C", "J": "1BE88"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Updates the GFX of a ripper when it's turning around"}, {"label": "RipperTurnAroundBegin", "addr": {"U": "1BEA8", "E": "1BF5C", "J": "1BEA8"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the first half of a ripper turning around, updates the status and the GFX"}, {"label": "RipperCheckTurnedAround", "addr": {"U": "1BEE0", "E": "1BF94", "J": "1BEE0"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the ripper has finished turning around, if so resumes normal behavior"}, {"label": "Ripper_AI", "addr": {"U": "1BEFC", "E": "1BFB0", "J": "1BEFC"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Ripper AI"}, {"label": "Ripper2Init", "addr": {"U": "1BFD8", "E": "1C08C", "J": "1BFD8"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ripper 2 sprite"}, {"label": "Ripper2GfxInit", "addr": {"U": "1C054", "E": "1C108", "J": "1C054"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ripper 2 GFX"}, {"label": "Ripper2Move", "addr": {"U": "1C074", "E": "1C128", "J": "1C074"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a ripper 2"}, {"label": "Ripper2TurnAroundGfxInit", "addr": {"U": "1C0D4", "E": "1C188", "J": "1C0D4"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called once before a ripper 2 turns around"}, {"label": "Ripper2TurnAroundBegin", "addr": {"U": "1C10C", "E": "1C1C0", "J": "1C10C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the first half of a ripper 2 turning around, updates the status and the GFX"}, {"label": "Ripper2CheckTurnedAround", "addr": {"U": "1C144", "E": "1C1F8", "J": "1C144"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the ripper 2 has finished turning around, if so resumes normal behavior"}, {"label": "RipperII_AI", "addr": {"U": "1C160", "E": "1C214", "J": "1C160"}, "size": "D8", "mode": "thumb", "params": null, "return": null, "notes": "Ripper 2 AI"}, {"label": "ZebInit", "addr": {"U": "1C238", "E": "1C2EC", "J": "1C238"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zeb sprite"}, {"label": "ZebGfxInit", "addr": {"U": "1C298", "E": "1C34C", "J": "1C298"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zeb GFX"}, {"label": "ZebCheckSpawn", "addr": {"U": "1C2D4", "E": "1C388", "J": "1C2D4"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the zeb has no drop and if samus is in range to determine if it should spawn"}, {"label": "ZebGoingUp", "addr": {"U": "1C36C", "E": "1C420", "J": "1C36C"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles a zeb going up after spawning"}, {"label": "ZebReset", "addr": {"U": "1C3EC", "E": "1C4A0", "J": "1C3EC"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Resets a zeb sprite after it dies or when it's out of range"}, {"label": "ZebMove", "addr": {"U": "1C444", "E": "1C4F8", "J": "1C444"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a zeb"}, {"label": "Zeb_AI", "addr": {"U": "1C50C", "E": "1C5C0", "J": "1C50C"}, "size": "138", "mode": "thumb", "params": null, "return": null, "notes": "Zeb AI"}, {"label": "SkreeInit", "addr": {"U": "1C644", "E": "1C6F8", "J": "1C644"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a skree sprite"}, {"label": "SkreeGfxInit", "addr": {"U": "1C694", "E": "1C748", "J": "1C694"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a skree to be idle"}, {"label": "SkreeDetectSamus", "addr": {"U": "1C6B0", "E": "1C764", "J": "1C6B0"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus is in range of the skree"}, {"label": "SkreeSpinGfxInit", "addr": {"U": "1C700", "E": "1C7B4", "J": "1C700"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the spinning animation of the skree"}, {"label": "SkreeCheckSpinEnded", "addr": {"U": "1C71C", "E": "1C7D0", "J": "1C71C"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the skree finished spinning"}, {"label": "SkreeStartGoingDown", "addr": {"U": "1C738", "E": "1C7EC", "J": "1C738"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Called once before the skree starts going down, sets the facing direction and updates GFX"}, {"label": "SkreeGoDown", "addr": {"U": "1C7A0", "E": "1C854", "J": "1C7A0"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a skree that goes down, both vertically and horizontally"}, {"label": "SkreeCrashGround", "addr": {"U": "1C89C", "E": "1C950", "J": "1C89C"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Initialize 4 sprite debris and spawns  4 skree explosion/blue skree explosion secondary sprites"}, {"label": "SkreeExplosionInit", "addr": {"U": "1C9C4", "E": "1CA78", "J": "1C9C4"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a skree explosion sprite"}, {"label": "SkreeExplosionMove", "addr": {"U": "1CA78", "E": "1CB2C", "J": "1CA78"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a skree explosion sprite"}, {"label": "Skree_AI", "addr": {"U": "1CAE0", "E": "1CB94", "J": "1CAE0"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Skree AI"}, {"label": "SkreeExplosion_AI", "addr": {"U": "1CC74", "E": "1CD28", "J": "1CC74"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Skree explosion AI"}, {"label": "ReoInit", "addr": {"U": "1CC98", "E": "1CD4C", "J": "1CC98"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a reo sprite"}, {"label": "ReoRNG", "addr": {"U": "1CD20", "E": "1CDD4", "J": "1CD20"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the initialization, sets 2 unknown values of the sprite data to a random number based on the sprite random number"}, {"label": "ReoSamusDetection", "addr": {"U": "1CD44", "E": "1CDF8", "J": "1CD44"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is in range and handles idle animation"}, {"label": "ReoSamusDetected", "addr": {"U": "1CDC8", "E": "1CE7C", "J": "1CDC8"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Makes reo face samus and initialize movement related data"}, {"label": "ReoMove", "addr": {"U": "1CE50", "E": "1CF04", "J": "1CE50"}, "size": "394", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a reo"}, {"label": "Reo_AI", "addr": {"U": "1D1E4", "E": "1D298", "J": "1D1E4"}, "size": "134", "mode": "thumb", "params": null, "return": null, "notes": "Reo AI"}, {"label": "ZiplineCheckColliding", "addr": {"U": "1D318", "E": "1D3CC", "J": "1D318"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the zipline is colliding with a solid block on both sides"}, {"label": "ZiplineMoving", "addr": {"U": "1D3A4", "E": "1D458", "J": "1D3A4"}, "size": {"U": "C8", "E": "E0", "J": "C8"}, "mode": "thumb", "params": null, "return": {"label": "ReleasingSamus", "type": "bool", "notes": "Releasing Samus"}, "notes": "Handles the movement of a zipline"}, {"label": "ZiplineGfxUpdate", "addr": {"U": "1D46C", "E": "1D538", "J": "1D46C"}, "size": "1DC", "mode": "thumb", "params": null, "return": null, "notes": "Updates the GFX of a zipline (checks if samus is on it, if releasing, if activated and the timers)"}, {"label": "ZiplineInit", "addr": {"U": "1D648", "E": "1D714", "J": "1D648"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zipline sprite"}, {"label": "ZiplineUpdate", "addr": {"U": "1D6EC", "E": "1D7B8", "J": "1D6EC"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Updates the zipline, calls ZiplineGFXUpdate and ZiplineMoving"}, {"label": "ZiplineButton_Init", "addr": {"U": "1D770", "E": "1D83C", "J": "1D770"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zipline button sprite"}, {"label": "ZiplineButtonActivatedGfxInit", "addr": {"U": "1D808", "E": "1D8D4", "J": "1D808"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for an activated zipline button"}, {"label": "ZiplineButtonSpawn", "addr": {"U": "1D828", "E": "1D8F4", "J": "1D828"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if there's a zipline sprite in the current room and if ziplines are activated sets data accordingly"}, {"label": "ZiplineButtonCheckZiplinesActivated", "addr": {"U": "1D874", "E": "1D940", "J": "1D874"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the ziplines are activated (called each frame if the ziplines aren't activated when ZiplineButtonSpawn is called)"}, {"label": "ZiplineButtonIdle", "addr": {"U": "1D88C", "E": "1D958", "J": "1D88C"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation"}, {"label": "ZiplineButtonZiplineMoving", "addr": {"U": "1D904", "E": "1D9D0", "J": "1D904"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Called when the zipline is moving"}, {"label": "Zipline_AI", "addr": {"U": "1D92C", "E": "1D9F8", "J": "1D92C"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Zipline AI"}, {"label": "ZiplineButton_AI", "addr": {"U": "1D954", "E": "1DA20", "J": "1D954"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Zipline button AI"}, {"label": "SovaCheckMidair", "addr": {"U": "1DA24", "E": "1DAF0", "J": "1DA24"}, "size": "B8", "mode": "thumb", "params": null, "return": {"label": "Midair", "type": "bool"}, "notes": "Checks if the sova is colliding with air, used to see if it's still crawling on something and if it's colliding on ground when falling"}, {"label": "SovaHitboxUpdate", "addr": {"U": "1DADC", "E": "1DBA8", "J": "1DADC"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Updates the hitbox of the sova (called in SovaInit and when turning around)"}, {"label": "SovaGfxUpdate", "addr": {"U": "1DB5C", "E": "1DC28", "J": "1DB5C"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Updates the GFX of a sova"}, {"label": "SovaInit", "addr": {"U": "1DBD4", "E": "1DCA0", "J": "1DBD4"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a sova sprite"}, {"label": "SovaGfxInit", "addr": {"U": "1DD24", "E": "1DDF0", "J": "1DD24"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Calls SovaGFXUpdate, is called once after SovaInit"}, {"label": "SovaMove", "addr": {"U": "1DD3C", "E": "1DE08", "J": "1DD3C"}, "size": "4B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the sova"}, {"label": "SovaTurningAroundGfxUpdate", "addr": {"U": "1E1EC", "E": "1E2B8", "J": "1E1EC"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Updates the GFX of the sova when it's turning around"}, {"label": "SovaTurningAround", "addr": {"U": "1E380", "E": "1E44C", "J": "1E380"}, "size": "1F0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the sova turning around, calls SovaTurningAroundGFXUpdate, SovaHitboxUpdate and updates the sprite data (direction facing and position)"}, {"label": "SovaBackOnGround", "addr": {"U": "1E570", "E": "1E63C", "J": "1E570"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the sova touching gorund again after falling"}, {"label": "SovaCheckBackOnGroundAnimEnded", "addr": {"U": "1E5B4", "E": "1E680", "J": "1E5B4"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the back on ground anim ended"}, {"label": "SovaStartFalling", "addr": {"U": "1E5E4", "E": "1E6B0", "J": "1E5E4"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Updates the X and Y position of the sova, calls SovaHitboxUpdate and updates GFX in order to prepare it to fall"}, {"label": "SovaFalling", "addr": {"U": "1E65C", "E": "1E728", "J": "1E65C"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Handles a sova falling"}, {"label": "SovaDeath", "addr": {"U": "1E6D8", "E": "1E7A4", "J": "1E6D8"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of a sova, calls SpriteDeath"}, {"label": "Sova_AI", "addr": {"U": "1E738", "E": "1E804", "J": "1E738"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Sova AI"}, {"label": "MultiviolaInit", "addr": {"U": "1E854", "E": "1E920", "J": "1E854"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a multiviola sprite"}, {"label": "MultiviolaMove", "addr": {"U": "1E8C4", "E": "1E990", "J": "1E8C4"}, "size": "108", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a multiviola"}, {"label": "UnusedMultiviola_Empty1", "addr": {"U": "1E9CC", "E": "1EA98", "J": "1E9CC"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function (very likely related to the unused multiviola sprite)"}, {"label": "UnusedMultiviola_Empty2", "addr": {"U": "1E9D0", "E": "1EA9C", "J": "1E9D0"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function (very likely related to the unused multiviola sprite)"}, {"label": "Multiviola_AI", "addr": {"U": "1E9D4", "E": "1EAA0", "J": "1E9D4"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Multiviola AI"}, {"label": "UnusedMultiviolaSprite_AI", "addr": {"U": "1EA64", "E": "1EB30", "J": "1EA64"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Unused multiviola AI"}, {"label": "GerutaYMovement", "addr": {"U": "1EA68", "E": "1EB34", "J": "1EA68"}, "size": "B0", "mode": "thumb", "params": [{"label": "YMovement", "type": "u16", "notes": "Y movement"}], "return": {"label": "Bouncing", "type": "bool"}, "notes": "Handles the Y movement of the geruta"}, {"label": "GerutaXMovement", "addr": {"U": "1EB18", "E": "1EBE4", "J": "1EB18"}, "size": "74", "mode": "thumb", "params": [{"label": "XMovement", "type": "u16", "notes": "X movement"}], "return": {"label": "Bouncing", "type": "bool"}, "notes": "Handles the X movement of the geruta"}, {"label": "GerutaInit", "addr": {"U": "1EB8C", "E": "1EC58", "J": "1EB8C"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a geruta sprite"}, {"label": "GerutaGfxInit", "addr": {"U": "1EC0C", "E": "1ECD8", "J": "1EC0C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX of a geruta"}, {"label": "GerutaDetectSamus", "addr": {"U": "1EC2C", "E": "1ECF8", "J": "1EC2C"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is in range"}, {"label": "GerutaGoDownGfxInit", "addr": {"U": "1EC98", "E": "1ED64", "J": "1EC98"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Updates the GFX of a geruta for when he goes down"}, {"label": "GerutaCheckWarningEnded", "addr": {"U": "1ECCC", "E": "1ED98", "J": "1ECCC"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animation has ended"}, {"label": "GerutaCheckGoingDownAnimEnded", "addr": {"U": "1ECF8", "E": "1EDC4", "J": "1ECF8"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the second warning animation has ended"}, {"label": "GerutaGoingDown", "addr": {"U": "1ED48", "E": "1EE14", "J": "1ED48"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geruta going down"}, {"label": "GerutaCheckBouncingAnimEnded", "addr": {"U": "1ED8C", "E": "1EE58", "J": "1ED8C"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the bouncing animation has ended"}, {"label": "GerutaGoingUp", "addr": {"U": "1EDD4", "E": "1EEA0", "J": "1EDD4"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geruta going up"}, {"label": "GerutaCheckResetAnimEnded", "addr": {"U": "1EE1C", "E": "1EEE8", "J": "1EE1C"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the resetting animation (when the geruta hits the ceiling after moving) has ended"}, {"label": "Geruta_AI", "addr": {"U": "1EE38", "E": "1EF04", "J": "1EE38"}, "size": "1BC", "mode": "thumb", "params": null, "return": null, "notes": "Geruta AI"}, {"label": "SqueeptGfxReset", "addr": {"U": "1EFF4", "E": "1F0C0", "J": "1EFF4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Resets the GFX related infos of the squeept"}, {"label": "SqueeptTurningAroundGfxInit", "addr": {"U": "1F018", "E": "1F0E4", "J": "1F018"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for when the squeept turns around"}, {"label": "SqueeptGoingDownGfxInit", "addr": {"U": "1F03C", "E": "1F108", "J": "1F03C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for when the squeept goes down"}, {"label": "SqueeptInit", "addr": {"U": "1F05C", "E": "1F128", "J": "1F05C"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a squeept sprite"}, {"label": "SqueeptReset", "addr": {"U": "1F0A8", "E": "1F174", "J": "1F0A8"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Resets the squeept when he touches the ground"}, {"label": "SqueeptDetectSamus", "addr": {"U": "1F0D0", "E": "1F19C", "J": "1F0D0"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is in range"}, {"label": "SqueeptGoUp", "addr": {"U": "1F120", "E": "1F1EC", "J": "1F120"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the squeept going up"}, {"label": "SqueeptTurnAround", "addr": {"U": "1F1DC", "E": "1F2A8", "J": "1F1DC"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the turning around animation ended"}, {"label": "SqueeptGoDown", "addr": {"U": "1F204", "E": "1F2D0", "J": "1F204"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles the squeept going down"}, {"label": "Squeept_AI", "addr": {"U": "1F288", "E": "1F354", "J": "1F288"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Squeept AI"}, {"label": "MapStationInit", "addr": {"U": "1F41C", "E": "1F4E8", "J": "1F41C"}, "size": "F0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a map station sprite"}, {"label": "MapStationSamusDetection", "addr": {"U": "1F50C", "E": "1F5D8", "J": "1F50C"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is in range"}, {"label": "MapStationCheckGrabbingSamusAnimEnded", "addr": {"U": "1F5A4", "E": "1F670", "J": "1F5A4"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the grabbing animation has ended"}, {"label": "MapStationDownloadingAnim", "addr": {"U": "1F5E0", "E": "1F6AC", "J": "1F5E0"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the downloading animation"}, {"label": "MapStationSpawnMessage", "addr": {"U": "1F62C", "E": "1F6F8", "J": "1F62C"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Determines what message banner should be spawned depending on the current area"}, {"label": "MapStationAfterDownload", "addr": {"U": "1F6E0", "E": "1F7AC", "J": "1F6E0"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the map is downloaded"}, {"label": "MapStationBeforeRetraction", "addr": {"U": "1F718", "E": "1F7E4", "J": "1F718"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Delay before the map retracts"}, {"label": "MapStationRetraction", "addr": {"U": "1F73C", "E": "1F808", "J": "1F73C"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Retracts the map station"}, {"label": "MapStation_AI", "addr": {"U": "1F770", "E": "1F83C", "J": "1F770"}, "size": "114", "mode": "thumb", "params": null, "return": null, "notes": "Map station AI"}, {"label": "MapStationScreen_AI", "addr": {"U": "1F884", "E": "1F950", "J": "1F884"}, "size": "12C", "mode": "thumb", "params": null, "return": null, "notes": "Map station screen AI"}, {"label": "SavePlatformDetectSamus", "addr": {"U": "1F9B0", "E": "1FA7C", "J": "1F9B0"}, "size": "38", "mode": "thumb", "params": null, "return": {"label": "Colliding", "type": "bool"}, "notes": "Detecs if samus is on the save platform (used in both save platform AI)"}, {"label": "SavePlatformInit", "addr": {"U": "1F9E8", "E": "1FAB4", "J": "1F9E8"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a map platform sprite"}, {"label": "SavePlatformSamusDetection", "addr": {"U": "1FB10", "E": "1FBDC", "J": "1FB10"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus is on the save platform  (calls SavePlatformDetectSamus and checks if morphed/crouching)"}, {"label": "SavePlatformCheckOpeningAnimEnded", "addr": {"U": "1FB68", "E": "1FC34", "J": "1FB68"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening animation has ended"}, {"label": "SavePlatformSecondSamusDetection", "addr": {"U": "1FB94", "E": "1FC60", "J": "1FB94"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Re-Detects if samus in on the save platform after the opening animation"}, {"label": "SavePlaformCheckClosingAnimEnded", "addr": {"U": "1FC14", "E": "1FCE0", "J": "1FC14"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing animation has ended"}, {"label": "SavePlatformReleaseSamus", "addr": {"U": "1FC44", "E": "1FD10", "J": "1FC44"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Releases samus (sets pose to facing the foreground)"}, {"label": "SavePlatformSamusDetectionOut", "addr": {"U": "1FC78", "E": "1FD44", "J": "1FC78"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus is out of the platform after being released"}, {"label": "SavePlatformSpawnSprites", "addr": {"U": "1FCB0", "E": "1FD7C", "J": "1FCB0"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the save platform top and an item banner"}, {"label": "SavePlatformFlashingAnim", "addr": {"U": "1FD80", "E": "1FE4C", "J": "1FD80"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animation when saving"}, {"label": "SavePlatformFlashingAnimEnd", "addr": {"U": "1FDC0", "E": "1FE8C", "J": "1FDC0"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Ends the flahsing animation"}, {"label": "SavePlatformTextTimer", "addr": {"U": "1FE04", "E": "1FED0", "J": "1FE04"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Timer before displaying the \"Save complete\" banner"}, {"label": "SavePlatformCheckMessageBannerOut", "addr": {"U": "1FE48", "E": "1FF14", "J": "1FE48"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the banner is going out (if A is pressed)"}, {"label": "SavePlatformMessageBannerDisappearingTimer", "addr": {"U": "1FE80", "E": "1FF4C", "J": "1FE80"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Timer when the message banner is disappearing"}, {"label": "SavePlatformTopInit", "addr": {"U": "1FEA4", "E": "1FF70", "J": "1FEA4"}, "size": "16C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a save platform top sprite"}, {"label": "SavePlatformTop_Empty", "addr": {"U": "20010", "E": "200DC", "J": "20010"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "SavePlatformTopExtendGfxInit", "addr": {"U": "20014", "E": "200E0", "J": "20014"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the top extending down"}, {"label": "SavePlatformTopCheckExtendingEnded", "addr": {"U": "20030", "E": "200FC", "J": "20030"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the extending animation has ended"}, {"label": "SavePlatformTopRetractGfxInit", "addr": {"U": "2005C", "E": "20128", "J": "2005C"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the top retracting"}, {"label": "SavePlatformTopCheckRetractingEnded", "addr": {"U": "20090", "E": "2015C", "J": "20090"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting animation has ended"}, {"label": "SavePlatformTopCheckTubeAnimSpawnEnded", "addr": {"U": "200BC", "E": "20188", "J": "200BC"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube spawning animation has ended"}, {"label": "SavePlatformTopCheckSpawnBigLight", "addr": {"U": "2010C", "E": "201D8", "J": "2010C"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the big light should spawn"}, {"label": "SavePlatformTopCheckTubeAnimEnded", "addr": {"U": "20160", "E": "2022C", "J": "20160"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube animation has ended"}, {"label": "SavePlatformTopCheckTubeAnimDespawnEnded", "addr": {"U": "20190", "E": "2025C", "J": "20190"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube despawning animation has ended"}, {"label": "SaveStationTopCheckTubeAroundAnimEnded", "addr": {"U": "201CC", "E": "20298", "J": "201CC"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube around animation has ended (quick beam going to the center at the beginning)"}, {"label": "SaveStationTopTubeDownUpAnim", "addr": {"U": "201E4", "E": "202B0", "J": "201E4"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the down up tube animation (thing going from ground to top)"}, {"label": "SavePlatform_AI", "addr": {"U": "20228", "E": "202F4", "J": "20228"}, "size": "1A8", "mode": "thumb", "params": null, "return": null, "notes": "Save platform AI"}, {"label": "SavePlatformTop_AI", "addr": {"U": "203D0", "E": "2049C", "J": "203D0"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Save platform top AI"}, {"label": "DragonYMovement", "addr": {"U": "20564", "E": "20630", "J": "20564"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Handles the Y movement of the dragon"}, {"label": "DragonInit", "addr": {"U": "205B4", "E": "20680", "J": "205B4"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a dragon sprite"}, {"label": "DragonGfxInit", "addr": {"U": "20628", "E": "206F4", "J": "20628"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a dragon to be idle"}, {"label": "DragonGoUp", "addr": {"U": "20650", "E": "2071C", "J": "20650"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dragon going up"}, {"label": "DragonTurningAroundGfxInit", "addr": {"U": "20720", "E": "207EC", "J": "20720"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a dragon to be turning around"}, {"label": "DragonCheckTurningAroundFirstHalfAnimEnded", "addr": {"U": "20740", "E": "2080C", "J": "20740"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the first half of the turning around animation ended"}, {"label": "DragonCheckTurningAroundSecondHalfAnimEnded", "addr": {"U": "20778", "E": "20844", "J": "20778"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the second half of the turning around animation ended"}, {"label": "DragonSpittingGfxInit", "addr": {"U": "20798", "E": "20864", "J": "20798"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a dragon to do the warning before spitting"}, {"label": "DragonSpittingAnim", "addr": {"U": "207C0", "E": "2088C", "J": "207C0"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animation ended"}, {"label": "DragonSpawnFireball", "addr": {"U": "20800", "E": "208CC", "J": "20800"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a dragon fireball secondary sprite"}, {"label": "DragonFireballInit", "addr": {"U": "20870", "E": "2093C", "J": "20870"}, "size": "E4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a dragon fireball sprite"}, {"label": "DragonFireballMove", "addr": {"U": "20954", "E": "20A20", "J": "20954"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the dragon fireball"}, {"label": "DragonFireballExplodingGfxInit", "addr": {"U": "20A28", "E": "20AF4", "J": "20A28"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX when the fireball is exploding"}, {"label": "DragonFireballCheckExplodingAnimEnded", "addr": {"U": "20A64", "E": "20B30", "J": "20A64"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animation has ended"}, {"label": "Dragon_AI", "addr": {"U": "20A88", "E": "20B54", "J": "20A88"}, "size": "19C", "mode": "thumb", "params": null, "return": null, "notes": "Dragon AI"}, {"label": "DragonFireball_AI", "addr": {"U": "20C24", "E": "20CF0", "J": "20C24"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Dragon fireball AI"}, {"label": "DeoremLeftChangeClipAction", "addr": {"U": "20C7C", "E": "20D48", "J": "20C7C"}, "size": "84", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Used to place solid clipdata on the left part of Deorem to prevent damage boosting and to remove this solid clipdata when he dies"}, {"label": "DeoremRightChangeClipAction", "addr": {"U": "20D00", "E": "20DCC", "J": "20D00"}, "size": "90", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Same as above but for the right side"}, {"label": "DeoremRandomSpriteDebris", "addr": {"U": "20E64", "E": "20F30", "J": "20E64"}, "size": "11C", "mode": "thumb", "params": [{"label": "RandomNum", "type": "u8", "notes": "Random number (either Timer1 or 8 bit frame counter)"}], "return": null, "notes": "Handles the spawning of random sprite debris before the fight"}, {"label": "DeoremSpriteDebrisSpawn", "addr": {"U": "20F80", "E": "2104C", "J": "20F80"}, "size": "A8", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "Timer", "type": "u8"}], "return": null, "notes": "Handles the spawning of sprite debris when Deorem appears"}, {"label": "DeoremCheckLeaving", "addr": {"U": "21028", "E": "210F4", "J": "21028"}, "size": "6C", "mode": "thumb", "params": [{"label": "RamSlot", "type": "u8", "notes": "RAM slot"}], "return": {"label": "Leaving", "type": "bool"}, "notes": "Checks if Deorem is leaving"}, {"label": "DeoremSpawnChargeBeam", "addr": {"U": "21094", "E": "21160", "J": "21094"}, "size": "40", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Spawns the charge beam primary sprite and loads its GFX/palette"}, {"label": "DeoremSetEyeOpeningTimer", "addr": {"U": "210D4", "E": "211A0", "J": "210D4"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Sets the timer for how long the eye stays open depending on the difficulty"}, {"label": "DeoremCallSpawnChargeBeam", "addr": {"U": "21110", "E": "211DC", "J": "21110"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Calls DeoremSpawnChargeBeam and sets status to 0"}, {"label": "DeoremInit", "addr": {"U": "2113C", "E": "21208", "J": "2113C"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Deorem sprite"}, {"label": "DeoremSpawnGoingDown", "addr": {"U": "21264", "E": "21330", "J": "21264"}, "size": "1B8", "mode": "thumb", "params": null, "return": null, "notes": "Checks if it should spawn (samus detection and if samus have missiles) spawns the first half of the body (6 Deorem segments) and locks the screen"}, {"label": "DeoremSpawnGoingDownAnim", "addr": {"U": "2141C", "E": "214E8", "J": "2141C"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement, the sound/music and calls DeoremSpiteDebrisSpawn"}, {"label": "DeoremSpawnGoingUp", "addr": {"U": "21510", "E": "215DC", "J": "21510"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Spawns 6 others Deorem segments"}, {"label": "DeoremSpawnGoingUpAnim", "addr": {"U": "215E0", "E": "216AC", "J": "215E0"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement and calls DeoremSpiteDebrisSpawn"}, {"label": "DeoremSpawnHeadBody", "addr": {"U": "216C0", "E": "2178C", "J": "216C0"}, "size": "114", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the hidden part of the body (above the head) and the Deorem eye secondary sprite"}, {"label": "DeoremAfterSpawn", "addr": {"U": "217D4", "E": "218A0", "J": "217D4"}, "size": "AC", "mode": "thumb", "params": null, "return": null, "notes": "Called after the function above, sets the timer for how long the first eye will open"}, {"label": "DeoremRetracting", "addr": {"U": "21B04", "E": "21BD0", "J": "21B04"}, "size": "16C", "mode": "thumb", "params": null, "return": null, "notes": "Handles Deorem retracting after going down to attack"}, {"label": "DeoremThrowingThorns", "addr": {"U": "21C70", "E": "21D3C", "J": "21C70"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Handles Deorem throwing thorns (doesn't handle the thorn throwing, juste the idle state)"}, {"label": "DeoremAfterThorns", "addr": {"U": "21D64", "E": "21E30", "J": "21D64"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Called after the last thorn is thrown and before it hits the ground"}, {"label": "DeoremDying", "addr": {"U": "21DB0", "E": "21E7C", "J": "21DB0"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Called once when Deorem dies, sets events according to first or second location"}, {"label": "DeoremDyingGoingDown", "addr": {"U": "21E28", "E": "21EF4", "J": "21E28"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles Deorem going down when dying"}, {"label": "DeoremDeath", "addr": {"U": "21E74", "E": "21F40", "J": "21E74"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Calls SpriteDeath"}, {"label": "DeoremCheckLeavingToCeilingAnimEnded", "addr": {"U": "21EAC", "E": "21F78", "J": "21EAC"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the leaving to the ceiling animation has ended"}, {"label": "DeoremLeaving", "addr": {"U": "21F0C", "E": "21FD8", "J": "21F0C"}, "size": "180", "mode": "thumb", "params": null, "return": null, "notes": "Spawns 3 new Deorem segments and clears/set the events"}, {"label": "DeoremLeavingAnim", "addr": {"U": "2208C", "E": "22158", "J": "2208C"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Calls DeoremRandomSpriteDebris, starts a vertical screen shake and handles the movement"}, {"label": "DeoremLeavingInGroundDebris", "addr": {"U": "220F0", "E": "221BC", "J": "220F0"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Calls DeoremRandomSpriteDebris, starts a vertical screen shake is called when Deorem is leaving and he has its head on the ground"}, {"label": "DeoremSegmentInit", "addr": {"U": "22140", "E": "2220C", "J": "22140"}, "size": "21C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Deorem segment sprite"}, {"label": "DeoremSegmentSpawnGoingDown", "addr": {"U": "2235C", "E": "22428", "J": "2235C"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement when Deorem is spawning and going down"}, {"label": "DeoremSegmentSpawnGoingDownAfter", "addr": {"U": "223EC", "E": "224B8", "J": "223EC"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement when Deorem is spawning, going down and the other side has started spawning"}, {"label": "DeoremSegmentSpawnGoingUp", "addr": {"U": "224B4", "E": "22580", "J": "224B4"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement when Deorem is spawning and going up"}, {"label": "DeoremSegmentSpawnGoingUpAfter", "addr": {"U": "22544", "E": "22610", "J": "22544"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement when Deorem is spawning, going up and the current side has finished spawning"}, {"label": "DeoremSegmentRightIdleAnim", "addr": {"U": "2260C", "E": "226D8", "J": "2260C"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation and the thorn throwing of the segments on the right side"}, {"label": "DeoremSegmentLeftIdleAnim", "addr": {"U": "22750", "E": "2281C", "J": "22750"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation and the thorn throwing of the segments on the left side"}, {"label": "DeoremSegmentGoingDown", "addr": {"U": "22894", "E": "22960", "J": "22894"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the segments going down when Deorem is going down"}, {"label": "DeoremSegmentGoingUp", "addr": {"U": "22920", "E": "229EC", "J": "22920"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the segments going up when Deorem is going down"}, {"label": "DeoremSegmentAboveHeadMovement", "addr": {"U": "229AC", "E": "22A78", "J": "229AC"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement for the segments above the head"}, {"label": "DeoremSegmentLeftLeaving", "addr": {"U": "22A60", "E": "22B2C", "J": "22A60"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the left side leaving"}, {"label": "DeoremSegmentLeftLeavingEnd", "addr": {"U": "22B14", "E": "22BE0", "J": "22B14"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of the left side leaving, sets status to 0"}, {"label": "DeoremSegmentMiddleLeavingEnd", "addr": {"U": "22B3C", "E": "22C08", "J": "22B3C"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of the middle leaving, sets status to 0"}, {"label": "DeoremSegmentMiddleLeaving", "addr": {"U": "22B64", "E": "22C30", "J": "22B64"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the middle leaving"}, {"label": "DeoremSegmentRightLeaving", "addr": {"U": "22BF4", "E": "22CC0", "J": "22BF4"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the left side leaving"}, {"label": "DeoremSegmentRightLeavingEnd", "addr": {"U": "22C94", "E": "22D60", "J": "22C94"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of the right side leaving, sets status to 0"}, {"label": "DeoremSegmentSetTimerDying", "addr": {"U": "22CBC", "E": "22D88", "J": "22CBC"}, "size": "F8", "mode": "thumb", "params": null, "return": null, "notes": "Sets the timer depending on the room slot for how long it stays alive before exploding upon  Deorem death"}, {"label": "DeoremSegmentDying", "addr": {"U": "22DB4", "E": "22E80", "J": "22DB4"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of a Deorem segment"}, {"label": "DeoremEyeInit", "addr": {"U": "22E48", "E": "22F14", "J": "22E48"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Deorem eye sprite"}, {"label": "DeoremEyeSetPose9", "addr": {"U": "22F28", "E": "22FF4", "J": "22F28"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the pose to 9"}, {"label": "DeoremEyeMove", "addr": {"U": "22F38", "E": "23004", "J": "22F38"}, "size": "19C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement and the oam rotation of the Deorem eye"}, {"label": "DeoremEyeDyingGfxInit", "addr": {"U": "23170", "E": "2323C", "J": "23170"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the eye dying (also sets Deorem pose to 62)"}, {"label": "DeoremEyeDyingSpinningAnim", "addr": {"U": "231A8", "E": "23274", "J": "231A8"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the eye spinning when Deorem is dying (body still here)"}, {"label": "DeoremEyeDyingMovingAnim", "addr": {"U": "23228", "E": "232F4", "J": "23228"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the eye spinning and moving when Deorem is dying (body dying/not here) Calls DeoremSpawnChargeBeam"}, {"label": "DeoremThornInit", "addr": {"U": "232D8", "E": "233A4", "J": "232D8"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Deorem thorn sprite"}, {"label": "DeoremThornSpawning", "addr": {"U": "233B4", "E": "23480", "J": "233B4"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spinning animation when the thorn is spawning, before is moves"}, {"label": "DeoremThornMovement", "addr": {"U": "23424", "E": "234F0", "J": "23424"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the Deorem thorn"}, {"label": "Deorem_AI", "addr": {"U": "23520", "E": "235EC", "J": "23520"}, "size": "238", "mode": "thumb", "params": null, "return": null, "notes": "Deorem AI"}, {"label": "DeoremSegment_AI", "addr": {"U": "23758", "E": "23824", "J": "23758"}, "size": "2C8", "mode": "thumb", "params": null, "return": null, "notes": "Deorem segment AI"}, {"label": "DeoremEye_AI", "addr": {"U": "23A20", "E": "23AEC", "J": "23A20"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Deorem eye AI"}, {"label": "DeoremThorn_AI", "addr": {"U": "23B00", "E": "23BCC", "J": "23B00"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Deorem thorn AI"}, {"label": "DessgeegaCheckSamusNearLeftRight", "addr": {"U": "23B4C", "E": "23C18", "J": "23B4C"}, "size": "20", "mode": "thumb", "params": null, "return": {"label": "NotOutOfRange", "type": "bool", "notes": "Not out of range"}, "notes": "Checks if samus is in range of the dessgeega (0x140 on both side)"}, {"label": "DessgeegaInit", "addr": {"U": "23B6C", "E": "23C38", "J": "23B6C"}, "size": "10C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a dessgeega sprite"}, {"label": "DessgeegaJumpingGfxInit", "addr": {"U": "23C78", "E": "23D44", "J": "23C78"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a dessgeega to be jumping"}, {"label": "DessgeegaBeforeJumping", "addr": {"U": "23C98", "E": "23D64", "J": "23C98"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Called once before the dessgeega jumps"}, {"label": "DessgeegaBeforeLanding", "addr": {"U": "23CFC", "E": "23DC8", "J": "23CFC"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a dessgeega to be landing"}, {"label": "DessgeegaCheckSamusInRange", "addr": {"U": "23D34", "E": "23E00", "J": "23D34"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is in range"}, {"label": "DessgeegaBouncingGfxInit", "addr": {"U": "23DA8", "E": "23E74", "J": "23DA8"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a dessgeega to be falling"}, {"label": "DessgeegaCheckBouncing", "addr": {"U": "23DCC", "E": "23E98", "J": "23DCC"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the jump warning on ground"}, {"label": "DessgeegaCheckBeforeJumpingCeilingAnimEnded", "addr": {"U": "23E28", "E": "23EF4", "J": "23E28"}, "size": "14", "mode": "thumb", "params": null, "return": null, "notes": "Handles the jump warning on the ceiling"}, {"label": "DessgeegaMoveGround", "addr": {"U": "23E3C", "E": "23F08", "J": "23E3C"}, "size": "1E8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dessgeega jumping when on the ground"}, {"label": "DessgeegaMoveCeiling", "addr": {"U": "24024", "E": "240F0", "J": "24024"}, "size": "1FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dessgeega jumping when on a ceiling"}, {"label": "DessgeegaCheckLandingAnimEnded", "addr": {"U": "24220", "E": "242EC", "J": "24220"}, "size": "14", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the landing animation has ended"}, {"label": "DessgeegaJumpingGroundIntoBlock", "addr": {"U": "24234", "E": "24300", "J": "24234"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dessgeega falling from the ground"}, {"label": "DessgeegaJumpingCeilingIntoBlock", "addr": {"U": "242D8", "E": "243A4", "J": "242D8"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dessgeega falling from the ceiling"}, {"label": "DessgeegaScreamingAnim", "addr": {"U": "24380", "E": "2444C", "J": "24380"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dessgeega being idle on the ground"}, {"label": "DessgeegaCeilingIdleAnim", "addr": {"U": "24418", "E": "244E4", "J": "24418"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dessgeega being idle on the ceiling"}, {"label": "DessgeegaDeath", "addr": {"U": "24474", "E": "24540", "J": "24474"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Calls SpriteDeath"}, {"label": "DessgeegaLongBeamDetectSamus", "addr": {"U": "244CC", "E": "24598", "J": "244CC"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the detection of samus and the spawn for the long beam dessgeega"}, {"label": "DessgeegaLongBeamSpawning", "addr": {"U": "24584", "E": "24650", "J": "24584"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the long beam dessgeega"}, {"label": "Dessgeega_AI", "addr": {"U": "24660", "E": "2472C", "J": "24660"}, "size": "1DC", "mode": "thumb", "params": null, "return": null, "notes": "Dessgeega AI"}, {"label": "WaverInit", "addr": {"U": "2483C", "E": "24908", "J": "2483C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a waver sprite"}, {"label": "WaverMove", "addr": {"U": "248A4", "E": "24970", "J": "248A4"}, "size": "E8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the waver"}, {"label": "Waver_AI", "addr": {"U": "2498C", "E": "24A58", "J": "2498C"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Waver AI"}, {"label": "HiveSpawnParticle", "addr": {"U": "24A10", "E": "24ADC", "J": "24A10"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns 2 particle effects"}, {"label": "HiveInit", "addr": {"U": "24A3C", "E": "24B08", "J": "24A3C"}, "size": "124", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a hive sprite"}, {"label": "HiveCountMellow", "addr": {"U": "24B60", "E": "24C2C", "J": "24B60"}, "size": "54", "mode": "thumb", "params": null, "return": {"label": "NumOfMellowsAlive", "type": "u8", "notes": "Number of mellows alive"}, "notes": "Counts the number of mellows of the current hive"}, {"label": "HivePhase1", "addr": {"U": "24BB4", "E": "24C80", "J": "24BB4"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a mellow if necesserary and checks if the hive should go to phase 2"}, {"label": "HivePhase2", "addr": {"U": "24C2C", "E": "24CF8", "J": "24C2C"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a mellow if necesserary and checks if the hive should go to phase 3"}, {"label": "HivePhase3", "addr": {"U": "24CA4", "E": "24D70", "J": "24CA4"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a mellow if necessary"}, {"label": "HiveDying", "addr": {"U": "24CD4", "E": "24DA0", "J": "24CD4"}, "size": "10C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the hive dying, sets the 3 hives killed event if necessary"}, {"label": "HiveIgnoreSamusCollision", "addr": {"U": "24DE0", "E": "24EAC", "J": "24DE0"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the ignore samus collision timer of the hive to 1"}, {"label": "HiveRootsInit", "addr": {"U": "24DF0", "E": "24EBC", "J": "24DF0"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a hive roots sprite"}, {"label": "HiveRootsMove", "addr": {"U": "24E54", "E": "24F20", "J": "24E54"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle movement related part of the idle animation"}, {"label": "MellowInit", "addr": {"U": "24E78", "E": "24F44", "J": "24E78"}, "size": "150", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Initialize a mellow sprite"}, {"label": "MellowIdleAnim", "addr": {"U": "24FC8", "E": "25094", "J": "24FC8"}, "size": "C0", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the mellow being idle"}, {"label": "MellowFleeing", "addr": {"U": "25088", "E": "25154", "J": "25088"}, "size": "48", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles a mellow fleeing"}, {"label": "MellowSamusDetected", "addr": {"U": "250D0", "E": "2519C", "J": "250D0"}, "size": "68", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Called once when the mellow detected samus"}, {"label": "MellowMove", "addr": {"U": "25138", "E": "25204", "J": "25138"}, "size": "3FC", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the movement of the mellow when chasing samus"}, {"label": "Hive_AI", "addr": {"U": "25534", "E": "25600", "J": "25534"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Hive AI"}, {"label": "HiveRoots_AI", "addr": {"U": "255B8", "E": "25684", "J": "255B8"}, "size": "AC", "mode": "thumb", "params": null, "return": null, "notes": "Hive roots AI"}, {"label": "Mellow_AI", "addr": {"U": "25664", "E": "25730", "J": "25664"}, "size": "154", "mode": "thumb", "params": null, "return": null, "notes": "Mellow AI"}, {"label": "Mellow_Swarm_AI", "addr": {"U": "257B8", "E": "25884", "J": "257B8"}, "size": "1E8", "mode": "thumb", "params": null, "return": null, "notes": "Mellow swarm AI"}, {"label": "ImagoLarvaBellyFlashing", "addr": {"U": "25A24", "E": "25AF0", "J": "25A24"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animation of the imago larva belly"}, {"label": "ImagoLarvaInit", "addr": {"U": "25A80", "E": "25B4C", "J": "25A80"}, "size": "194", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Initialize an imago larva sprite"}, {"label": "ImagoLarvaDetectSamus", "addr": {"U": "25C14", "E": "25CE0", "J": "25C14"}, "size": "38", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Calls ImagoLarvaBellyFlashing and checks if samus is in range"}, {"label": "ImagoLarvaHittingWallGfxInit", "addr": {"U": "25C4C", "E": "25D18", "J": "25C4C"}, "size": "1C", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Initialize the GFX for the larva hitting the wall after dashing"}, {"label": "ImagoLarvaCallBellyFlashing", "addr": {"U": "25C68", "E": "25D34", "J": "25C68"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Calls ImagoLarvaBellyFlashing"}, {"label": "ImagoLarvaRetreating", "addr": {"U": "25C9C", "E": "25D68", "J": "25C9C"}, "size": "68", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Handles the larva retreating"}, {"label": "ImagoLarvaAfterRetreatGfxInit", "addr": {"U": "25D04", "E": "25DD0", "J": "25D04"}, "size": "1C", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Initialize the GFX for the larva after it retreated"}, {"label": "ImagoLarvaAttackAfterRetreat", "addr": {"U": "25D20", "E": "25DEC", "J": "25D20"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Timer related to the attack animation after the larva retreated"}, {"label": "ImagoLarvaStartingToAttack", "addr": {"U": "25D48", "E": "25E14", "J": "25D48"}, "size": "34", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Called once when the larva starts to attack"}, {"label": "ImagoLarvaCheckWarningAnimEnded", "addr": {"U": "25D7C", "E": "25E48", "J": "25D7C"}, "size": "24", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Checks if the warning animation before attacking has ended"}, {"label": "ImagoLarvaAttackGfxInit", "addr": {"U": "25DA0", "E": "25E6C", "J": "25DA0"}, "size": "28", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Initialize the GFX for the larva attacking"}, {"label": "ImagoLarvaAttacking", "addr": {"U": "25DC8", "E": "25E94", "J": "25DC8"}, "size": "64", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Handles the larva attacking"}, {"label": "ImagoTakingDamageGfxInit", "addr": {"U": "25E2C", "E": "25EF8", "J": "25E2C"}, "size": "38", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Initialize the GFX for the larva taking damage"}, {"label": "ImagoLarvaCeckTakingDamageAnimEnded", "addr": {"U": "25E64", "E": "25F30", "J": "25E64"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the taking damage animation has ended"}, {"label": "ImagoLarvaBeforeDying", "addr": {"U": "25E88", "E": "25F54", "J": "25E88"}, "size": "64", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Called once before the larva dies"}, {"label": "ImagoLarvaCheckDyingAnimEnded", "addr": {"U": "25EEC", "E": "25FB8", "J": "25EEC"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the dying animation has ended"}, {"label": "ImagoLarvaDead", "addr": {"U": "25F14", "E": "25FE0", "J": "25F14"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the imago larva, calls SpriteDeath  and sets the caterpillar killed event if necessary"}, {"label": "ImagoLarvaOutsideInit", "addr": {"U": "25F70", "E": "2603C", "J": "25F70"}, "size": "1CC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a imago larva outside sprite"}, {"label": "ImagoLarvaOutsideRetracting", "addr": {"U": "2613C", "E": "26208", "J": "2613C"}, "size": "180", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Called all the time but seems to only affect the retraction"}, {"label": "ImagoLarvaOutsideAttacking", "addr": {"U": "262BC", "E": "26388", "J": "262BC"}, "size": "60", "mode": "thumb", "params": [{"label": "SubSpriteDataPtr", "type": "SubSpriteData *", "notes": "Sub-sprite data pointer"}], "return": null, "notes": "Called all the time but seems to only affect the attack"}, {"label": "ImagoLarvaOutsideRemoveOrbs", "addr": {"U": "2631C", "E": "263E8", "J": "2631C"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Removes the 3 orbs when attacking"}, {"label": "ImagoLarvaOutsideAttackingAnim", "addr": {"U": "2636C", "E": "26438", "J": "2636C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the attacking animation"}, {"label": "ImagoLarvaOutsideCheckAttackingAnimEnded", "addr": {"U": "263D4", "E": "264A0", "J": "263D4"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the attacking animation has ended"}, {"label": "ImagoLarvaOutsideDead", "addr": {"U": "26424", "E": "264F0", "J": "26424"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the imago larva outside, calls SpriteDeath"}, {"label": "ImagoLarva_AI", "addr": {"U": "264F4", "E": "265C0", "J": "264F4"}, "size": "2C0", "mode": "thumb", "params": null, "return": null, "notes": "Imago larva AI"}, {"label": "ImagoLarva_Outside_AI", "addr": {"U": "267B4", "E": "26880", "J": "267B4"}, "size": "108", "mode": "thumb", "params": null, "return": null, "notes": "Imago larva outside AI"}, {"label": "MorphBallLauncherChangeClipAction", "addr": {"U": "268BC", "E": "26988", "J": "268BC"}, "size": "74", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enables the launcher hitbox"}, {"label": "MorphBallLauncherInit", "addr": {"U": "26930", "E": "269FC", "J": "26930"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a morph ball launcher sprite"}, {"label": "MorphBallLauncherDetectBomb", "addr": {"U": "269C4", "E": "26A90", "J": "269C4"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Checks if there's a bomb on the launcher"}, {"label": "MorphBallLauncherBombTimer", "addr": {"U": "26A58", "E": "26B24", "J": "26A58"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Timer that's as long as the bomb explosion time"}, {"label": "MorphBallLauncherLaunchSamusAnim", "addr": {"U": "26A98", "E": "26B64", "J": "26A98"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the samus launching animation"}, {"label": "MorphBallLauncher_AI", "addr": {"U": "26B08", "E": "26BD4", "J": "26B08"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Morph ball launcher AI"}, {"label": "MorphBallLauncher_Back_AI", "addr": {"U": "26B50", "E": "26C1C", "J": "26B50"}, "size": "E8", "mode": "thumb", "params": null, "return": null, "notes": "Morph ball launcher back AI"}, {"label": "ImagoCocoonUpdatePositionAndAnim", "addr": {"U": "26C38", "E": "26D04", "J": "26C38"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Updates the animation and the position for imago cocoon and the imago cocoon vines"}, {"label": "ImagoCocoonChangeOneClipAction", "addr": {"U": "26CA0", "E": "26D6C", "J": "26CA0"}, "size": "40", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Removes the middle block of the floor when imago cocoon falls"}, {"label": "ImagoCocoonChangeTwoMiddleClipAction", "addr": {"U": "26CE0", "E": "26DAC", "J": "26CE0"}, "size": "70", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Removes the 2 blocks of the floor around the middle block when imago cocoon falls"}, {"label": "ImagoCocoonChangeTwoAroundClipAction", "addr": {"U": "26D50", "E": "26E1C", "J": "26D50"}, "size": "7C", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Removes the 2 blocks at the edges of the floor when imago cocoon falls"}, {"label": "ImagoCocoonChangeTwoBlockingClipAction", "addr": {"U": "26DCC", "E": "26E98", "J": "26DCC"}, "size": "5C", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Removes the blocks blocking the passage after imago dies"}, {"label": "ImagoCocoonChangeOamScaling", "addr": {"U": "26E28", "E": "26EF4", "J": "26E28"}, "size": "54", "mode": "thumb", "params": [{"label": "ScalingCheck", "type": "u16", "notes": "Scaling Check"}, {"label": "OamScaling", "type": "u16", "notes": "OAM Scaling"}], "return": null, "notes": "Checks if the OAM scaling is above or below r0-0x100 or r0+0x100 if check is succesful, adds/decrement r1 to the current OAM scaling"}, {"label": "ImagoCocoonInit", "addr": {"U": "26E7C", "E": "26F48", "J": "26E7C"}, "size": "2AC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago cocoon sprite"}, {"label": "ImagoCocoonFallingMovement", "addr": {"U": "27128", "E": "271F4", "J": "27128"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the imago cocoon falling"}, {"label": "ImagoCocoonMainLoop", "addr": {"U": "27154", "E": "27220", "J": "27154"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of imago cocoon (detecting samus to play the music) also handles the death of imago cocoon (setting the event) also calls ImagoCocoonChangeOAMScalling and handles the palette switching"}, {"label": "ImagoCocoonFallingBeforeBlocks", "addr": {"U": "27284", "E": "27350", "J": "27284"}, "size": "174", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago cocoon falling before he destroyed the blocks"}, {"label": "ImagoCocoonFallingAfterBlocks", "addr": {"U": "273F8", "E": "274C4", "J": "273F8"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago cocoon falling after he destroyed the blocks"}, {"label": "ImagoCocoonUnlockPassage", "addr": {"U": "274F4", "E": "275C0", "J": "274F4"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Checks the timer for the imago cocoon, if timer ended sets door unlock timer and opens up the passage"}, {"label": "ImagoCocoonInGroundAnim", "addr": {"U": "2753C", "E": "27608", "J": "2753C"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animation of the imago cocoon when he is on the ground after falling"}, {"label": "ImagoCocoonVineInit", "addr": {"U": "275AC", "E": "27678", "J": "275AC"}, "size": "320", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago cocoon vine sprite"}, {"label": "ImagoCocoonVinePlaySound", "addr": {"U": "278CC", "E": "27998", "J": "278CC"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound if conditions are true"}, {"label": "ImagoCocoonVineDeath", "addr": {"U": "27904", "E": "279D0", "J": "27904"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Called when the vine dies"}, {"label": "ImagoCocoonVineSpawnSpore", "addr": {"U": "2798C", "E": "27A58", "J": "2798C"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the spores"}, {"label": "ImagoCocoonVineHangingDeath", "addr": {"U": "27AEC", "E": "27BB8", "J": "27AEC"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the removal of the hanging vine when imago dies"}, {"label": "ImagoCocoonVineHangingDeathAnim", "addr": {"U": "27B30", "E": "27BFC", "J": "27B30"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animation of the removal of the hanging vine when imago dies"}, {"label": "ImagoCocoonSporeSyncPosition", "addr": {"U": "27B74", "E": "27C40", "J": "27B74"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the spore position with the imago cocoon position"}, {"label": "ImagoCocoonSporeInit", "addr": {"U": "27BC8", "E": "27C94", "J": "27BC8"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago cocoon spore sprite"}, {"label": "ImagoCocoonSporeBeforeSpawning", "addr": {"U": "27C70", "E": "27D3C", "J": "27C70"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Called before the spawning of the imago cocoon spore"}, {"label": "ImagoCocoonSporeSpawning", "addr": {"U": "27CE4", "E": "27DB0", "J": "27CE4"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the imago cocoon spore"}, {"label": "ImagoCocoonSporeMove", "addr": {"U": "27D70", "E": "27E3C", "J": "27D70"}, "size": "114", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the imago cocoon spore"}, {"label": "ImagoCocoonSporeExplodingGfxInit", "addr": {"U": "27E84", "E": "27F50", "J": "27E84"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the spore exploding"}, {"label": "ImagoCocoonSporeCheckExplodingAnimEnded", "addr": {"U": "27EB8", "E": "27F84", "J": "27EB8"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animation has ended"}, {"label": "WingedRipperImagoCollision", "addr": {"U": "27EDC", "E": "27FA8", "J": "27EDC"}, "size": "C4", "mode": "thumb", "params": null, "return": {"label": "Colliding", "type": "bool"}, "notes": "Checks if the winged ripper and imago are colliding when he is falling"}, {"label": "WingedRipperInit", "addr": {"U": "27FA0", "E": "2806C", "J": "27FA0"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a winged ripper sprite"}, {"label": "WingedRipperGfxInit", "addr": {"U": "28040", "E": "2810C", "J": "28040"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the winged ripper"}, {"label": "WingedRipperMove", "addr": {"U": "28060", "E": "2812C", "J": "28060"}, "size": "224", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the winged ripper"}, {"label": "WingedRipperDeath", "addr": {"U": "28284", "E": "28350", "J": "28284"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the winged ripper"}, {"label": "ImagoCocoon_AI", "addr": {"U": "282C8", "E": "28394", "J": "282C8"}, "size": "104", "mode": "thumb", "params": null, "return": null, "notes": "Imago cocoon AI"}, {"label": "ImagoCocoonVine_AI", "addr": {"U": "283CC", "E": "28498", "J": "283CC"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Imago cocoon vine AI"}, {"label": "ImagoCocoonSpore_AI", "addr": {"U": "2843C", "E": "28508", "J": "2843C"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Imago cocoon spore AI"}, {"label": "WingedRipper_AI", "addr": {"U": "284C8", "E": "28594", "J": "284C8"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Winged ripper AI"}, {"label": "DefeatedImagoCocoon_AI", "addr": {"U": "28534", "E": "28600", "J": "28534"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Defeated imago cocoon AI"}, {"label": "ImagoCocoonRoot_AI", "addr": {"U": "285AC", "E": "28678", "J": "285AC"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Imago cocoon root AI"}, {"label": "EventTrigger_ImagoPassage_AI", "addr": {"U": "28628", "E": "286F4", "J": "28628"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Event trigger, discovered imago passage AI"}, {"label": "ImagoCocoon_AfterFight_AI", "addr": {"U": "286B8", "E": "28784", "J": "286B8"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Imago cocoon after fight AI"}, {"label": "ElevatorPad_AI", "addr": {"U": "2872C", "E": "287F8", "J": "2872C"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Elevator pad AI"}, {"label": "DisableChozodiaAlarm", "addr": {"U": "287E4", "E": "288B0", "J": "287E4"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Disables the alarm if mecha ridley isn't dead  sets the stealth music if fully powered suit isn't obtained"}, {"label": "DecrementChozodiaAlarm", "addr": {"U": "28830", "E": "288FC", "J": "28830"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Decrements the alarm"}, {"label": "SpawnSpacePiratesWaiting", "addr": {"U": "28874", "E": "28940", "J": "28874"}, "size": "138", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the space pirates waiting when the alarm is on"}, {"label": "SpacePirateTurningAround", "addr": {"U": "289AC", "E": "28A78", "J": "289AC"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Updates the hitbox left and right offset and X flips the sprite if necessary"}, {"label": "SpacePirateSamusDetection", "addr": {"U": "289F0", "E": "28ABC", "J": "289F0"}, "size": "A18", "mode": "thumb", "params": null, "return": null, "notes": "Handles the pirate detecting samus"}, {"label": "SpacePirateCheckCollidingWithLaser", "addr": {"U": "29408", "E": "294D4", "J": "29408"}, "size": "D8", "mode": "thumb", "params": null, "return": null, "notes": "Checks if a space pirate is colliding with a space pirate laser"}, {"label": "SpacePirateFireLaserGround", "addr": {"U": "294E0", "E": "295AC", "J": "294E0"}, "size": "190", "mode": "thumb", "params": null, "return": null, "notes": "Spawns space pirate lasers secondary sprites when the space pirate fires on ground"}, {"label": "SpacePirateFireLaserWall", "addr": {"U": "29670", "E": "2973C", "J": "29670"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Spawns space pirate lasers secondary sprites when the space pirate fires on the wall"}, {"label": "SpacePirateCheckSamusInShootingRange", "addr": {"U": "29A18", "E": "29AE4", "J": "29A18"}, "size": "150", "mode": "thumb", "params": null, "return": {"label": "InRange", "type": "bool", "notes": "In range"}, "notes": "Checks if samus in is shooting range of the pirate"}, {"label": "SpacePirateInit", "addr": {"U": "2A374", "E": "2A440", "J": "2A374"}, "size": "2C8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a space pirate sprite"}, {"label": "SpacePirateRunningTurningAround", "addr": {"U": "2A804", "E": "2A8D0", "J": "2A804"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the pirate turning around when running"}, {"label": "SpacePirateIdleAlertAnimation", "addr": {"U": "2A83C", "E": "2A908", "J": "2A83C"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation of the pirate when alert"}, {"label": "SpacePirateClimbing", "addr": {"U": "2B708", "E": "2B7D4", "J": "2B708"}, "size": "1F4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the pirate climbing"}, {"label": "SpacePirateDeath", "addr": {"U": "2C30C", "E": "2C3D8", "J": "2C30C"}, "size": "94", "mode": "thumb", "params": [{"label": "PlaySoundFlag", "type": "bool", "notes": "Play sound flag"}], "return": null, "notes": "Handles the death of the space pirate, counts the number of space pirates alives and if all pirates are dead disables the alarm"}, {"label": "SpacePirateLaserInit", "addr": {"U": "2C44C", "E": "2C518", "J": "2C44C"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a space pirate laser sprite"}, {"label": "SpacePirateLaserExploding", "addr": {"U": "2C540", "E": "2C60C", "J": "2C540"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the explosion of the laser (when colliding with something)"}, {"label": "SpacePirateLaserCheckExplodingAnimEnded", "addr": {"U": "2C5A0", "E": "2C66C", "J": "2C5A0"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animation has ended"}, {"label": "SpacePirateLaserMove", "addr": {"U": "2C5C4", "E": "2C690", "J": "2C5C4"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the space pirate laser"}, {"label": "SpacePirate_AI", "addr": {"U": "2C6A4", "E": "2C770", "J": "2C6A4"}, "size": "488", "mode": "thumb", "params": null, "return": null, "notes": "Space pirate AI"}, {"label": "SpacePirateLaser_AI", "addr": {"U": "2CB2C", "E": "2CBF8", "J": "2CB2C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Space pirate laser AI"}, {"label": "BlackSpacePirateHitByProjectile", "addr": {"U": "2CB68", "E": "2CC34", "J": "2CB68"}, "size": "268", "mode": "thumb", "params": null, "return": null, "notes": "Handles the black space pirate getting hit by a projectile, checks if the projectile is of plasma type, deals damage if yes and spawns a particle effect if not"}, {"label": "BlackSpacePirateCollidingWithLaser", "addr": {"U": "2CDD0", "E": "2CE9C", "J": "2CDD0"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the black space pirate is colliding with a laser, if yes sets a particle effect"}, {"label": "BlackSpacePirateInit", "addr": {"U": "2CEB0", "E": "2CF7C", "J": "2CEB0"}, "size": "E4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a black space pirate sprite"}, {"label": "BlackSpacePirateCheckOffScreen", "addr": {"U": "2CF94", "E": "2D060", "J": "2CF94"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the black space pirate is on screen, if yes sets its pose to 27"}, {"label": "BlackSpacePirateBeforeShootingGfxInit", "addr": {"U": "2CFB4", "E": "2D080", "J": "2CFB4"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the black space pirate before shooting"}, {"label": "SpacePirateShootingTimer", "addr": {"U": "2D004", "E": "2D0D0", "J": "2D004"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the timer for the timer shooting"}, {"label": "BlackSpacePirateShootingGfxInit", "addr": {"U": "2D048", "E": "2D114", "J": "2D048"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the black space pirate shooting"}, {"label": "BlackSpacePirateJumping", "addr": {"U": "2D180", "E": "2D24C", "J": "2D180"}, "size": "45C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the black space pirate jumping"}, {"label": "BlackSpacePirateDeath", "addr": {"U": "2D758", "E": "2D824", "J": "2D758"}, "size": "3C", "mode": "thumb", "params": [{"label": "PlaySoundFlag", "type": "bool", "notes": "Play sound flag"}], "return": null, "notes": "Handles the death of the black space pirate"}, {"label": "BlackSpacePirate_AI", "addr": {"U": "2D840", "E": "2D90C", "J": "2D840"}, "size": "438", "mode": "thumb", "params": null, "return": null, "notes": "Black space pirate AI"}, {"label": "EscapeShipSpacePirateInit", "addr": {"U": "2DC78", "E": "2DD44", "J": "2DC78"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an escape ship space pirate sprite"}, {"label": "EscapeShipSpacePirateInit2", "addr": {"U": "2DCD8", "E": "2DDA4", "J": "2DCD8"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Second part of the initialization"}, {"label": "EscapeShipSpacePirateDetectSamus", "addr": {"U": "2DD1C", "E": "2DDE8", "J": "2DD1C"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus is in range"}, {"label": "EscapeShipSpacePirate_AI", "addr": {"U": "2DD98", "E": "2DE64", "J": "2DD98"}, "size": "458", "mode": "thumb", "params": null, "return": null, "notes": "Escape ship space pirate AI"}, {"label": "ZiplineGeneratorChangeClipAction", "addr": {"U": "2E1F0", "E": "2E2BC", "J": "2E1F0"}, "size": "64", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox for the zipline generator"}, {"label": "ZiplineGeneratorInit", "addr": {"U": "2E254", "E": "2E320", "J": "2E254"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zipline generator sprite"}, {"label": "ZiplineGeneratorDetectSamus", "addr": {"U": "2E334", "E": "2E400", "J": "2E334"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus is in the hole and in morph ball if yes starts activating the ziplines"}, {"label": "ZiplineGeneratorActivating", "addr": {"U": "2E3F0", "E": "2E4BC", "J": "2E3F0"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the activating animation, and the end of the activation (sets samus pose to morphball and sets the ziplines activated event)"}, {"label": "ZiplineGenerator_AI", "addr": {"U": "2E4EC", "E": "2E5B8", "J": "2E4EC"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Zipline generator AI"}, {"label": "ZiplineGeneratorPart_AI", "addr": {"U": "2E524", "E": "2E5F0", "J": "2E524"}, "size": "EC", "mode": "thumb", "params": null, "return": null, "notes": "Zipline generator part AI"}, {"label": "GametInit", "addr": {"U": "2E610", "E": "2E6DC", "J": "2E610"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a gamet sprite"}, {"label": "GametGfxInit", "addr": {"U": "2E670", "E": "2E73C", "J": "2E670"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the gamet"}, {"label": "GametSpawn", "addr": {"U": "2E6AC", "E": "2E778", "J": "2E6AC"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is in range and spawns the gamet"}, {"label": "GametGoingUp", "addr": {"U": "2E814", "E": "2E8E0", "J": "2E814"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gamet going up after spawning"}, {"label": "GametRespawning", "addr": {"U": "2E894", "E": "2E960", "J": "2E894"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gamet respawning"}, {"label": "GametMove", "addr": {"U": "2E8F8", "E": "2E9C4", "J": "2E8F8"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gamet moving"}, {"label": "Gamet_AI", "addr": {"U": "2E9BC", "E": "2EA88", "J": "2E9BC"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Gamet AI"}, {"label": "SecurityGateChangeClipAction", "addr": {"U": "2EAF8", "E": "2EBC4", "J": "2EAF8"}, "size": "50", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disables the hitbox for the gate"}, {"label": "SecurityGateOpen", "addr": {"U": "2EB48", "E": "2EC14", "J": "2EB48"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Opens the gate"}, {"label": "SecurityGateStartClosing", "addr": {"U": "2EB88", "E": "2EC54", "J": "2EB88"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Starts the closing of the gate"}, {"label": "SecurityGateDefaultOpenInit", "addr": {"U": "2EBC0", "E": "2EC8C", "J": "2EBC0"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a security gate default open sprite"}, {"label": "SecurityGateDefaultOpenCheckAlarm", "addr": {"U": "2EC68", "E": "2ED34", "J": "2EC68"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm timer isn't 0, if yes calls SecurityGateStartClosing"}, {"label": "SecurityGateCheckClosingAnimEnded", "addr": {"U": "2EC80", "E": "2ED4C", "J": "2EC80"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing animation has ended"}, {"label": "SecurityGateDefaultOpenOpenAfterAlarm", "addr": {"U": "2ECB8", "E": "2ED84", "J": "2ECB8"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm timer is 0, if yes calls SecurityGateOpen"}, {"label": "SecurityGateCheckOpeningAnimEnded", "addr": {"U": "2ED18", "E": "2EDE4", "J": "2ED18"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening animation has ended"}, {"label": "SecurityGateDeath", "addr": {"U": "2ED40", "E": "2EE0C", "J": "2ED40"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Calls SpriteDeath, seems unused"}, {"label": "SecurityGateDefaultClosedInit", "addr": {"U": "2ED80", "E": "2EE4C", "J": "2ED80"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a security gate default closed sprite"}, {"label": "SecurityGateDefaultClosedCheckAlarm", "addr": {"U": "2EE24", "E": "2EEF0", "J": "2EE24"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm timer is 0, if yes calls SecurityGateStartClosing"}, {"label": "SecurityGateDefaultClosedCloseAfterAlarm", "addr": {"U": "2EE3C", "E": "2EF08", "J": "2EE3C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm timer isn't 0, if yes calls SecurityGateOpen"}, {"label": "SecurityGate_Open_AI", "addr": {"U": "2EE78", "E": "2EF44", "J": "2EE78"}, "size": "F0", "mode": "thumb", "params": null, "return": null, "notes": "Security gate default open AI"}, {"label": "SecurityGate_Closed_AI", "addr": {"U": "2EF68", "E": "2F034", "J": "2EF68"}, "size": "F0", "mode": "thumb", "params": null, "return": null, "notes": "Security gate default closed AI"}, {"label": "ZebboInit", "addr": {"U": "2F058", "E": "2F124", "J": "2F058"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zebbo sprite"}, {"label": "ZebboGfxInit", "addr": {"U": "2F0B0", "E": "2F17C", "J": "2F0B0"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the zebbo"}, {"label": "ZebboSpawn", "addr": {"U": "2F0EC", "E": "2F1B8", "J": "2F0EC"}, "size": "164", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is in range and spawns the zebbo"}, {"label": "ZebboGoingUp", "addr": {"U": "2F250", "E": "2F31C", "J": "2F250"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the zebbo going up after spawning"}, {"label": "ZebboRespawning", "addr": {"U": "2F2D0", "E": "2F39C", "J": "2F2D0"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Handles the zebbo respawning"}, {"label": "ZebboMove", "addr": {"U": "2F334", "E": "2F400", "J": "2F334"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the zebbo moving"}, {"label": "Zebbo_AI", "addr": {"U": "2F3FC", "E": "2F4C8", "J": "2F3FC"}, "size": "138", "mode": "thumb", "params": null, "return": null, "notes": "Zebbo AI"}, {"label": "WorkerRobotCheckSamusTouchingFront", "addr": {"U": "2F534", "E": "2F600", "J": "2F534"}, "size": "C4", "mode": "thumb", "params": null, "return": {"label": "SamusTouchingFront", "type": "bool", "notes": "Samus touching front"}, "notes": "Checks if samus is in front of the worker robot"}, {"label": "WorkerRobotInit", "addr": {"U": "2F5F8", "E": "2F6C4", "J": "2F5F8"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a worker robot sprite"}, {"label": "WorkerRobotGfxInit", "addr": {"U": "2F688", "E": "2F754", "J": "2F688"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the worker robot"}, {"label": "WorkerRobotSleepingDetectProjectile", "addr": {"U": "2F6A8", "E": "2F774", "J": "2F6A8"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks for a projectile collision when the robot is sleeping"}, {"label": "WorkerRobotStandingGfxInit", "addr": {"U": "2F6E0", "E": "2F7AC", "J": "2F6E0"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the worker robot standing"}, {"label": "WorkerRobotCheckStandingAnimEnded", "addr": {"U": "2F718", "E": "2F7E4", "J": "2F718"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the standing animation has ended"}, {"label": "WorkerRobotWalkingDetectProjectile", "addr": {"U": "2F734", "E": "2F800", "J": "2F734"}, "size": "19C", "mode": "thumb", "params": null, "return": null, "notes": "Checks for a projectile collision when the robot is walking"}, {"label": "WorkerRobotWakingUpGfxInit", "addr": {"U": "2F8D0", "E": "2F99C", "J": "2F8D0"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the worker robot waking up"}, {"label": "WorkerRobotCheckProjectile", "addr": {"U": "2F90C", "E": "2F9D8", "J": "2F90C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Calls WorkerRobotWalkingDetectProjectile and decrements timer1"}, {"label": "WorkerRobotWalkGfxInit", "addr": {"U": "2F948", "E": "2FA14", "J": "2F948"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the worker robot walking"}, {"label": "WorkerRobotMove", "addr": {"U": "2F968", "E": "2FA34", "J": "2F968"}, "size": "25C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the worker robot walking"}, {"label": "WorkerRobotBackToSleepGfxInit", "addr": {"U": "2FBC4", "E": "2FC90", "J": "2FBC4"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the worker robot going back to sleep"}, {"label": "WorkerRobotCheckBackToSleepAnimEnded", "addr": {"U": "2FBFC", "E": "2FCC8", "J": "2FBFC"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the going back to sleep animation has ended"}, {"label": "WorkerRobotTurningAround", "addr": {"U": "2FC30", "E": "2FCFC", "J": "2FC30"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the worker robot turning around"}, {"label": "WorkerRobotCheckTurningAroundAnimEnded", "addr": {"U": "2FC7C", "E": "2FD48", "J": "2FC7C"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the turning around animation has ended"}, {"label": "WorkerRobotFallingGfxInit", "addr": {"U": "2FC98", "E": "2FD64", "J": "2FC98"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the worker robot falling"}, {"label": "WorkerRobotFalling", "addr": {"U": "2FCC0", "E": "2FD8C", "J": "2FCC0"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the worker robot falling"}, {"label": "WorkingRobotFallingSleepGfxInit", "addr": {"U": "2FD40", "E": "2FE0C", "J": "2FD40"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the worker robot falling when asleep"}, {"label": "WorkerRobotFallingSleep", "addr": {"U": "2FD5C", "E": "2FE28", "J": "2FD5C"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Handles the worker robot falling when asleep"}, {"label": "WorkerRobot_AI", "addr": {"U": "2FDD4", "E": "2FEA0", "J": "2FDD4"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Worker robot AI"}, {"label": "ParasiteCount", "addr": {"U": "2FEF0", "E": "2FFBC", "J": "2FEF0"}, "size": "54", "mode": "thumb", "params": null, "return": {"label": "CountGreaterThan3", "type": "bool", "notes": "Count greater than 3"}, "notes": "Counts the number of bugs that are on pose 0x43, used to know if samus should take damage"}, {"label": "ParasiteInit", "addr": {"U": "2FF44", "E": "30010", "J": "2FF44"}, "size": "12C", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Initialize a parasite sprite"}, {"label": "ParasiteGrabSamus", "addr": {"U": "30070", "E": "3013C", "J": "30070"}, "size": "90", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite grabbing samus"}, {"label": "ParasiteSamusGrabbed", "addr": {"U": "30100", "E": "301CC", "J": "30100"}, "size": "190", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite behavior when grabbing samus"}, {"label": "ParasiteExpulsedGfxInit", "addr": {"U": "30290", "E": "3035C", "J": "30290"}, "size": "30", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Initialize the GFX for the parasite getting expulsed"}, {"label": "ParasiteStarExplusedAfterGrabbingObject", "addr": {"U": "302C0", "E": "3038C", "J": "302C0"}, "size": "A0", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite starting to get expulsed when he was previously on an object (geron or samus)"}, {"label": "ParasiteExpulsed", "addr": {"U": "30360", "E": "3042C", "J": "30360"}, "size": "A8", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite getting expulsed"}, {"label": "ParasiteExplusedAfterGrabbingObject", "addr": {"U": "30408", "E": "304D4", "J": "30408"}, "size": "E8", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite getting expulsed when he was previously on an object (geron or samus)"}, {"label": "ParasiteFalling", "addr": {"U": "304F0", "E": "305BC", "J": "304F0"}, "size": "DC", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite falling"}, {"label": "ParasiteJumping", "addr": {"U": "30684", "E": "30750", "J": "30684"}, "size": "BC", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite (multiple) jumping"}, {"label": "ParasiteJumpingSecondPart", "addr": {"U": "3080C", "E": "308D8", "J": "3080C"}, "size": "C0", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the second part of the parasite (multiple) jumping"}, {"label": "ParasiteCrouchingGfxInit", "addr": {"U": "308CC", "E": "30998", "J": "308CC"}, "size": "50", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Initialize the GFX for the parasite crouching"}, {"label": "ParasiteWalking", "addr": {"U": "30AB4", "E": "30B80", "J": "30AB4"}, "size": "1A4", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite (multiple) walking"}, {"label": "ParasiteUncrouchingGfxInit", "addr": {"U": "30C58", "E": "30D24", "J": "30C58"}, "size": "1C", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Initialize the GFX for the parasite uncrouching"}, {"label": "ParasiteCheckTurningAroundAnimEnded", "addr": {"U": "30C74", "E": "30D40", "J": "30C74"}, "size": "24", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Checks if the turning around animation has ended"}, {"label": "ParasiteCheckTurningAroundAnimNearEnded", "addr": {"U": "30C98", "E": "30D64", "J": "30C98"}, "size": "1C", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Checks if the turning around animation has nearly ended"}, {"label": "ParasiteLanding", "addr": {"U": "30CD4", "E": "30DA0", "J": "30CD4"}, "size": "A0", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite landing"}, {"label": "ParasiteNormalFalling", "addr": {"U": "30D84", "E": "30E50", "J": "30D84"}, "size": "74", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the parasite falling normally (block broken below)"}, {"label": "ParasiteCheckEvent", "addr": {"U": "30E54", "E": "30F20", "J": "30E54"}, "size": "60", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Checks if the bugs killed event should be set"}, {"label": "ParasiteGrabGeron", "addr": {"U": "30EB4", "E": "30F80", "J": "30EB4"}, "size": "98", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the bug grabbing a geron"}, {"label": "ParasiteBombCollision", "addr": {"U": "310E8", "E": "311B4", "J": "310E8"}, "size": "118", "mode": "thumb", "params": [{"label": "CurrSpritePtr", "type": "SpriteData *", "notes": "Current sprite pointer"}], "return": null, "notes": "Handles the collision with a bomb exploding"}, {"label": "Parasite_Multiple_AI", "addr": {"U": "31200", "E": "312CC", "J": "31200"}, "size": "27C", "mode": "thumb", "params": null, "return": null, "notes": "Parasite, multiple AI"}, {"label": "Parasite_AI", "addr": {"U": "3147C", "E": "31548", "J": "3147C"}, "size": "28C", "mode": "thumb", "params": null, "return": null, "notes": "Parasite AI"}, {"label": "PistonChangeFourClipAction", "addr": {"U": "31708", "E": "317D4", "J": "31708"}, "size": "54", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox for the piston"}, {"label": "PistonChangeOneBelowClipAction", "addr": {"U": "3175C", "E": "31828", "J": "3175C"}, "size": "20", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of the bottom block of the piston"}, {"label": "PistonChangeOneUpperClipAction", "addr": {"U": "3177C", "E": "31848", "J": "3177C"}, "size": "28", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox of the top block of the piston"}, {"label": "PistonCheckSamusIn", "addr": {"U": "317E4", "E": "318B0", "J": "317E4"}, "size": "4C", "mode": "thumb", "params": null, "return": {"label": "In", "type": "bool"}, "notes": "Checks if samus is in the top part of the piston after it went up"}, {"label": "PistonInit", "addr": {"U": "31830", "E": "318FC", "J": "31830"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a piston sprite"}, {"label": "PistonGfxInit", "addr": {"U": "31890", "E": "3195C", "J": "31890"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the piston"}, {"label": "PistonCheckProjectile", "addr": {"U": "318BC", "E": "31988", "J": "318BC"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Checks for a projectile"}, {"label": "PistonMove", "addr": {"U": "31944", "E": "31A10", "J": "31944"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Handles the piston opening"}, {"label": "PistonAfterMoving", "addr": {"U": "3199C", "E": "31A68", "J": "3199C"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Called after the piston finished opening"}, {"label": "Piston_AI", "addr": {"U": "319D0", "E": "31A9C", "J": "319D0"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Piston AI"}, {"label": "RidleyCheckDead", "addr": {"U": "31C58", "E": "31D24", "J": "31C58"}, "size": "180", "mode": "thumb", "params": null, "return": null, "notes": "Checks if ridley is dead"}, {"label": "RidleySamusGrabbed", "addr": {"U": "31E40", "E": "31F0C", "J": "31E40"}, "size": "268", "mode": "thumb", "params": [{"label": "RamSlot", "type": "u8", "notes": "RAM Slot"}], "return": null, "notes": "Handles ridley grabbing samus"}, {"label": "RidleyTailAttacksXMove", "addr": {"U": "320D8", "E": "321A4", "J": "320D8"}, "size": "B0", "mode": "thumb", "params": [{"label": "XMovement", "type": "u16", "notes": "X movement"}], "return": {"label": "PrevCollisionNotAir", "type": "bool", "notes": "Previous collision not air"}, "notes": "Handles ridley moving horizontally when doing tail attacks"}, {"label": "RidleyTailAttacksYMove", "addr": {"U": "32188", "E": "32254", "J": "32188"}, "size": "44", "mode": "thumb", "params": [{"label": "YMovement", "type": "u16", "notes": "Y movement"}], "return": null, "notes": "Handles ridley moving vertically when doing tail attacks"}, {"label": "RidleySpawnFireballsStart", "addr": {"U": "321CC", "E": "32298", "J": "321CC"}, "size": "58", "mode": "thumb", "params": [{"label": "OamScaling", "type": "u16", "notes": "OAM Scaling"}], "return": null, "notes": "Spawns the fireballs at the beginning of the fight using r0 for room slot"}, {"label": "RidleyCheckSpawn", "addr": {"U": "32224", "E": "322F0", "J": "32224"}, "size": "284", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a ridley sprite"}, {"label": "RidleyPlayCutscene", "addr": {"U": "324A8", "E": "32574", "J": "324A8"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is facing left, if yes plays cutscene"}, {"label": "RidleySpawning", "addr": {"U": "3255C", "E": "32628", "J": "3255C"}, "size": "6E4", "mode": "thumb", "params": null, "return": null, "notes": "Handles ridley spawning"}, {"label": "RidleyFlyingGfxInit", "addr": {"U": "32C40", "E": "32D0C", "J": "32C40"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for ridley flying normally"}, {"label": "RidleyTurningAroundGfxInit", "addr": {"U": "332F4", "E": "333C0", "J": "332F4"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for ridley turning around"}, {"label": "RidleyCheckTurningAroundAnimNearEnded", "addr": {"U": "3337C", "E": "33448", "J": "3337C"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the turning around animation has nearly ended"}, {"label": "RidleyCheckTurningAroundSecondPartAnimEnded", "addr": {"U": "33410", "E": "334DC", "J": "33410"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Check if the second part of the turning around animation has ended"}, {"label": "Ridley_Empty", "addr": {"U": "338B4", "E": "33980", "J": "338B4"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "RidleyBigFireballsAttack", "addr": {"U": "339D4", "E": "33AA0", "J": "339D4"}, "size": "12C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the big fireballs attack"}, {"label": "RidleyDying", "addr": {"U": "33B00", "E": "33BCC", "J": "33B00"}, "size": "214", "mode": "thumb", "params": null, "return": null, "notes": "Handles ridley dying, sets random particle effects and sets the ridley killed event"}, {"label": "RidleyBodyInit", "addr": {"U": "33D14", "E": "33DE0", "J": "33D14"}, "size": "148", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ridley body sprite"}, {"label": "RidleyTailDead", "addr": {"U": "33F74", "E": "34040", "J": "33F74"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Handles the ridley tail dying"}, {"label": "RidleyTailInit", "addr": {"U": "340B8", "E": "34184", "J": "340B8"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ridley tail sprite"}, {"label": "RidleyFireBallInit", "addr": {"U": "34710", "E": "347DC", "J": "34710"}, "size": "14C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ridley fire ball sprite"}, {"label": "RidleyFireBallSmallMove", "addr": {"U": "3485C", "E": "34928", "J": "3485C"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the small fire balls (when samus is grabbed)"}, {"label": "RidleyFireBallBigMove", "addr": {"U": "348B4", "E": "34980", "J": "348B4"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the big fire balls (when samus is grabbed)"}, {"label": "RidleyFireBallMediumMove", "addr": {"U": "34920", "E": "349EC", "J": "34920"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the medium fire balls (at the beginning of the fight)"}, {"label": "Ridley_AI", "addr": {"U": "34A38", "E": "34B04", "J": "34A38"}, "size": "2EC", "mode": "thumb", "params": null, "return": null, "notes": "Ridley AI"}, {"label": "RidleyTail_AI", "addr": {"U": "34D24", "E": "34DF0", "J": "34D24"}, "size": "310", "mode": "thumb", "params": null, "return": null, "notes": "Ridley tail AI"}, {"label": "RidleyBody_AI", "addr": {"U": "35034", "E": "35100", "J": "35034"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Ridley fireball AI"}, {"label": "RidleyFireball_AI", "addr": {"U": "3519C", "E": "35268", "J": "3519C"}, "size": "1C4", "mode": "thumb", "params": null, "return": null, "notes": "Ridley fireball AI"}, {"label": "MetroidMidair", "addr": {"U": "35360", "E": "3542C", "J": "35360"}, "size": "7C", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": {"label": "NotMidair", "type": "bool", "notes": "Not midair"}, "notes": "Checks if colliding with air, used when samus is gabbed for the movement"}, {"label": "MetroidMove", "addr": {"U": "353DC", "E": "354A8", "J": "353DC"}, "size": "30C", "mode": "thumb", "params": [{"label": "SamusYPosition", "type": "u16", "notes": "Samus Y position"}, {"label": "SamusXPosition", "type": "u16", "notes": "Samus X position"}, {"label": "YSpeed", "type": "u8", "notes": "Y speed"}, {"label": "XSpeed", "type": "u8", "notes": "X speed"}, {"label": "SpeedDivisor", "type": "u8", "notes": "Speed divisor"}], "return": null, "notes": "Handles the metroid moving"}, {"label": "MetroidBombDetection", "addr": {"U": "356E8", "E": "357B4", "J": "356E8"}, "size": "BC", "mode": "thumb", "params": null, "return": {"label": "BombTouching", "type": "bool", "notes": "Bomb touching"}, "notes": "Detects if a bomb is colliding with the metroid"}, {"label": "MetroidCheckBouncingOnMetroid", "addr": {"U": "357A4", "E": "35870", "J": "357A4"}, "size": "1B8", "mode": "thumb", "params": [{"label": "Movement", "type": "u16"}], "return": null, "notes": "Checks if the metroid is colliding with another metroid, if yes makes them bounce"}, {"label": "MetroidCheckSamusGrabbed", "addr": {"U": "3595C", "E": "35A28", "J": "3595C"}, "size": "48", "mode": "thumb", "params": null, "return": {"label": "SamusGrabbed", "type": "bool", "notes": "Samus grabbed"}, "notes": "Checks if another metroid is grabbing samus"}, {"label": "MetroidPlaySound", "addr": {"U": "359A4", "E": "35A70", "J": "359A4"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound if conditions are true"}, {"label": "MetroidInit", "addr": {"U": "359D0", "E": "35A9C", "J": "359D0"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a metroid sprite"}, {"label": "MetroidCheckSpawn", "addr": {"U": "35B54", "E": "35C20", "J": "35B54"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the metroid should spawn (is on screen)"}, {"label": "MetroidSpawning", "addr": {"U": "35B98", "E": "35C64", "J": "35B98"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the metroid spawning"}, {"label": "MetroidSpawnedGfxInit", "addr": {"U": "35C74", "E": "35D40", "J": "35C74"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a metroid to be moving"}, {"label": "MetroidMovement", "addr": {"U": "35CA8", "E": "35D74", "J": "35CA8"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Calls MetroidMove, MetroidCheckBouncingOnMetroid and checks if grabbing samus"}, {"label": "MetroidGrabSamusGfxInit", "addr": {"U": "35D28", "E": "35DF4", "J": "35D28"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a metroid to have samus grabbed"}, {"label": "MetroidSamusGrabbed", "addr": {"U": "35D6C", "E": "35E38", "J": "35D6C"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Handles the metroid having grabbed samus (movement and release)"}, {"label": "MetroidDeath", "addr": {"U": "35ED4", "E": "35FA0", "J": "35ED4"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Calls SpriteDeath and checks if all metroids are dead, sets event accordingly"}, {"label": "Metroid_AI", "addr": {"U": "36010", "E": "360DC", "J": "36010"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Metroid AI"}, {"label": "MetroidShell_AI", "addr": {"U": "36170", "E": "3623C", "J": "36170"}, "size": "104", "mode": "thumb", "params": null, "return": null, "notes": "Metroid shell AI"}, {"label": "MetroidDoorLock_AI", "addr": {"U": "36274", "E": "36340", "J": "36274"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Metroid door lock AI"}, {"label": "RinkaInit", "addr": {"U": "3630C", "E": "363D8", "J": "3630C"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a rinka sprite"}, {"label": "RinkaGfxInit", "addr": {"U": "363A4", "E": "36470", "J": "363A4"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the rinka"}, {"label": "RinkaRespawn", "addr": {"U": "363E0", "E": "364AC", "J": "363E0"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Handles the respawning of the rinka"}, {"label": "RinkaSpawning", "addr": {"U": "36474", "E": "36540", "J": "36474"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Handles the rinka spawning"}, {"label": "RinkaMove", "addr": {"U": "3658C", "E": "36658", "J": "3658C"}, "size": "234", "mode": "thumb", "params": null, "return": null, "notes": "Handles the rinka moving"}, {"label": "RinkaMotherBrainGfxInit", "addr": {"U": "367C0", "E": "3688C", "J": "367C0"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the mother brain rinka"}, {"label": "RinkaMotherBrainRespawn", "addr": {"U": "367E0", "E": "368AC", "J": "367E0"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Handles the respawning of thte mother brain rinka"}, {"label": "RinkaMotherBrainSpawning", "addr": {"U": "36964", "E": "36A30", "J": "36964"}, "size": "110", "mode": "thumb", "params": null, "return": null, "notes": "Handles the mother brain rinka spawning"}, {"label": "RinkaMotherBrainMove", "addr": {"U": "36A74", "E": "36B40", "J": "36A74"}, "size": "2C0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the mother brain rinka and determines where it spawns"}, {"label": "Rinka_AI", "addr": {"U": "36D34", "E": "36E00", "J": "36D34"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Rinka AI"}, {"label": "Rinka_MotherBrain_AI", "addr": {"U": "36DD0", "E": "36E9C", "J": "36DD0"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Rinka mother brain AI"}, {"label": "PolypInit", "addr": {"U": "36EC4", "E": "36F90", "J": "36EC4"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a polyp sprite"}, {"label": "PolypGfxInit", "addr": {"U": "36F10", "E": "36FDC", "J": "36F10"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a polyp to be idle"}, {"label": "PolypCheckSpawnProjectile", "addr": {"U": "36F34", "E": "37000", "J": "36F34"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the polyp can spawn a projectile"}, {"label": "PolypCheckSpittingAnimEnded", "addr": {"U": "36FA8", "E": "37074", "J": "36FA8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animation has ended"}, {"label": "PolypSpawnProjectile", "addr": {"U": "36FD8", "E": "370A4", "J": "36FD8"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a poly projectile"}, {"label": "PolypCheckAfterSpittingAnimEnded", "addr": {"U": "3703C", "E": "37108", "J": "3703C"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the after spitting animation has ended"}, {"label": "PolypCheckRetractingAnimNearEnded", "addr": {"U": "37068", "E": "37134", "J": "37068"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting animation has nearly ended"}, {"label": "PolypProjectileInit", "addr": {"U": "37084", "E": "37150", "J": "37084"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a polyp projectile sprite"}, {"label": "PolypProjectileSpawn", "addr": {"U": "37164", "E": "37230", "J": "37164"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the polyp projectile"}, {"label": "PolypProjectileMove", "addr": {"U": "371AC", "E": "37278", "J": "371AC"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the polyp projectile"}, {"label": "PolypProjectileExplodingGfxInit", "addr": {"U": "37234", "E": "37300", "J": "37234"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a polyp projectile to be exploding"}, {"label": "PolypProjectileCheckExplodingAnimEnded", "addr": {"U": "37284", "E": "37350", "J": "37284"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animation has ended"}, {"label": "Polyp_AI", "addr": {"U": "372A8", "E": "37374", "J": "372A8"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Polyp AI"}, {"label": "PolypProjectile_AI", "addr": {"U": "373C4", "E": "37490", "J": "373C4"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Polyp projectile AI"}, {"label": "ViolaInit", "addr": {"U": "3743C", "E": "37508", "J": "3743C"}, "size": "120", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a viola sprite"}, {"label": "ViolaMoveRight", "addr": {"U": "3755C", "E": "37628", "J": "3755C"}, "size": "1A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola moving to the right"}, {"label": "ViolaMoveLeft", "addr": {"U": "37704", "E": "377D0", "J": "37704"}, "size": "148", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola moving to the left"}, {"label": "ViolaMoveDown", "addr": {"U": "3784C", "E": "37918", "J": "3784C"}, "size": "148", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola moving down"}, {"label": "ViolaMoveUp", "addr": {"U": "37994", "E": "37A60", "J": "37994"}, "size": "14C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola moving up"}, {"label": "ViolaStartFalling", "addr": {"U": "37AE0", "E": "37BAC", "J": "37AE0"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a viola to be falling"}, {"label": "ViolaFalling", "addr": {"U": "37AF8", "E": "37BC4", "J": "37AF8"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola falling"}, {"label": "Viola_AI", "addr": {"U": "37B70", "E": "37C3C", "J": "37B70"}, "size": "14C", "mode": "thumb", "params": null, "return": null, "notes": "Viola AI"}, {"label": "SecurityLaserInit", "addr": {"U": "37CBC", "E": "37D88", "J": "37CBC"}, "size": "21C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a security laser sprite"}, {"label": "SecurityLaserSamusCollision", "addr": {"U": "37ED8", "E": "37FA4", "J": "37ED8"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the security laser colliding with samus"}, {"label": "SecurityLaserCheckDespawnAnimEnded", "addr": {"U": "38014", "E": "380E0", "J": "38014"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the despawning animation has ended"}, {"label": "SecurityLaserSetAlarm", "addr": {"U": "380E8", "E": "381B4", "J": "380E8"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Sets the alarm"}, {"label": "SecurityLaser_Unused", "addr": {"U": "38104", "E": "381D0", "J": "38104"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Very similar code to SecurityLaserCheckDespawnAnimEnded, seems unused"}, {"label": "SecurityLaser_AI", "addr": {"U": "381D0", "E": "3829C", "J": "381D0"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Security laser AI"}, {"label": "HoltzYMovement", "addr": {"U": "3830C", "E": "383D8", "J": "3830C"}, "size": "CC", "mode": "thumb", "params": [{"label": "YMovement", "type": "u16", "notes": "Y movement"}], "return": {"label": "PrevCollisionCheckIsSolid", "type": "bool", "notes": "Previous collision check is solid"}, "notes": "Handles the vertical movement of the holtz"}, {"label": "HoltzXMovement", "addr": {"U": "383D8", "E": "384A4", "J": "383D8"}, "size": "8C", "mode": "thumb", "params": [{"label": "XMovement", "type": "u16", "notes": "X movement"}], "return": {"label": "PrevCollisionCheckIsSolid", "type": "bool", "notes": "Previous collision check is solid"}, "notes": "Handles the horizontal movement of the holtz"}, {"label": "HoltzInit", "addr": {"U": "38464", "E": "38530", "J": "38464"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a holtz sprite"}, {"label": "HoltzGfxInit", "addr": {"U": "384DC", "E": "385A8", "J": "384DC"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a holtz to be idle"}, {"label": "HoltzSamusDetection", "addr": {"U": "38518", "E": "385E4", "J": "38518"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation and samus detection"}, {"label": "HoltzWarningGfxInit", "addr": {"U": "38588", "E": "38654", "J": "38588"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the holtz warning"}, {"label": "HoltzCheckWarningAnimEnded", "addr": {"U": "385A8", "E": "38674", "J": "385A8"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animation has ended"}, {"label": "HoltzGoingDownMove", "addr": {"U": "38638", "E": "38704", "J": "38638"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the holtz going down"}, {"label": "HoltzSlidingMove", "addr": {"U": "38698", "E": "38764", "J": "38698"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the holtz sliding on the ground"}, {"label": "HoltzGoingUpMove", "addr": {"U": "386E4", "E": "387B0", "J": "386E4"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the holtz going up"}, {"label": "HoltzBackToCeiling", "addr": {"U": "38780", "E": "3884C", "J": "38780"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animation of the holtz back on the ceiling"}, {"label": "Holtz_AI", "addr": {"U": "387D0", "E": "3889C", "J": "387D0"}, "size": "1AC", "mode": "thumb", "params": null, "return": null, "notes": "Holtz AI"}, {"label": "GekitaiMachine_AI", "addr": {"U": "3897C", "E": "38A48", "J": "3897C"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Gekitai machine AI"}, {"label": "CalculateDelayForRuinsTest", "addr": {"U": "38988", "E": "38A54", "J": "38988"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calcules the delay for the ruins test"}, {"label": "RuinsTestChangeClipAction", "addr": {"U": "389AC", "E": "38A78", "J": "389AC"}, "size": "D8", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Disables the ceiling hitbox"}, {"label": "RuinsTestMoveToPosition", "addr": {"U": "38A84", "E": "38B50", "J": "38A84"}, "size": "1D0", "mode": "thumb", "params": [{"label": "TargetYPosition", "type": "u16", "notes": "Target Y position?"}, {"label": "TargetXPosition", "type": "u16", "notes": "Target X position?"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "OamScaling", "type": "u16", "notes": "OAM Scaling"}, {"label": "Always4", "type": "u16", "notes": "Always 4?"}], "return": null, "notes": "Handles slowly moving an object from r2 and r3 to r0 and r1? Used to move the ghost back at the center at the end of the fight and to move the symbols to the corners"}, {"label": "RuinsTestProjectileCollision", "addr": {"U": "38C54", "E": "38D20", "J": "38C54"}, "size": "D4", "mode": "thumb", "params": null, "return": {"label": "Colliding", "type": "bool"}, "notes": "Checks if a projectile is colliding with the shootable symbol Handles samus taking damage"}, {"label": "RuinsTestCheckSamusHurting", "addr": {"U": "38DF4", "E": "38EC0", "J": "38DF4"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "SamusGettingHurt", "type": "bool", "notes": "Samus getting hurt"}, "notes": "Checks if the current sprite mosaic flag is on and if samus' current pose is Getting Hurt"}, {"label": "RuinsTestGhostMove", "addr": {"U": "38F44", "E": "39010", "J": "38F44"}, "size": "9C", "mode": "thumb", "params": [{"label": "RandomNum", "type": "u8", "notes": "Random number"}], "return": null, "notes": "Moves the ghost depending on the Sine Y Values table"}, {"label": "RuinsTestInit", "addr": {"U": "38FE0", "E": "390AC", "J": "38FE0"}, "size": "EC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ruins test sprite"}, {"label": "RuinsTestSpawnReflectionStart", "addr": {"U": "3910C", "E": "391D8", "J": "3910C"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the ruins test reflection cover and the ruins test samus reflection start"}, {"label": "RuinsTestCheckSamusNotFacingBackground", "addr": {"U": "391C4", "E": "39290", "J": "391C4"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is still facing the background"}, {"label": "RuinsTestSpawnGhost", "addr": {"U": "39234", "E": "39300", "J": "39234"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Spawn the ruins test ghost and the ruins test ghost outline sprites"}, {"label": "RuinsTestAfterGhostSpawn", "addr": {"U": "392C8", "E": "39394", "J": "392C8"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the ghost spawn"}, {"label": "RuinsTestMoveGhostToCenter", "addr": {"U": "39610", "E": "396DC", "J": "39610"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Moves the ghost back to the center at the end of the fight"}, {"label": "RuinsTestReflectionEnd", "addr": {"U": "396D0", "E": "3979C", "J": "396D0"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the ruins test samus reflection end, plays the getting fully powered suit cutscene sets the fully powered suit event, and calls RuinsTestChangeCCAA"}, {"label": "RuinsTestGhostInit", "addr": {"U": "39774", "E": "39840", "J": "39774"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ruins test ghost sprite"}, {"label": "RuinsTestGhostSpawn", "addr": {"U": "3988C", "E": "39958", "J": "3988C"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the ruins test ghost"}, {"label": "RuinsTestGhostSyncPosition", "addr": {"U": "39900", "E": "399CC", "J": "39900"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the ghost position with the main ruins test sprite"}, {"label": "RuinsTestGhostDespawn", "addr": {"U": "399FC", "E": "39AC8", "J": "399FC"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the despawning of the ruins test ghost"}, {"label": "RuinsTestGhostAfterFirstSymbol", "addr": {"U": "39C74", "E": "39D40", "J": "39C74"}, "size": "17C", "mode": "thumb", "params": null, "return": null, "notes": "Called after the first symbol is in place"}, {"label": "RuinsTestGhostAfterFight", "addr": {"U": "39DF0", "E": "39EBC", "J": "39DF0"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Called once at the end of the fight"}, {"label": "RuinsTest_AI", "addr": {"U": "39E78", "E": "39F44", "J": "39E78"}, "size": "2F4", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test AI"}, {"label": "RuinsTestSymbol_AI", "addr": {"U": "3A16C", "E": "3A238", "J": "3A16C"}, "size": "394", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test symbol AI"}, {"label": "RuinsTestSamusReflection_Start_AI", "addr": {"U": "3A500", "E": "3A5CC", "J": "3A500"}, "size": "1B8", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test samus reflection (start) AI"}, {"label": "RuinsTestReflectionCover_AI", "addr": {"U": "3A6B8", "E": "3A784", "J": "3A6B8"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test reflection cover AI"}, {"label": "RuinsTestGhostOutline_AI", "addr": {"U": "3A780", "E": "3A84C", "J": "3A780"}, "size": "134", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test ghost outline AI"}, {"label": "RuinsTestShootableSymbol_AI", "addr": {"U": "3A8B4", "E": "3A980", "J": "3A8B4"}, "size": "24C", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test shootable symbol AI"}, {"label": "RuinsTestGhost_AI", "addr": {"U": "3AB00", "E": "3ABCC", "J": "3AB00"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test ghost AI"}, {"label": "RuinsTestSamusReflection_End_AI", "addr": {"U": "3AC68", "E": "3AD34", "J": "3AC68"}, "size": "3D4", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test samus reflection (end) AI"}, {"label": "RuinsTestLightningInit", "addr": {"U": "3B03C", "E": "3B108", "J": "3B03C"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Partially Initialize a ruins test lightning sprite"}, {"label": "RuinsTestLightning_AI", "addr": {"U": "3B06C", "E": "3B138", "J": "3B06C"}, "size": "300", "mode": "thumb", "params": null, "return": null, "notes": "Ruins test lightning AI"}, {"label": "MellaYMovement", "addr": {"U": "3B36C", "E": "3B438", "J": "3B36C"}, "size": "CC", "mode": "thumb", "params": [{"label": "YMovement", "type": "u16", "notes": "Y movement"}], "return": {"label": "PrevCollisionCheckIsSolid", "type": "bool", "notes": "Previous collision check is solid"}, "notes": "Handles the Y movement of the mella"}, {"label": "MellaXMovement", "addr": {"U": "3B438", "E": "3B504", "J": "3B438"}, "size": "8C", "mode": "thumb", "params": [{"label": "XMovement", "type": "u16", "notes": "X movement"}], "return": {"label": "PrevCollisionCheckIsSolid", "type": "bool", "notes": "Previous collision check is solid"}, "notes": "Handles the X movement of the mella"}, {"label": "MellaInit", "addr": {"U": "3B4C4", "E": "3B590", "J": "3B4C4"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a mella sprite"}, {"label": "MellaIdleGfxInit", "addr": {"U": "3B52C", "E": "3B5F8", "J": "3B52C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a mella to be idle"}, {"label": "MellaIdleAnimation", "addr": {"U": "3B564", "E": "3B630", "J": "3B564"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation and samus detection"}, {"label": "MellaGoingDownGfxInit", "addr": {"U": "3B600", "E": "3B6CC", "J": "3B600"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a mella to be moving"}, {"label": "MellaStartGoingDown", "addr": {"U": "3B624", "E": "3B6F0", "J": "3B624"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Handles the delay before the mella goes down"}, {"label": "MellaGoingDown", "addr": {"U": "3B688", "E": "3B754", "J": "3B688"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Handles the mella going down"}, {"label": "MellaGoingUp", "addr": {"U": "3B71C", "E": "3B7E8", "J": "3B71C"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Handles the mella going up"}, {"label": "Mella_AI", "addr": {"U": "3B7B0", "E": "3B87C", "J": "3B7B0"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Mella AI"}, {"label": "AtomicShootElectricity", "addr": {"U": "3BC34", "E": "3BD00", "J": "3BC34"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the atomic shooting the electricity and the animation before shooting"}, {"label": "AtomicInit", "addr": {"U": "3BCEC", "E": "3BDB8", "J": "3BCEC"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an atomic sprite"}, {"label": "AtomicGfxInit", "addr": {"U": "3BD7C", "E": "3BE48", "J": "3BD7C"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the atomic"}, {"label": "AtomicIdleAnimation", "addr": {"U": "3BDA8", "E": "3BE74", "J": "3BDA8"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation of the atomic"}, {"label": "AtomicMove", "addr": {"U": "3BE38", "E": "3BF04", "J": "3BE38"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the atomic"}, {"label": "AtomicElectricityCheckAtomicAlive", "addr": {"U": "3C150", "E": "3C21C", "J": "3C150"}, "size": "30", "mode": "thumb", "params": [{"label": "RamSlot", "type": "u8", "notes": "RAM Slot"}], "return": {"label": "NotAtomicOrDead", "type": "bool", "notes": "Not atomic or dead"}, "notes": "Checks if the main sprite of the atomic electricity is an atomic and is alive"}, {"label": "AtomicElectricityInit", "addr": {"U": "3C180", "E": "3C24C", "J": "3C180"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an atomic electricity sprite"}, {"label": "AtomicElectricitySpawn", "addr": {"U": "3C1FC", "E": "3C2C8", "J": "3C1FC"}, "size": "1AC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the atomic electricity"}, {"label": "AtomicElectricityMove", "addr": {"U": "3C3A8", "E": "3C474", "J": "3C3A8"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the atomic electricty moving"}, {"label": "AtomicElectricityExploding", "addr": {"U": "3C470", "E": "3C53C", "J": "3C470"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Handles the atomic electricty exploding"}, {"label": "AtomicElectricityCheckOnGroundAnimEnded", "addr": {"U": "3C4C4", "E": "3C590", "J": "3C4C4"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animation of the electricity being on the ground has ended"}, {"label": "Atomic_AI", "addr": {"U": "3C4DC", "E": "3C5A8", "J": "3C4DC"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Atomic AI"}, {"label": "AtomicElectricity_AI", "addr": {"U": "3C62C", "E": "3C6F8", "J": "3C62C"}, "size": "D8", "mode": "thumb", "params": null, "return": null, "notes": "Atomic electricity AI"}, {"label": "AreaBannerInit", "addr": {"U": "3C704", "E": "3C7D0", "J": "3C704"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an area banner sprite"}, {"label": "AreaBannerSpawn", "addr": {"U": "3C7A8", "E": "3C874", "J": "3C7A8"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Handles the area banner spawning"}, {"label": "AreaBannerCheckScrollingUpAnimEnded", "addr": {"U": "3C7C8", "E": "3C894", "J": "3C7C8"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the scrolling up animation has ended"}, {"label": "AreaBannerStatic", "addr": {"U": "3C828", "E": "3C8F4", "J": "3C828"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the area banner being static"}, {"label": "AreaBannerCheckRemovingAnimEnded", "addr": {"U": "3C86C", "E": "3C938", "J": "3C86C"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the scrolling down animation has ended"}, {"label": "AreaBanner_AI", "addr": {"U": "3C884", "E": "3C950", "J": "3C884"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Area banner AI"}, {"label": "MotherBrainSyncSubSpritePosition", "addr": {"U": "3C964", "E": "3CA30", "J": "3C964"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the sub sprites of mother brain with her"}, {"label": "MotherBrainPaletteSwitching", "addr": {"U": "3C9CC", "E": "3CA98", "J": "3C9CC"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the palette switching when mother brain charges the beam and fires it"}, {"label": "MotherBrainInit", "addr": {"U": "3CA4C", "E": "3CB18", "J": "3CA4C"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a mother brain sprite"}, {"label": "MotherBrainMainLoop", "addr": {"U": "3CBFC", "E": "3CCC8", "J": "3CBFC"}, "size": "3FC", "mode": "thumb", "params": null, "return": null, "notes": "Mother brain main loop AI, handles the update of the sub sprites, firing the beam the death and the animations"}, {"label": "MotherBrainDeath", "addr": {"U": "3CFF8", "E": "3D0C4", "J": "3CFF8"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of mother brain"}, {"label": "MotherBrainStartEscape", "addr": {"U": "3D0C4", "E": "3D190", "J": "3D0C4"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the item banner and the explosion zebes escape sprites"}, {"label": "MotherBrainEyeInit", "addr": {"U": "3D130", "E": "3D1FC", "J": "3D130"}, "size": "158", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a mother brain part sprite"}, {"label": "MotherBrainEyeHitboxInit", "addr": {"U": "3D288", "E": "3D354", "J": "3D288"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the hitbox of the mother brain eye sprite"}, {"label": "MotherBrainEye_Empty", "addr": {"U": "3D32C", "E": "3D3F8", "J": "3D32C"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "MotherBrainEyeSpawnBlock", "addr": {"U": "3D330", "E": "3D3FC", "J": "3D330"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a mother brain block sprite"}, {"label": "MotherBrainEyeHitTimer", "addr": {"U": "3D45C", "E": "3D528", "J": "3D45C"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the invicibiliy stun flash timer to 0"}, {"label": "MotherBrainEyeSpawnGlassBreaking", "addr": {"U": "3D46C", "E": "3D538", "J": "3D46C"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the mother brain glass breaking sprite"}, {"label": "MotherBrain_AI", "addr": {"U": "3D4C0", "E": "3D58C", "J": "3D4C0"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Mother brain AI"}, {"label": "MotherBrainEye_AI", "addr": {"U": "3D5A0", "E": "3D66C", "J": "3D5A0"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Mother brain part AI"}, {"label": "MotherBrainBeam_AI", "addr": {"U": "3D640", "E": "3D70C", "J": "3D640"}, "size": "E4", "mode": "thumb", "params": null, "return": null, "notes": "Mother brain beam AI"}, {"label": "MotherBrainBlock_AI", "addr": {"U": "3D724", "E": "3D7F0", "J": "3D724"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Mother brain block AI"}, {"label": "MotherBrainGlassBreaking_AI", "addr": {"U": "3D7CC", "E": "3D898", "J": "3D7CC"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Mother brain glass breaking AI"}, {"label": "AcidWormRandomXMovement", "addr": {"U": "3D978", "E": "3DA44", "J": "3D978"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles the horizontal semi-random movement of the acid worm head"}, {"label": "AcidWormChangeTwoGroundClipAction", "addr": {"U": "3D9B8", "E": "3DA84", "J": "3D9B8"}, "size": "48", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Used to remove the 2 blocks on the ground"}, {"label": "AcidWormChangeBigBlockDownClipAction", "addr": {"U": "3DA00", "E": "3DACC", "J": "3DA00"}, "size": "50", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Used to remove the first 2 blocks of the big block on the ground"}, {"label": "AcidWormChangeBigBlockMiddleClipAction", "addr": {"U": "3DA50", "E": "3DB1C", "J": "3DA50"}, "size": "58", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Used to remove the 2 middle blocks of the big block on the ground"}, {"label": "AcidWormChangeBigBlockTopClipAction", "addr": {"U": "3DAA8", "E": "3DB74", "J": "3DAA8"}, "size": "E4", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Used to remove the 2 top blocks of the big block on the ground"}, {"label": "AcidWormPlaySound", "addr": {"U": "3DB8C", "E": "3DC58", "J": "3DB8C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound depending on SubSpriteData1.Unknown"}, {"label": "AcidWormCollidingWithSamusWhenExtending", "addr": {"U": "3DBB0", "E": "3DC7C", "J": "3DBB0"}, "size": "44", "mode": "thumb", "params": null, "return": {"label": "Colliding", "type": "bool"}, "notes": "Checks if the acid worm is colliding with samus when extending"}, {"label": "AcidWormInit", "addr": {"U": "3DBF4", "E": "3DCC0", "J": "3DBF4"}, "size": "224", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an acid worm sprite"}, {"label": "AcidWormCheckSamusOnZipline", "addr": {"U": "3DE18", "E": "3DEE4", "J": "3DE18"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is on a zipline"}, {"label": "AcidWormSpawnStart", "addr": {"U": "3DE38", "E": "3DF04", "J": "3DE38"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles the start of the spawning"}, {"label": "AcidWormSpawnExtending", "addr": {"U": "3DEBC", "E": "3DF88", "J": "3DEBC"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm extending when spawning"}, {"label": "AcidWormSpawnStayingOnTop", "addr": {"U": "3DF4C", "E": "3E018", "J": "3DF4C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm staying on top when spawning"}, {"label": "AcidWormSpawnRetracting", "addr": {"U": "3DF84", "E": "3E050", "J": "3DF84"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm retracting when spawning"}, {"label": "AcidWormGfxInit", "addr": {"U": "3E004", "E": "3E0D0", "J": "3E004"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the acid worm to be idle"}, {"label": "AcidWormIdle", "addr": {"U": "3E030", "E": "3E0FC", "J": "3E030"}, "size": "C0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation and samus detection"}, {"label": "AcidWormCheckEndWarningAnim", "addr": {"U": "3E0F0", "E": "3E1BC", "J": "3E0F0"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animation has ended"}, {"label": "AcidWormExtend", "addr": {"U": "3E14C", "E": "3E218", "J": "3E14C"}, "size": "35C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm extending"}, {"label": "AcidWormHookedToBlock", "addr": {"U": "3E4A8", "E": "3E574", "J": "3E4A8"}, "size": "210", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm being hooked to a block or fully extended"}, {"label": "AcidWormRetracting", "addr": {"U": "3E6B8", "E": "3E784", "J": "3E6B8"}, "size": "1AC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm retracting when spawning"}, {"label": "AcidWormRaiseAcid", "addr": {"U": "3E864", "E": "3E930", "J": "3E864"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm raising the acid"}, {"label": "AcidWormAcidGoDown", "addr": {"U": "3E8CC", "E": "3E998", "J": "3E8CC"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm going down"}, {"label": "AcidWormDeathGfxInit", "addr": {"U": "3E93C", "E": "3EA08", "J": "3E93C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the acid worm dying"}, {"label": "AcidWormDeathFlashingAnim", "addr": {"U": "3E960", "E": "3EA2C", "J": "3E960"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animation when the acid worm is dying"}, {"label": "AcidWormDying", "addr": {"U": "3E9E8", "E": "3EAB4", "J": "3E9E8"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm dying animation"}, {"label": "AcidWormBodyInit", "addr": {"U": "3EAB8", "E": "3EB84", "J": "3EAB8"}, "size": "258", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an acid worm body sprite"}, {"label": "AcidWormBodyMove", "addr": {"U": "3ED10", "E": "3EDDC", "J": "3ED10"}, "size": "10C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the acid worm body"}, {"label": "AcidWormBodyDeath", "addr": {"U": "3F018", "E": "3F0E4", "J": "3F018"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the acid worm body"}, {"label": "AcidWormSpitInit", "addr": {"U": "3F0E0", "E": "3F1AC", "J": "3F0E0"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an acid worm spit sprite"}, {"label": "AcidWormSpitMove", "addr": {"U": "3F16C", "E": "3F238", "J": "3F16C"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm spit movement"}, {"label": "AcidWormSpitExplodingGfxInit", "addr": {"U": "3F284", "E": "3F350", "J": "3F284"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the acid worm spit exploding"}, {"label": "AcidWormCheckExplodingAnimEnded", "addr": {"U": "3F2CC", "E": "3F398", "J": "3F2CC"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animation has ended"}, {"label": "AcidWormCheckExplodingOnAcidAnimEnded", "addr": {"U": "3F2F0", "E": "3F3BC", "J": "3F2F0"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animation on acid has ended"}, {"label": "AcidWorm_AI", "addr": {"U": "3F31C", "E": "3F3E8", "J": "3F31C"}, "size": "264", "mode": "thumb", "params": null, "return": null, "notes": "Acid worm AI"}, {"label": "AcidWormBody_AI", "addr": {"U": "3F580", "E": "3F64C", "J": "3F580"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Acid worm body AI"}, {"label": "AcidWormSpit_AI", "addr": {"U": "3F624", "E": "3F6F0", "J": "3F624"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Acid worm spit AI"}, {"label": "SidehopperCheckSamusNearLeftRight", "addr": {"U": "3F684", "E": "3F750", "J": "3F684"}, "size": "20", "mode": "thumb", "params": null, "return": {"label": "OutOfRange", "type": "bool", "notes": "Out of range"}, "notes": "Checks if samus is out of range of the sidehopper"}, {"label": "SidehopperInit", "addr": {"U": "3F6A4", "E": "3F770", "J": "3F6A4"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a sidehopper sprite"}, {"label": "SidehopperIdleGfxInit", "addr": {"U": "3F774", "E": "3F840", "J": "3F774"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the sidehopper going back to idle"}, {"label": "SidehopperJumpingGfxInit", "addr": {"U": "3F794", "E": "3F860", "J": "3F794"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the sidehopper jumping"}, {"label": "SidehopperLandingGfxInit", "addr": {"U": "3F814", "E": "3F8E0", "J": "3F814"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the sidehopper landing"}, {"label": "SidehopperAfterIdle", "addr": {"U": "3F864", "E": "3F930", "J": "3F864"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Determines what the sidehopper should do after being idle"}, {"label": "SidehopperCheckBeforeJumpingAnimEnded", "addr": {"U": "3F8FC", "E": "3F9C8", "J": "3F8FC"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animation before jumping has ended whe on ground"}, {"label": "SidehopperJumpingGround", "addr": {"U": "3F96C", "E": "3FA38", "J": "3F96C"}, "size": "1E8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the sidehopper jumping when on the ground"}, {"label": "SidehopperJumpingCeiling", "addr": {"U": "3FB54", "E": "3FC20", "J": "3FB54"}, "size": "1FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the sidehopper jumping when on the ceiling"}, {"label": "SidehopperCheckLandingCeilingAnimEnded", "addr": {"U": "3FD50", "E": "3FE1C", "J": "3FD50"}, "size": "14", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the landing animation when on the ceiling has ended"}, {"label": "SiidehopperJumpingGroundIntoBlock", "addr": {"U": "3FD64", "E": "3FE30", "J": "3FD64"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the sidehopper jumping from the ground into a block"}, {"label": "SidehopperJumpingCeilingIntoBlock", "addr": {"U": "3FE08", "E": "3FED4", "J": "3FE08"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the sidehopper jumping from the ceiling into a block"}, {"label": "SidehopperGroundIdleAnim", "addr": {"U": "3FEB0", "E": "3FF7C", "J": "3FEB0"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation of the sidehopper on the ground"}, {"label": "SidehopperCeilingIdleAnim", "addr": {"U": "3FF4C", "E": "40018", "J": "3FF4C"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animation of the sidehopper on the ceiling"}, {"label": "SidehopperDeath", "addr": {"U": "3FFA8", "E": "40074", "J": "3FFA8"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the sidehopper, calls SpriteDeath"}, {"label": "Sidehopper_AI", "addr": {"U": "3FFE0", "E": "400AC", "J": "3FFE0"}, "size": "198", "mode": "thumb", "params": null, "return": null, "notes": "Sidehopper AI"}, {"label": "Geron_Norfair_AI", "addr": {"U": "40178", "E": "40244", "J": "40178"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Geron (norfair) AI"}, {"label": "GeegaInit", "addr": {"U": "40230", "E": "402FC", "J": "40230"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a geega sprite"}, {"label": "GeegaGfxInit", "addr": {"U": "40290", "E": "4035C", "J": "40290"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the geega"}, {"label": "GeegaSpawn", "addr": {"U": "402CC", "E": "40398", "J": "402CC"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geega spawning"}, {"label": "GeegaGoingUp", "addr": {"U": "403E4", "E": "404B0", "J": "403E4"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geega going up"}, {"label": "GeegaRespawn", "addr": {"U": "40464", "E": "40530", "J": "40464"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geega respawning"}, {"label": "GeegaMove", "addr": {"U": "404C8", "E": "40594", "J": "404C8"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geega moving"}, {"label": "Geega_AI", "addr": {"U": "4058C", "E": "40658", "J": "4058C"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Geega AI"}, {"label": "Zebetite_AI", "addr": {"U": "406C8", "E": "40794", "J": "406C8"}, "size": "30C", "mode": "thumb", "params": null, "return": null, "notes": "Zebetite AI"}, {"label": "CannonFireBullet", "addr": {"U": "409D4", "E": "40AA0", "J": "409D4"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the cannon can fire a bullet, if yes spawns a cannon bullet sprite"}, {"label": "CannonCheckSurroundings", "addr": {"U": "40A20", "E": "40AEC", "J": "40A20"}, "size": "E8", "mode": "thumb", "params": null, "return": null, "notes": "Checks for walls to know where the cannon can/can't turn"}, {"label": "Cannon_AI", "addr": {"U": "40B08", "E": "40BD4", "J": "40B08"}, "size": "61C", "mode": "thumb", "params": null, "return": null, "notes": "Cannon AI"}, {"label": "CannonBullet_AI", "addr": {"U": "41124", "E": "411F0", "J": "41124"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Cannon bullet AI"}, {"label": "ImagoLarva_Right_AI", "addr": {"U": "412A8", "E": "41374", "J": "412A8"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Imago larva (right side) AI"}, {"label": "GerutaTangleVineUpdateGeruta", "addr": {"U": "413C4", "E": "41490", "J": "413C4"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Updates the geruta"}, {"label": "TangleVine_Geruta_AI", "addr": {"U": "4144C", "E": "41518", "J": "4144C"}, "size": "1A0", "mode": "thumb", "params": null, "return": null, "notes": "Tangle vine (geruta) AI"}, {"label": "Geruta_TangleVine_AI", "addr": {"U": "415EC", "E": "416B8", "J": "415EC"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Geurta (tangle vine) AI"}, {"label": "TangleVine_Red_Geruta_AI", "addr": {"U": "4171C", "E": "417E8", "J": "4171C"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Tangle vine (red, Geruta) AI"}, {"label": "TangleVine_Larva_Right_AI", "addr": {"U": "417E8", "E": "418B4", "J": "417E8"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Tangle vine (larva right) AI"}, {"label": "TangleVine_Larva_Left_AI", "addr": {"U": "418B8", "E": "41984", "J": "418B8"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Tangle vine (larva left) AI"}, {"label": "TangleVine_Tall_AI", "addr": {"U": "4198C", "E": "41A58", "J": "4198C"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Tangle vine (tall) AI"}, {"label": "TangleVine_Medium_AI", "addr": {"U": "41ABC", "E": "41B88", "J": "41ABC"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Tangle vine (medium) AI"}, {"label": "TangleVine_Curved_AI", "addr": {"U": "41BEC", "E": "41CB8", "J": "41BEC"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Tangle vine (curved) AI"}, {"label": "TangleVine_Short_AI", "addr": {"U": "41D1C", "E": "41DE8", "J": "41D1C"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Tangle vine (short) AI"}, {"label": "ImagoSyncSubSprites", "addr": {"U": "41E4C", "E": "41F18", "J": "41E4C"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the sub sprites of imago with him"}, {"label": "ImagoShootNeedles", "addr": {"U": "41ED4", "E": "41FA0", "J": "41ED4"}, "size": "17C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if imago can shoot needles, if yes spawns imago needles sprites"}, {"label": "ImagoCoreFlashingAnim", "addr": {"U": "42050", "E": "4211C", "J": "42050"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flahsing animation of the core"}, {"label": "ImagoSetSidesHitbox", "addr": {"U": "420B8", "E": "42184", "J": "420B8"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Sets the left and right hitboxes of imago depending on the X flip"}, {"label": "ImagoInit", "addr": {"U": "420EC", "E": "421B8", "J": "420EC"}, "size": "23C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago sprite"}, {"label": "ImagoFadeMusic", "addr": {"U": "42328", "E": "423F4", "J": "42328"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calls FadeMusic"}, {"label": "ImagoStartMusic", "addr": {"U": "4234C", "E": "42418", "J": "4234C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Starts the imago battle music"}, {"label": "ImagoComingDown", "addr": {"U": "42384", "E": "42450", "J": "42384"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago coming down to move through the room (not when he attacks)"}, {"label": "ImagoComingDownMove", "addr": {"U": "42434", "E": "42500", "J": "42434"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of imago coming down (not when he attacks)"}, {"label": "ImagoMove", "addr": {"U": "424F8", "E": "425C4", "J": "424F8"}, "size": "2B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago moving through the room"}, {"label": "ImagoGoingUp", "addr": {"U": "427B0", "E": "4287C", "J": "427B0"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago going up"}, {"label": "ImagoAttackingGfxInit", "addr": {"U": "42874", "E": "42940", "J": "42874"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for imago attacking"}, {"label": "ImagoAttackingGoingDown", "addr": {"U": "42898", "E": "42964", "J": "42898"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago going down when attacking"}, {"label": "ImagoAttackingGoingUp", "addr": {"U": "42940", "E": "42A0C", "J": "42940"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago going up when attacking"}, {"label": "ImagoSpawnDamagedStinger", "addr": {"U": "429FC", "E": "42AC8", "J": "429FC"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a imago damaged stinger sprite"}, {"label": "ImagoCheckSamusAtSuperMissile", "addr": {"U": "42A90", "E": "42B5C", "J": "42A90"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is near the super missile tank when imago is stinger-less"}, {"label": "ImagoChargeThroughWall", "addr": {"U": "42AF8", "E": "42BC4", "J": "42AF8"}, "size": "100", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago charging through the wall at the end of the fight, also destroys the first half"}, {"label": "ImagoDestroyWall", "addr": {"U": "42BF8", "E": "42CC4", "J": "42BF8"}, "size": "378", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago destroying the wall"}, {"label": "ImagoDying", "addr": {"U": "42F70", "E": "4303C", "J": "42F70"}, "size": "204", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago dying and stalling on the wall"}, {"label": "ImagoSetEvent", "addr": {"U": "43174", "E": "43240", "J": "43174"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Sets the imago killed event"}, {"label": "ImagoBodySetSidesHitbox", "addr": {"U": "431B8", "E": "43284", "J": "431B8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Sets the left and right hitboxes of the imago body depending on the X flip"}, {"label": "ImagoBodyInit", "addr": {"U": "431E8", "E": "432B4", "J": "431E8"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago body sprite"}, {"label": "ImagoBodyBeforeSpawn", "addr": {"U": "43324", "E": "433F0", "J": "43324"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Called beofre imago spawns, checks if imago pose is above 7"}, {"label": "ImagoBodyUpdatePalette", "addr": {"U": "43360", "E": "4342C", "J": "43360"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Updates the palette row of imago depending on the health"}, {"label": "ImagoBodySyncPalette", "addr": {"U": "433C4", "E": "43490", "J": "433C4"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the palette of the imago body with imago"}, {"label": "Imago_AI", "addr": {"U": "433F8", "E": "434C4", "J": "433F8"}, "size": "420", "mode": "thumb", "params": null, "return": null, "notes": "Imago AI"}, {"label": "ImagoBody_AI", "addr": {"U": "43818", "E": "438E4", "J": "43818"}, "size": "1B0", "mode": "thumb", "params": null, "return": null, "notes": "Imago body AI"}, {"label": "ImagoNeedle_AI", "addr": {"U": "439C8", "E": "43A94", "J": "439C8"}, "size": "EC", "mode": "thumb", "params": null, "return": null, "notes": "Imaago needle AI"}, {"label": "ImagoDamagedStinger_AI", "addr": {"U": "43AB4", "E": "43B80", "J": "43AB4"}, "size": "1A4", "mode": "thumb", "params": null, "return": null, "notes": "Imago damaged stinger AI"}, {"label": "ImagoEgg_AI", "addr": {"U": "43C58", "E": "43D24", "J": "43C58"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Imago egg AI"}, {"label": "CrocomireSyncSubSprites", "addr": {"U": "43D88", "E": "43E54", "J": "43D88"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the sub sprites of crocomire with him"}, {"label": "CrocomireInit", "addr": {"U": "43DF0", "E": "43EBC", "J": "43DF0"}, "size": "120", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a crocomire sprite"}, {"label": "CrocomireGfxInit", "addr": {"U": "43F10", "E": "43FDC", "J": "43F10"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for crocomire"}, {"label": "Crocomire_Empty", "addr": {"U": "43F34", "E": "44000", "J": "43F34"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "CrocomireBodyInit", "addr": {"U": "43F38", "E": "44004", "J": "43F38"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a crocomire body sprite"}, {"label": "Crocomire_AI", "addr": {"U": "44098", "E": "44164", "J": "44098"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Crocomire AI"}, {"label": "CrocomireBody_AI", "addr": {"U": "440DC", "E": "441A8", "J": "440DC"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Crocomire body AI"}, {"label": "SearchlightEyeInit", "addr": {"U": "44148", "E": "44214", "J": "44148"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a searchlight eye sprite"}, {"label": "SearchlightEyeMove", "addr": {"U": "44284", "E": "44350", "J": "44284"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the searchlight eye moving up and down"}, {"label": "SearchlightEyeCheckAlarm", "addr": {"U": "44314", "E": "443E0", "J": "44314"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm is on"}, {"label": "SearchlightEyeCheckAlertedEnded", "addr": {"U": "44340", "E": "4440C", "J": "44340"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alerted animation has ended (when samus is getting detected)"}, {"label": "SearchlightEyeCheckShouldShot", "addr": {"U": "44364", "E": "44430", "J": "44364"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the searchlight eye can shoot depending on a timer"}, {"label": "SearchlightEyeShoot", "addr": {"U": "4439C", "E": "44468", "J": "4439C"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a searchlight eye projectile sprite"}, {"label": "SearchlightEyeBeamInit", "addr": {"U": "44428", "E": "444F4", "J": "44428"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a searchlight eye beam sprite"}, {"label": "SearchlightEyeBeamDetectSamus", "addr": {"U": "444A0", "E": "4456C", "J": "444A0"}, "size": "17C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the detection of samus to activate the alarm, also deactivates the other searchlight eye beams"}, {"label": "SearchlightEyeBeamDisappear", "addr": {"U": "4461C", "E": "446E8", "J": "4461C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the searchlight eye beam disappearing"}, {"label": "SearchlightEye_AI", "addr": {"U": "44658", "E": "44724", "J": "44658"}, "size": "104", "mode": "thumb", "params": null, "return": null, "notes": "Searchlight eye AI"}, {"label": "SearchlightEyeBeam_AI", "addr": {"U": "4475C", "E": "44828", "J": "4475C"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Searchlight eye beam AI"}, {"label": "SearchlighEyeProjectile_AI", "addr": {"U": "447B8", "E": "44884", "J": "447B8"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Searchlight eye projectile AI"}, {"label": "Geron_AI", "addr": {"U": "448E0", "E": "449AC", "J": "448E0"}, "size": "344", "mode": "thumb", "params": null, "return": null, "notes": "Geron AI"}, {"label": "GunshipFlickerFlames", "addr": {"U": "44C24", "E": "44CF0", "J": "44C24"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flames flickering between big and small"}, {"label": "GunshipPortholeFlashingAnim", "addr": {"U": "44CA8", "E": "44D74", "J": "44CA8"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animation of the porthole"}, {"label": "GunshipCheckSamusEnter", "addr": {"U": "44D58", "E": "44E24", "J": "44D58"}, "size": "64", "mode": "thumb", "params": null, "return": {"label": "Entering", "type": "bool"}, "notes": "Checks if samus is entering the ship"}, {"label": "GunshipInit", "addr": {"U": "44DBC", "E": "44E88", "J": "44DBC"}, "size": "1E0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a gunship sprite"}, {"label": "GunshipGameStartMove", "addr": {"U": "44F9C", "E": "45068", "J": "44F9C"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the ship before the intro cutscene at the start of the game"}, {"label": "GunshipSamusEnter", "addr": {"U": "44FE4", "E": "450B0", "J": "44FE4"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles samus starting to enter the ship"}, {"label": "GunshipSamusEntering", "addr": {"U": "45024", "E": "450F0", "J": "45024"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Handles samus entering the ship"}, {"label": "GunshipRefill", "addr": {"U": "450F0", "E": "451BC", "J": "450F0"}, "size": "15C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the ship refilling samus"}, {"label": "GunshipAfterRefill", "addr": {"U": "4524C", "E": "45318", "J": "4524C"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Called after the refill ends, spawns an item banner sprite"}, {"label": "GunshipAfterSave", "addr": {"U": "452DC", "E": "453A8", "J": "452DC"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Called after a save ends, spanws an item banner sprite"}, {"label": "GunshipSaving", "addr": {"U": "45320", "E": "453EC", "J": "45320"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called when saving the game, doesn't handle the save"}, {"label": "GunshipSamusLeave", "addr": {"U": "45358", "E": "45424", "J": "45358"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles samus starting to leave the ship"}, {"label": "GunshipSamusLeaving", "addr": {"U": "45410", "E": "454DC", "J": "45410"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Handles samus leaving the ship"}, {"label": "GunshipReleaseSamus", "addr": {"U": "45468", "E": "45534", "J": "45468"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Sets samus pose to facing the foreground"}, {"label": "GunshipReset", "addr": {"U": "4548C", "E": "45558", "J": "4548C"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Sets the samus collision of the gunship to escape ship, called after samus leaves the ship"}, {"label": "GunshipCheckSamusOnTopAfterLeaving", "addr": {"U": "454B4", "E": "45580", "J": "454B4"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is on top of the ship after leaving it"}, {"label": "GunshipEscapeZebes", "addr": {"U": "454DC", "E": "455A8", "J": "454DC"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Sets the escaped zebes event"}, {"label": "GunshipSamusEnteringWhenEscaping", "addr": {"U": "4552C", "E": "455F8", "J": "4552C"}, "size": "E4", "mode": "thumb", "params": null, "return": null, "notes": "Handles samus entering the ship when escaping zebes"}, {"label": "GunshipSpawnFlamesEscape", "addr": {"U": "45610", "E": "456DC", "J": "45610"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the flames for the ship escaping zebes"}, {"label": "GunshipTakingOff", "addr": {"U": "45688", "E": "45754", "J": "45688"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gunship taking off when escaping"}, {"label": "GunshipFlying", "addr": {"U": "45708", "E": "457D4", "J": "45708"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gunship flying when escaping"}, {"label": "GunshipPartInit", "addr": {"U": "45794", "E": "45860", "J": "45794"}, "size": "1A0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a gunship part sprite"}, {"label": "GunshipPartFlamesFlyingGfxInit", "addr": {"U": "45934", "E": "45A00", "J": "45934"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the big flames when flying"}, {"label": "GunshipPartCheckLandingEnded", "addr": {"U": "459E4", "E": "45AB0", "J": "459E4"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the landing at the beginning of the game has ended"}, {"label": "GunshipPartEntrySides", "addr": {"U": "45A68", "E": "45B34", "J": "45A68"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animations of the sides of the entry of the ship"}, {"label": "GunshipPartEntrySidesClose", "addr": {"U": "45B10", "E": "45BDC", "J": "45B10"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animation of the sides of the entry closing"}, {"label": "GunshipPartEntryTop", "addr": {"U": "45B6C", "E": "45C38", "J": "45B6C"}, "size": "F8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animations of the top of the entry of the ship"}, {"label": "GunshipPartEntryTopClose", "addr": {"U": "45C64", "E": "45D30", "J": "45C64"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animation of the top of the entry closing"}, {"label": "GunshipPartCheckSpawnPlatform", "addr": {"U": "45CC0", "E": "45D8C", "J": "45CC0"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the platform should spawn"}, {"label": "GunshipSpawnPlatform", "addr": {"U": "45D14", "E": "45DE0", "J": "45D14"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Handles the platform spawning"}, {"label": "GunshipPartDespawnPlatform", "addr": {"U": "45D64", "E": "45E30", "J": "45D64"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Handles the platform despawning"}, {"label": "Gunship_AI", "addr": {"U": "45E4C", "E": "45F18", "J": "45E4C"}, "size": "24C", "mode": "thumb", "params": null, "return": null, "notes": "Gunship AI"}, {"label": "GunshipPart_AI", "addr": {"U": "46098", "E": "46164", "J": "46098"}, "size": "1E4", "mode": "thumb", "params": null, "return": null, "notes": "Gunship part AI"}, {"label": "GlassTubeChangeClipAction", "addr": {"U": "4627C", "E": "46348", "J": "4627C"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Disables the glass tube hitbox"}, {"label": "GlassTubeInit", "addr": {"U": "463DC", "E": "464A8", "J": "463DC"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a glass tube sprite"}, {"label": "GlassTubeCheckPowerBombCollision", "addr": {"U": "4646C", "E": "46538", "J": "4646C"}, "size": "C0", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the glass tube is colliding with a power bomb"}, {"label": "GlassTubeDelayBeforeBreaking", "addr": {"U": "4652C", "E": "465F8", "J": "4652C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Delay before the glass tube starts to break"}, {"label": "GlassTubeCheckCrackingAnimEnded", "addr": {"U": "46568", "E": "46634", "J": "46568"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the cracking animation has ended"}, {"label": "GlassTubeCheckBreakingAnimEnded", "addr": {"U": "465F4", "E": "466C0", "J": "465F4"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the breaking animation has ended"}, {"label": "GlassTube_AI", "addr": {"U": "46620", "E": "466EC", "J": "46620"}, "size": "E8", "mode": "thumb", "params": null, "return": null, "notes": "Glass tube AI"}, {"label": "SavePlatformChozodiaInit", "addr": {"U": "46708", "E": "467D4", "J": "46708"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a save platform (chozodia) sprite"}, {"label": "SavePlatformChozodiaSamusDetection", "addr": {"U": "46870", "E": "4693C", "J": "46870"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is on the save platform (calls SavePlatformDetectSamus and checks if morhed/crouching)"}, {"label": "SavePlatformChozodiaCheckOpeningAnimEnded", "addr": {"U": "468C8", "E": "46994", "J": "468C8"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening animation has ended"}, {"label": "SavePlatformChozodiaSecondSamusDetection", "addr": {"U": "468F4", "E": "469C0", "J": "468F4"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Re-Detects if samus in on the save platform after the opening animation"}, {"label": "SavePlatformChozodiaCheckClosingAnimEnded", "addr": {"U": "4696C", "E": "46A38", "J": "4696C"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing animation has ended"}, {"label": "SavePlatformChozodiaReleaseSamus", "addr": {"U": "4699C", "E": "46A68", "J": "4699C"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Releases samus (sets pose to facing the foreground)"}, {"label": "SavePlatformChozodiaChozodiaSamusDetectionOut", "addr": {"U": "469D0", "E": "46A9C", "J": "469D0"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Detects if samus is out of the platform after being released"}, {"label": "SaveStationChozodiaCheckRefill", "addr": {"U": "46A04", "E": "46AD0", "J": "46A04"}, "size": "C0", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus needs a refill"}, {"label": "SaveStationChozodiaRefill", "addr": {"U": "46AC4", "E": "46B90", "J": "46AC4"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Refills samus"}, {"label": "SavePlatformChozodiaAfterRefill", "addr": {"U": "46C58", "E": "46D24", "J": "46C58"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the item banner at the end of the refill is gone"}, {"label": "SavePlatformChozodiaSaveInput", "addr": {"U": "46C90", "E": "46D5C", "J": "46C90"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Called before the player inputs an answer to the save yes no cursor"}, {"label": "SavePlatformChozodiaFlashingAnim", "addr": {"U": "46D60", "E": "46E2C", "J": "46D60"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animation when saving"}, {"label": "SavePlatformChozodiaFlashingAnimEnd", "addr": {"U": "46DA0", "E": "46E6C", "J": "46DA0"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Called after saving"}, {"label": "SavePlatformChozodiaTextTimer", "addr": {"U": "46DE4", "E": "46EB0", "J": "46DE4"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Timer before displaying the \"Save Done\" banner"}, {"label": "SavePlatformChozodiaCheckMessageBannerOut", "addr": {"U": "46E28", "E": "46EF4", "J": "46E28"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the item banner at the end of the save is gone"}, {"label": "SavePlatformChozodiaMessageBannerDisappearingTimer", "addr": {"U": "46E60", "E": "46F2C", "J": "46E60"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Timer when the message banner is disappearing"}, {"label": "SavePlatformTopChozodiaInit", "addr": {"U": "46E84", "E": "46F50", "J": "46E84"}, "size": "1B8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a save platform top (chozodia) sprite"}, {"label": "SavePlatformTopChozodiaCheckRefillAnimEnded", "addr": {"U": "4703C", "E": "47108", "J": "4703C"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the refill animation has ended"}, {"label": "SavePlatformTopChozodia_Empty", "addr": {"U": "47068", "E": "47134", "J": "47068"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "SavePlatformTopChozodiaExtendGfxInit", "addr": {"U": "4706C", "E": "47138", "J": "4706C"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the top extending down"}, {"label": "SavePlatformTopChozodiaCheckExtendingAnimEnded", "addr": {"U": "47088", "E": "47154", "J": "47088"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the extending animation has ended"}, {"label": "SavePlatformToChozodiaRetractingGfxInit", "addr": {"U": "470B4", "E": "47180", "J": "470B4"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the top retracting"}, {"label": "SavePlatformTopChozodiaCheckRetractingAnimEnded", "addr": {"U": "470E8", "E": "471B4", "J": "470E8"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting animation has ended"}, {"label": "SavePlatformTopChozodiaCheckTubeAnimSpawnEnded", "addr": {"U": "47114", "E": "471E0", "J": "47114"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube spawning animation has ended"}, {"label": "SavePlatformTopChozodiaCheckSpawnBigLight", "addr": {"U": "47164", "E": "47230", "J": "47164"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the big light should spawn"}, {"label": "SavePlatformTopChozodiaCheckTubeAnimEnded", "addr": {"U": "471B8", "E": "47284", "J": "471B8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube animation has ended"}, {"label": "SavePlatformTopChozodiaCheckTubeDespawningAnimEnded", "addr": {"U": "471E8", "E": "472B4", "J": "471E8"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube despawning animation has ended"}, {"label": "SavePlatformTopChozodiaCheckTubeAroundAnimEnded", "addr": {"U": "47224", "E": "472F0", "J": "47224"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube around animation has ended (quick beam going to the center at the beginning)"}, {"label": "SaveStationTopChozodiaCheckTubeAroundAnimEnded", "addr": {"U": "4723C", "E": "47308", "J": "4723C"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the down up tube animation (thing going from ground to top)"}, {"label": "SavePlatform_Chozodia_AI", "addr": {"U": "47280", "E": "4734C", "J": "47280"}, "size": "1E8", "mode": "thumb", "params": null, "return": null, "notes": "Save platform (chozodia) AI"}, {"label": "SavePlatformTop_Chozodia_AI", "addr": {"U": "47468", "E": "47534", "J": "47468"}, "size": "198", "mode": "thumb", "params": null, "return": null, "notes": "Save platform top (chozodia) AI"}, {"label": "BaristuteCheckSamusNearLeftRight", "addr": {"U": "47600", "E": "476CC", "J": "47600"}, "size": "20", "mode": "thumb", "params": null, "return": {"label": "InRange", "type": "bool", "notes": "In range"}, "notes": "Checks if samus is in range of the baristute (0x200 on both sides)"}, {"label": "BaristuteInit", "addr": {"U": "47620", "E": "476EC", "J": "47620"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a baristute sprite"}, {"label": "BaristuteJumpingGfxInit", "addr": {"U": "476B0", "E": "4777C", "J": "476B0"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a baristute to do the warning before a jump"}, {"label": "BaristuteCheckBeforeJumpingAnimEnded", "addr": {"U": "476E4", "E": "477B0", "J": "476E4"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animation before jumping has ended"}, {"label": "BaristuteJumping", "addr": {"U": "47760", "E": "4782C", "J": "47760"}, "size": "100", "mode": "thumb", "params": null, "return": null, "notes": "Handles the baristute jumping"}, {"label": "BaristuteLandingGfxInit", "addr": {"U": "47860", "E": "4792C", "J": "47860"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a baristute to be landing"}, {"label": "BaristuteCheckLandingAnimNearEnded", "addr": {"U": "4789C", "E": "47968", "J": "4789C"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the landing animatoin has nearly ended"}, {"label": "BaristuteIdleGfxInit", "addr": {"U": "478B8", "E": "47984", "J": "478B8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a baristute to be idle"}, {"label": "BaristuteIdle", "addr": {"U": "478E8", "E": "479B4", "J": "478E8"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the baristute being idle"}, {"label": "BaristuteWalkingGfxInit", "addr": {"U": "479B4", "E": "47A80", "J": "479B4"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a baristute to be walking"}, {"label": "BaristutePlayWalkingSound", "addr": {"U": "47A28", "E": "47AF4", "J": "47A28"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Plays the walking sound"}, {"label": "BaristuteWalking", "addr": {"U": "47A78", "E": "47B44", "J": "47A78"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the baristute walking"}, {"label": "BaristuteBouncingGfxInit", "addr": {"U": "47B4C", "E": "47C18", "J": "47B4C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the baristute to be falling"}, {"label": "BaristuteBouncing", "addr": {"U": "47B70", "E": "47C3C", "J": "47B70"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the baristute falling"}, {"label": "BaristuteDeath", "addr": {"U": "47BE0", "E": "47CAC", "J": "47BE0"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Handles a baristute death, does checks related to the baristutes in kraid"}, {"label": "Baristute_AI", "addr": {"U": "47D30", "E": "47DFC", "J": "47D30"}, "size": "18C", "mode": "thumb", "params": null, "return": null, "notes": "Baristute AI"}, {"label": "ElevatorStatueChangeTwoGroundClipAction", "addr": {"U": "47EBC", "E": "47F88", "J": "47EBC"}, "size": "50", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox of the statue debris on the ground"}, {"label": "KraidElevatorStatueChangeClipAction", "addr": {"U": "47F0C", "E": "47FD8", "J": "47F0C"}, "size": "64", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of the statue"}, {"label": "KraidElevatorStatueAfterFall", "addr": {"U": "47F70", "E": "4803C", "J": "47F70"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the kraid elevator statue to be fallen"}, {"label": "KraidElevatorStatueInit", "addr": {"U": "47FBC", "E": "48088", "J": "47FBC"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a kraid elevator statue sprite"}, {"label": "KraidElevatorStatueCheckShouldFall", "addr": {"U": "48048", "E": "48114", "J": "48048"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus isn't using an elevator and if kraid is dead"}, {"label": "KraidElevatorStatueTimerBeforeFalling", "addr": {"U": "4807C", "E": "48148", "J": "4807C"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Timer before the statue starts falling"}, {"label": "KraidElevatorStatueFalling", "addr": {"U": "480D0", "E": "4819C", "J": "480D0"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the statue falling"}, {"label": "RidleyElevatorStatueChangeClipAction", "addr": {"U": "48174", "E": "48240", "J": "48174"}, "size": "64", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of the statue"}, {"label": "RidleyElevatorStatueAfterFall", "addr": {"U": "481D8", "E": "482A4", "J": "481D8"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the ridley elevator statue to be fallen"}, {"label": "RidleyStatueElevatorInit", "addr": {"U": "48224", "E": "482F0", "J": "48224"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ridley elevator statue sprite"}, {"label": "RidleyElevatorStatueCheckShouldFall", "addr": {"U": "482B0", "E": "4837C", "J": "482B0"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus isn't using an elevator and if ridley is dead"}, {"label": "RidleyElevatorStatueTimerBeforeFalling", "addr": {"U": "482E4", "E": "483B0", "J": "482E4"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Timer before the statue starts falling"}, {"label": "RidleyElevatorStatueFalling", "addr": {"U": "48338", "E": "48404", "J": "48338"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the statue falling"}, {"label": "KraidElevatorStatue_AI", "addr": {"U": "483F0", "E": "484BC", "J": "483F0"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Kraid elevator statue AI"}, {"label": "RidleyElevatorStatue_AI", "addr": {"U": "48438", "E": "48504", "J": "48438"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Ridley elevator statue AI"}, {"label": "ElevatorStatueDebris_AI", "addr": {"U": "48480", "E": "4854C", "J": "48480"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Elevator statue debris AI"}, {"label": "RisingChozoPillarRandomSpriteDebris", "addr": {"U": "4854C", "E": "48618", "J": "4854C"}, "size": "A8", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "RandomNum", "type": "u8", "notes": "Random number"}], "return": null, "notes": "Spawns random sprite debris"}, {"label": "RisingChozoPillarRandomParticles", "addr": {"U": "485F4", "E": "486C0", "J": "485F4"}, "size": "AC", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "RandomNum", "type": "u8", "notes": "Random number"}], "return": null, "notes": "Spawns random particle effects"}, {"label": "RisingChozoPillarSpawnThreePlatforms", "addr": {"U": "486A0", "E": "4876C", "J": "486A0"}, "size": "E4", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Spawns 3 chozo pillar platform sprites"}, {"label": "RisingChozoPillarSpawnTwoPlatforms", "addr": {"U": "48784", "E": "48850", "J": "48784"}, "size": "B8", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Spawns 2 chozo pillar platform sprites"}, {"label": "RisingChozoPillarSpawnOnePlatform", "addr": {"U": "4883C", "E": "48908", "J": "4883C"}, "size": "68", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Spawns 1 chozo pillar platform sprite"}, {"label": "RisingChozoPillar_AI", "addr": {"U": "488A4", "E": "48970", "J": "488A4"}, "size": "248", "mode": "thumb", "params": null, "return": null, "notes": "Rising chozo pillar AI"}, {"label": "ChozoPillarPlatform_AI", "addr": {"U": "48AEC", "E": "48BB8", "J": "48AEC"}, "size": "124", "mode": "thumb", "params": null, "return": null, "notes": "Chozo pillar platform AI"}, {"label": "ChozoPillarPlatformShadow_AI", "addr": {"U": "48C10", "E": "48CDC", "J": "48C10"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Chozo pillar platform shadow AI"}, {"label": "SkulteraSetSidesHitbox", "addr": {"U": "48C7C", "E": "48D48", "J": "48C7C"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Sets the left and right hitboxes of the skultera depending on the X flip"}, {"label": "SkulteraXMovement", "addr": {"U": "48CAC", "E": "48D78", "J": "48CAC"}, "size": "64", "mode": "thumb", "params": [{"label": "XMovement", "type": "u16", "notes": "X movement"}], "return": {"label": "PrevCollisionCheckIsSolid", "type": "bool", "notes": "Previous collision check is solid"}, "notes": "Handles the horizontal movement of the skultera"}, {"label": "SkulteraInit", "addr": {"U": "48D10", "E": "48DDC", "J": "48D10"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a skultera sprite"}, {"label": "SkulteraGfxInit", "addr": {"U": "48D78", "E": "48E44", "J": "48D78"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a skultera to be idle"}, {"label": "SkulteraMoving", "addr": {"U": "48DA8", "E": "48E74", "J": "48DA8"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the skultera when not chasing samus"}, {"label": "SkulteraChasingSamusGfxInit", "addr": {"U": "48E6C", "E": "48F38", "J": "48E6C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a skultera to be chasing samus"}, {"label": "SkulteraChasingSamus", "addr": {"U": "48E8C", "E": "48F58", "J": "48E8C"}, "size": "110", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the skultera when chasing samus"}, {"label": "SkulteraTurningAroundGfxInit", "addr": {"U": "48F9C", "E": "49068", "J": "48F9C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a skultera to be turning around"}, {"label": "SkulteraCheckTurningAroundAnimEnded", "addr": {"U": "48FD4", "E": "490A0", "J": "48FD4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the turning around animation has ended"}, {"label": "Skultera_AI", "addr": {"U": "48FF8", "E": "490C4", "J": "48FF8"}, "size": "18C", "mode": "thumb", "params": null, "return": null, "notes": "Skultera AI"}, {"label": "StatueVerticalLineChangeClipAction", "addr": {"U": "49184", "E": "49250", "J": "49184"}, "size": "80", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of a vertical lign of 6 blocks"}, {"label": "StatueHorizontalLineThreeChangeClipAction", "addr": {"U": "49204", "E": "492D0", "J": "49204"}, "size": "58", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of a horizontal lign of 3 blocks"}, {"label": "StatueHorizontalLineHeightChangeClipAction", "addr": {"U": "4925C", "E": "49328", "J": "4925C"}, "size": "B8", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of a horizontal lign of 8 blocks"}, {"label": "KraidStatueAfterOpen", "addr": {"U": "49314", "E": "493E0", "J": "49314"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Called after the statue finished opening or when initializing the sprite but it's already opened"}, {"label": "KraidStatueInit", "addr": {"U": "4933C", "E": "49408", "J": "4933C"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a kraid statue sprite"}, {"label": "KraidStatueCheckBackgroundLocked", "addr": {"U": "49404", "E": "494D0", "J": "49404"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the background has finished scrolling to the center"}, {"label": "KraidStatueOpening", "addr": {"U": "49474", "E": "49540", "J": "49474"}, "size": "1B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the kraid statue opening"}, {"label": "RidleyStatueChangeThreeClipAction", "addr": {"U": "4962C", "E": "496F8", "J": "4962C"}, "size": "6C", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox for a horizontal lign of 3 blocks"}, {"label": "RidleyStatueChangeFourClipAction", "addr": {"U": "49698", "E": "49764", "J": "49698"}, "size": "7C", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox for 4 blocks"}, {"label": "RidleyStatueAfterOpen", "addr": {"U": "49714", "E": "497E0", "J": "49714"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Called after the statue finished opening or when initializing the sprite but it's already opened"}, {"label": "RidleyStatueInit", "addr": {"U": "4973C", "E": "49808", "J": "4973C"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ridley statue sprite"}, {"label": "RidleyStatueCheckBackgroundLocked", "addr": {"U": "497F0", "E": "498BC", "J": "497F0"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the background has finished scrolling to the center"}, {"label": "RidleyStatueOpening", "addr": {"U": "49844", "E": "49910", "J": "49844"}, "size": "1F4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the ridley statue opening"}, {"label": "KraidStatue_AI", "addr": {"U": "49A38", "E": "49B04", "J": "49A38"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Kraid statue AI"}, {"label": "RidleyStatue_AI", "addr": {"U": "49B50", "E": "49C1C", "J": "49B50"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Ridley statue AI"}, {"label": "Searchlight_AI", "addr": {"U": "49BD0", "E": "49C9C", "J": "49BD0"}, "size": "1FC", "mode": "thumb", "params": null, "return": null, "notes": "Searchlight AI"}, {"label": "PrimarySpriteB3_AI", "addr": {"U": "49DCC", "E": "49E98", "J": "49DCC"}, "size": "EC", "mode": "thumb", "params": null, "return": null, "notes": "Primary sprite B3 AI"}, {"label": "GadoraInit", "addr": {"U": "49EB8", "E": "49F84", "J": "49EB8"}, "size": "134", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a gadora sprite"}, {"label": "GadoraGfxInit", "addr": {"U": "49FEC", "E": "4A0B8", "J": "49FEC"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a gadora to be idle"}, {"label": "GadoraSamusDetection", "addr": {"U": "4A01C", "E": "4A0E8", "J": "4A01C"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is in range"}, {"label": "GadoraCheckBeforeOpeningEyeAnimEnded", "addr": {"U": "4A070", "E": "4A13C", "J": "4A070"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animation ended"}, {"label": "GadoraCheckOpeningEyeAnimEnded", "addr": {"U": "4A0A4", "E": "4A170", "J": "4A0A4"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening eye animation ended, spawns a gadora beam sprite if necessary"}, {"label": "GadoraEyeOpened", "addr": {"U": "4A10C", "E": "4A1D8", "J": "4A10C"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gadora having its eye opened"}, {"label": "GadoraCheckClosingEyeAnimNearEnded", "addr": {"U": "4A180", "E": "4A24C", "J": "4A180"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing eye animation has nearly ended"}, {"label": "GadoraDeathGfxInit", "addr": {"U": "4A19C", "E": "4A268", "J": "4A19C"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the GFX for the gadora dying"}, {"label": "GadoraDeath", "addr": {"U": "4A1CC", "E": "4A298", "J": "4A1CC"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the gadora"}, {"label": "Gadora_AI", "addr": {"U": "4A2A0", "E": "4A36C", "J": "4A2A0"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Gadora AI"}, {"label": "GadoraEye_AI", "addr": {"U": "4A318", "E": "4A3E4", "J": "4A318"}, "size": "1D0", "mode": "thumb", "params": null, "return": null, "notes": "Gadora eye AI"}, {"label": "GadoraBeam_AI", "addr": {"U": "4A4E8", "E": "4A5B4", "J": "4A4E8"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Gadora beam AI"}, {"label": "Steam_AI", "addr": {"U": "4A5E4", "E": "4A6B0", "J": "4A5E4"}, "size": "208", "mode": "thumb", "params": null, "return": null, "notes": "Steam AI"}, {"label": "Steam_Diagonal_AI", "addr": {"U": "4A7EC", "E": "4A8B8", "J": "4A7EC"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Steam (diagonal) AI"}, {"label": "UnknownItemBlockChangeClipAction", "addr": {"U": "4A930", "E": "4A9FC", "J": "4A930"}, "size": "70", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox for the block"}, {"label": "UnknownItemBlock_AI", "addr": {"U": "4A9A0", "E": "4AA6C", "J": "4A9A0"}, "size": "22C", "mode": "thumb", "params": null, "return": null, "notes": "Unknown item block AI"}, {"label": "UnknownItemBlockLight_AI", "addr": {"U": "4ABCC", "E": "4AC98", "J": "4ABCC"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Unknown item block light AI"}, {"label": "EscapeShipSetIgnoreSamus", "addr": {"U": "4AC94", "E": "4AD60", "J": "4AC94"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Loops through all sprites and sets the ignore samus collision timer to 0xf"}, {"label": "EscapeShipSetPirateDrawOrder", "addr": {"U": "4ACC8", "E": "4AD94", "J": "4ACC8"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Sets the draw order of all space pirates to 2"}, {"label": "EscapeShipCheckCollidingWithLaser", "addr": {"U": "4ADCC", "E": "4AE98", "J": "4ADCC"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the escape ship is colliding with a space pirate laser, if yes destroys it and spawns a particle effect"}, {"label": "EscapeShip_AI", "addr": {"U": "4AE90", "E": "4AF5C", "J": "4AE90"}, "size": "4FC", "mode": "thumb", "params": null, "return": null, "notes": "Escape ship AI"}, {"label": "EscapeShipPart_AI", "addr": {"U": "4B38C", "E": "4B458", "J": "4B38C"}, "size": "278", "mode": "thumb", "params": null, "return": null, "notes": "Escape ship part AI"}, {"label": "SpacePirateCarryingPowerBomb_AI", "addr": {"U": "4B604", "E": "4B6D0", "J": "4B604"}, "size": "180", "mode": "thumb", "params": null, "return": null, "notes": "Space pirate carrying power bomb AI"}, {"label": "FakePowerBomb_AI", "addr": {"U": "4B784", "E": "4B850", "J": "4B784"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Fake power bomb AI"}, {"label": "FakePowerBombEventTrigger_AI", "addr": {"U": "4B7F0", "E": "4B8BC", "J": "4B7F0"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Fake power bomb event trigger AI"}, {"label": "FallingChozoPillar_AI", "addr": {"U": "4B884", "E": "4B950", "J": "4B884"}, "size": "218", "mode": "thumb", "params": null, "return": null, "notes": "Falling chozo pillar AI"}, {"label": "MechaRidleySyncSubSpritesPosition", "addr": {"U": "4BA9C", "E": "4BB68", "J": "4BA9C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the mecha ridley part sprites position with the mecha ridley sprite"}, {"label": "MechaRidleyPartGreenGlow", "addr": {"U": "4BB04", "E": "4BBD0", "J": "4BB04"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles the green glow on the mecha ridley parts"}, {"label": "MechaRidleyInit", "addr": {"U": "4BF68", "E": "4C034", "J": "4BF68"}, "size": "230", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a mecha ridley sprite"}, {"label": "MechaRidleyStartWalking", "addr": {"U": "4C198", "E": "4C264", "J": "4C198"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Called once before mecha ridley starts walking"}, {"label": "MechaRidleyWalkingStationary", "addr": {"U": "4C1E0", "E": "4C2AC", "J": "4C1E0"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha ridley walking semi-stationary at the beginning"}, {"label": "MechaRidleyWalking", "addr": {"U": "4C200", "E": "4C2CC", "J": "4C200"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha ridley walking at the begining"}, {"label": "MechaRidleyStartBattle", "addr": {"U": "4C2A4", "E": "4C370", "J": "4C2A4"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Called after mecha ridley finished walking, plays the music and enables the alarm"}, {"label": "MechaRidleyCheckSamusOutOfAmmo", "addr": {"U": "4C33C", "E": "4C408", "J": "4C33C"}, "size": "8C", "mode": "thumb", "params": [{"label": "RamSlot", "type": "u8", "notes": "RAM Slot"}], "return": {"label": "SamusHasNoMoreAmmo", "type": "bool", "notes": "Samus has no more ammo"}, "notes": "Checks if samus is out of ammo (missiles and super missiles), used to force a missile attack"}, {"label": "RidleyClawAttack", "addr": {"U": "4C400", "E": "4C4CC", "J": "4C400"}, "size": "12C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the claw attack"}, {"label": "MechaRidleyStandingUp", "addr": {"U": "4C52C", "E": "4C5F8", "J": "4C52C"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha ridley standing up"}, {"label": "MechaRidleyCurledUp", "addr": {"U": "4C5DC", "E": "4C6A8", "J": "4C5DC"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha ridley curled up"}, {"label": "MechaRidleyCheckRetractingHeadBeforeMovingBackAnimEnded", "addr": {"U": "4C630", "E": "4C6FC", "J": "4C630"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting head animation before moving back has ended"}, {"label": "MechaRidleyMovingBack", "addr": {"U": "4C6A8", "E": "4C774", "J": "4C6A8"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha ridley moving back"}, {"label": "MechaRidleyBeforeFireballs", "addr": {"U": "4C738", "E": "4C804", "J": "4C738"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Called once before the fireballs attack"}, {"label": "MechaRidleyCheckExtendingHeadBeforeFireballsAnimEnded", "addr": {"U": "4C784", "E": "4C850", "J": "4C784"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the extending head animation before the fireballs attack has ended"}, {"label": "MechaRidleyCheckOpeningMouthAnimEnded", "addr": {"U": "4C7BC", "E": "4C888", "J": "4C7BC"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening mouth animation before the fireballs attack has ended"}, {"label": "MechaRidleyFireballsAttack", "addr": {"U": "4C7F4", "E": "4C8C0", "J": "4C7F4"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the fireballs attack"}, {"label": "MechaRidleyCheckClosingMouthAnimEnded", "addr": {"U": "4C8B0", "E": "4C97C", "J": "4C8B0"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing mouth animation after the fireballs attack has ended"}, {"label": "MechaRidleyCheckRetractingHeadAfterFireballsAnimEnded", "addr": {"U": "4C8E0", "E": "4C9AC", "J": "4C8E0"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting head animation after the fireballs attack has ended"}, {"label": "MechaRidleyStartDying", "addr": {"U": "4C92C", "E": "4C9F8", "J": "4C92C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Called once before mecha ridley dies"}, {"label": "MechaRidleyDying", "addr": {"U": "4C994", "E": "4CA60", "J": "4C994"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha ridley dying"}, {"label": "MechaRidleyGlowFading", "addr": {"U": "4CA30", "E": "4CAFC", "J": "4CA30"}, "size": "1A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the fading of the green glow when mecha ridley dies"}, {"label": "MechaRidleySpawnDrops", "addr": {"U": "4CBD8", "E": "4CCA4", "J": "4CBD8"}, "size": "244", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawn of the multiple large energy"}, {"label": "MechaRidleyFirstEyeGlow", "addr": {"U": "4CE1C", "E": "4CEE8", "J": "4CE1C"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the first part of the eye glow at the end of the fight"}, {"label": "MechaRidleySecondEyeGlow", "addr": {"U": "4CEC0", "E": "4CF8C", "J": "4CEC0"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the second part of the eye glow at the end of the fight (spawns an item banner sprite and sets the mecha ridley killed event)"}, {"label": "MechaRidleyPartInit", "addr": {"U": "4CF88", "E": "4D054", "J": "4CF88"}, "size": "358", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a mecha ridley part sprite"}, {"label": "MechaRidleyPartGlows", "addr": {"U": "4D2E0", "E": "4D3AC", "J": "4D2E0"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Calls MechaRidleyPartGreenGlow and 4bb88"}, {"label": "MechaRidleyPartCoreCoverExplosion", "addr": {"U": "4D338", "E": "4D404", "J": "4D338"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the explosion of the mecha ridley core cover"}, {"label": "MechaRidleyPartUpdateFrontClawHitbox", "addr": {"U": "4D928", "E": "4D9F4", "J": "4D928"}, "size": "238", "mode": "thumb", "params": null, "return": null, "notes": "Updates the hitbox of the claw in front"}, {"label": "MechaRidley_AI", "addr": {"U": "4DD58", "E": "4DE24", "J": "4DD58"}, "size": "384", "mode": "thumb", "params": null, "return": null, "notes": "Mecha ridley AI"}, {"label": "MechaRidleyPart_AI", "addr": {"U": "4E0DC", "E": "4E1A8", "J": "4E0DC"}, "size": "3C4", "mode": "thumb", "params": null, "return": null, "notes": "Mecha ridley part AI"}, {"label": "MechaRidleyLaser_AI", "addr": {"U": "4E4A0", "E": "4E56C", "J": "4E4A0"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Mecha ridley laser AI"}, {"label": "MechaRidleyMissile_AI", "addr": {"U": "4E5B8", "E": "4E684", "J": "4E5B8"}, "size": "208", "mode": "thumb", "params": null, "return": null, "notes": "Mecha ridley missile AI"}, {"label": "MechaRidleyFireball_AI", "addr": {"U": "4E7C0", "E": "4E88C", "J": "4E7C0"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Mecha ridley fireball AI"}, {"label": "EscapeGateChangeClipAction", "addr": {"U": "4E910", "E": "4E9DC", "J": "4E910"}, "size": "B0", "mode": "thumb", "params": [{"label": "ClipdataAffectingAction", "type": "u8", "enum": "ClipdataAffectingAction", "notes": "Clipdata affecting action"}], "return": null, "notes": "Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox for the gate"}, {"label": "EscapeGate_AI", "addr": {"U": "4E9C0", "E": "4EA8C", "J": "4E9C0"}, "size": "348", "mode": "thumb", "params": null, "return": null, "notes": "Escape gate AI"}, {"label": "SetBeamParticleEffect", "addr": {"U": "4ED08", "E": "4EDD4", "J": "4ED08"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Sets a particle effect at the arm cannon depending on the direction"}, {"label": "CheckNumOfProjectiles", "addr": {"U": "4ED94", "E": "4EE60", "J": "4ED94"}, "size": "50", "mode": "thumb", "params": [{"label": "ProjectileType", "type": "u8", "enum": "ProjectileType", "notes": "Projectile type"}, {"label": "ProjectileLimit", "type": "u8", "notes": "Projectile limit"}], "return": {"label": "WithinLimit", "type": "bool", "notes": "Within limit"}, "notes": "Checks if the numbers of currently loaded projectiles of type r0 is above/below r1"}, {"label": "InitProjectile", "addr": {"U": "4EDE4", "E": "4EEB0", "J": "4EDE4"}, "size": "A4", "mode": "thumb", "params": [{"label": "ProjectileType", "type": "u8", "enum": "ProjectileType", "notes": "Projectile type"}, {"label": "ProjectileYPosition", "type": "u16", "notes": "Projectile Y position"}, {"label": "ProjectileXPosition", "type": "u16", "notes": "Projectile X position"}], "return": {"label": "Initialized", "type": "bool"}, "notes": "Initialize a projectile with r0, r1 and r2"}, {"label": "UpdateArmCannonAndWeapons", "addr": {"U": "4EE88", "E": "4EF54", "J": "4EE88"}, "size": "47C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the projectiles and spawns the projectile in samus weapon info.new projectile"}, {"label": "AdvanceProjectileAnimation", "addr": {"U": "4F304", "E": "4F3D0", "J": "4F304"}, "size": "38", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Updates the animation of the projectile in r0"}, {"label": "CallDrawProjectile_80Clear", "addr": {"U": "4F33C", "E": "4F408", "J": "4F33C"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Loops through all the projectiles and calls DrawProjectile if the 80 status flag isn't set"}, {"label": "CallDrawProjectile_80Set", "addr": {"U": "4F380", "E": "4F44C", "J": "4F380"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Loops through all the projectiles and calls DrawProjectile if the 80 status flag is set"}, {"label": "DrawProjectile", "addr": {"U": "4F3C4", "E": "4F490", "J": "4F3C4"}, "size": "1B4", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Draws the projectile in r0"}, {"label": "CheckDespawnProjectile", "addr": {"U": "4F578", "E": "4F644", "J": "4F578"}, "size": "F8", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Checks if the projectile in r0 should despawn"}, {"label": "LoadBeamGfx", "addr": {"U": "4F670", "E": "4F73C", "J": "4F670"}, "size": "2B0", "mode": "thumb", "params": null, "return": null, "notes": "Loads the graphics for a beam"}, {"label": "LoadBeamGfxAndClearProjectiles", "addr": {"U": "4F920", "E": "4F9EC", "J": "4F920"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Calls LoadBeamGraphics and clears all projectiles if the pause screen flag is 0"}, {"label": "MoveProjectile", "addr": {"U": "4F954", "E": "4FA20", "J": "4F954"}, "size": "C4", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}, {"label": "Distance", "type": "u8"}], "return": null, "notes": "Moves the projectile in r0"}, {"label": "ProjectileCheckHittingSolid", "addr": {"U": "4FA18", "E": "4FAE4", "J": "4FA18"}, "size": "24", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": {"label": "HittingSolidClipdata", "type": "bool", "notes": "Hitting solid clipdata"}, "notes": "Checks if a projectile is colliding with a solid clipdata"}, {"label": "ProjectileCheckCenterCollisionAtPosition", "addr": {"U": "4FA3C", "E": "4FB08", "J": "4FA3C"}, "size": "1FC", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": {"label": "CollisionCheck", "type": "u8", "enum": "CollisionCheck", "notes": "Collision check"}, "notes": "Checks the vertical collision for a projectile"}, {"label": "HandleProjectileTrail", "addr": {"U": "4FC38", "E": "4FD04", "J": "4FC38"}, "size": "A8", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}, {"label": "ParticleEffect", "type": "u8", "enum": "ParticleEffect", "notes": "Particle effect"}, {"label": "FrequencyAndedWithFrameCounter", "type": "u32", "notes": "Frequency (ANDed with frame counter)"}], "return": null, "notes": "Sets a projectile trail with r0 and r1 with a delay of r2"}, {"label": "MoveTumblingMissile", "addr": {"U": "4FCE0", "E": "4FDAC", "J": "4FCE0"}, "size": "68", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Handles a missile/super missile tumbling"}, {"label": "GetSpriteWeakness", "addr": {"U": "50370", "E": "5043C", "J": "50370"}, "size": "30", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": {"label": "SpriteWeakness", "type": "u8", "enum": "SpriteWeakness", "notes": "Sprite weakness"}, "notes": "Gets the weakness of the sprite in r0"}, {"label": "IceBeamDealDamage", "addr": {"U": "503A0", "E": "5046C", "J": "503A0"}, "size": "84", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "Damage", "type": "u16"}], "return": {"label": "SpriteFreezeTimer", "type": "u8", "notes": "Sprite freeze timer (F0 if alive, 0 if dead)"}, "notes": "Handles the ice beam dealing damage to a sprite"}, {"label": "ProjectileDealDamage", "addr": {"U": "50424", "E": "504F0", "J": "50424"}, "size": "88", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "Damage", "type": "u16"}], "return": {"label": "SpriteIsDead", "type": "bool", "notes": "Sprite is dead"}, "notes": "Handles a projectile dealing damage to a sprite"}, {"label": "ProjectileHitImmuneSprite", "addr": {"U": "504AC", "E": "50578", "J": "504AC"}, "size": "20", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": {"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, "notes": "Handles a projectile hitting a sprite immune to projectiles"}, {"label": "ProjectileHitSolidSprite", "addr": {"U": "504CC", "E": "50598", "J": "504CC"}, "size": "20", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": {"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, "notes": "Handles a projectile hitting a solid sprite"}, {"label": "PowerBombDealDamage", "addr": {"U": "504EC", "E": "505B8", "J": "504EC"}, "size": "C0", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": null, "notes": "Handles a power bomb dealing damage to a sprite"}, {"label": "ProjectileHitSprite", "addr": {"U": "505AC", "E": "50678", "J": "505AC"}, "size": "A8", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "ProjectileYPosition", "type": "u16", "notes": "Projectile Y position"}, {"label": "ProjectileXPosition", "type": "u16", "notes": "Projectile X position"}, {"label": "Damage", "type": "u16"}, {"label": "ParticleEffect", "type": "u8", "enum": "ParticleEffect", "notes": "Particle effect"}], "return": null, "notes": "Handles a projectile hitting a sprite"}, {"label": "ChargedBeamHitSprite", "addr": {"U": "50654", "E": "50720", "J": "50654"}, "size": "A8", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "ProjectileYPosition", "type": "u16", "notes": "Projectile Y position"}, {"label": "ProjectileXPosition", "type": "u16", "notes": "Projectile X position"}, {"label": "Damage", "type": "u16"}, {"label": "ParticleEffect", "type": "u8", "enum": "ParticleEffect", "notes": "Particle effect"}], "return": null, "notes": "Handles a charged beam (without ice) hitting a sprite"}, {"label": "FreezeSprite", "addr": {"U": "506FC", "E": "507C8", "J": "506FC"}, "size": "28", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "FreezeTimer", "type": "u8", "notes": "Freeze timer"}], "return": null, "notes": "Freezes the sprite in r0"}, {"label": "IceBeamHitSprite", "addr": {"U": "50724", "E": "507F0", "J": "50724"}, "size": "104", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "ProjectileYPosition", "type": "u16", "notes": "Projectile Y position"}, {"label": "ProjectileXPosition", "type": "u16", "notes": "Projectile X position"}, {"label": "Damage", "type": "u16"}, {"label": "ParticleEffect", "type": "u8", "enum": "ParticleEffect", "notes": "Particle effect"}], "return": null, "notes": "Handles a beam with ice (not charged) hitting a sprite"}, {"label": "ChargedIceBeamHitSprite", "addr": {"U": "50828", "E": "508F4", "J": "50828"}, "size": "EC", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "ProjectileYPosition", "type": "u16", "notes": "Projectile Y position"}, {"label": "ProjectileXPosition", "type": "u16", "notes": "Projectile X position"}, {"label": "Damage", "type": "u16"}, {"label": "ParticleEffect", "type": "u8", "enum": "ParticleEffect", "notes": "Particle effect"}], "return": null, "notes": "Handles a charged ice beam hitting a sprite"}, {"label": "StartMissileTumble", "addr": {"U": "50914", "E": "509E0", "J": "50914"}, "size": "60", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}, {"label": "ProjectileType", "type": "u8", "enum": "ProjectileType", "notes": "Projectile type"}], "return": null, "notes": "Starts a tumbling missile"}, {"label": "StartMissileTumble_KraidHead", "addr": {"U": "50974", "E": "50A40", "J": "50974"}, "size": "68", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}, {"label": "ProjectileType", "type": "u8", "enum": "ProjectileType", "notes": "Projectile type"}], "return": null, "notes": "Starts a tumbling missile using the current sprite"}, {"label": "MissileHitSprite", "addr": {"U": "509DC", "E": "50AA8", "J": "509DC"}, "size": "A0", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}, {"label": "ProjectileYPosition", "type": "u16", "notes": "Projectile Y position"}, {"label": "ProjectileXPosition", "type": "u16", "notes": "Projectile X position"}], "return": null, "notes": "Handles a missile hitting a sprite"}, {"label": "SuperMissileHitSprite", "addr": {"U": "50A7C", "E": "50B48", "J": "50A7C"}, "size": "9C", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}, {"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}, {"label": "ProjectileYPosition", "type": "u16", "notes": "Projectile Y position"}, {"label": "ProjectileXPosition", "type": "u16", "notes": "Projectile X position"}], "return": null, "notes": "Handles a super missile hitting a sprite"}, {"label": "BombHitSprite", "addr": {"U": "50B18", "E": "50BE4", "J": "50B18"}, "size": "4C", "mode": "thumb", "params": [{"label": "SpriteDataPtr", "type": "SpriteData *", "notes": "Sprite data pointer"}], "return": null, "notes": "Handles a bomb hitting a sprite"}, {"label": "ProcessNormalBeam", "addr": {"U": "50B64", "E": "50C30", "J": "50B64"}, "size": "F8", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Normal beam subroutine"}, {"label": "ProcessLongBeam", "addr": {"U": "50C5C", "E": "50D28", "J": "50C5C"}, "size": "EC", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Long beam subroutine"}, {"label": "ProcessIceBeam", "addr": {"U": "50D48", "E": "50E14", "J": "50D48"}, "size": "124", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Ice beam subroutine"}, {"label": "HandleWaveBeamCollision", "addr": {"U": "50E6C", "E": "50F38", "J": "50E6C"}, "size": "1FC", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": {"label": "NumOfBlocksTouched", "type": "u8", "notes": "Number of blocks touched (0-3)"}, "notes": "Checks for wave beam collision"}, {"label": "ProcessWaveBeam", "addr": {"U": "51068", "E": "51134", "J": "51068"}, "size": "130", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Wave beam subroutine"}, {"label": "ProcessPlasmaBeam", "addr": {"U": "51198", "E": "51264", "J": "51198"}, "size": "1BC", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Plasma beam subroutine"}, {"label": "ProcessPistol", "addr": {"U": "51354", "E": "51420", "J": "51354"}, "size": "EC", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Pistol subroutine"}, {"label": "ProcessChargedNormalBeam", "addr": {"U": "51440", "E": "5150C", "J": "51440"}, "size": "F8", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Charged normal beam subroutine"}, {"label": "ProcessChargedLongBeam", "addr": {"U": "51538", "E": "51604", "J": "51538"}, "size": "F8", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Charged long beam subroutine"}, {"label": "ProcessChargedIceBeam", "addr": {"U": "51630", "E": "516FC", "J": "51630"}, "size": "134", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Charged ice beam subroutine"}, {"label": "ProcessChargedWaveBeam", "addr": {"U": "51764", "E": "51830", "J": "51764"}, "size": "13C", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Charged wave beam subroutine"}, {"label": "ProcessChargedPlasmaBeam", "addr": {"U": "518A0", "E": "5196C", "J": "518A0"}, "size": "1DC", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Charged plasma beam subroutine"}, {"label": "ProcessChargedPistol", "addr": {"U": "51A7C", "E": "51B48", "J": "51A7C"}, "size": "F8", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Charged pistol subroutine"}, {"label": "DecrementMissileCounter", "addr": {"U": "51B74", "E": "51C40", "J": "51B74"}, "size": "38", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Decrements the missile counter"}, {"label": "ProcessMissile", "addr": {"U": "51BAC", "E": "51C78", "J": "51BAC"}, "size": "118", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Missile subroutine"}, {"label": "DecrementSuperMissileCounter", "addr": {"U": "51CC4", "E": "51D90", "J": "51CC4"}, "size": "38", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Decrements the super missile counter"}, {"label": "ProcessSuperMissile", "addr": {"U": "51CFC", "E": "51DC8", "J": "51CFC"}, "size": "118", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Super missile subroutine"}, {"label": "MorphBallLauncherLaunchSamus", "addr": {"U": "51E14", "E": "51EE0", "J": "51E14"}, "size": "B8", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Checks if samus is in place and launchs it"}, {"label": "CheckSamusBombJump", "addr": {"U": "51ECC", "E": "51F98", "J": "51ECC"}, "size": "12C", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Checks if samus is colliding with a bomb, calls SamusBounceBomb"}, {"label": "ProcessBomb", "addr": {"U": "51FF8", "E": "520C4", "J": "51FF8"}, "size": "1F8", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Bomb subroutine"}, {"label": "ProcessProjectile_Empty", "addr": {"U": "521F0", "E": "522BC", "J": "521F0"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"label": "ProcessPowerBomb", "addr": {"U": "521F4", "E": "522C0", "J": "521F4"}, "size": "114", "mode": "thumb", "params": [{"label": "ProjectileDataPtr", "type": "ProjectileData *", "notes": "Projectile data pointer"}], "return": null, "notes": "Power bomb subroutine"}, {"label": "DrawHudOam", "addr": {"U": "52308", "E": "523D4", "J": "52308"}, "size": "35C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the OAM for the HUD"}, {"label": "DrawHudEnergyTanks", "addr": {"U": "52664", "E": "52730", "J": "52664"}, "size": "70", "mode": "thumb", "params": [{"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}, {"label": "NormalGfxSourceAddress", "type": "u8 *", "tags": ["gfx"], "notes": "Normal graphics source address"}, {"label": "RefillGfxSourceAddress", "type": "u8 *", "tags": ["gfx"], "notes": "Refill graphics source address"}, {"label": "NumOfEnergyTanks", "type": "u8", "notes": "Number of energy tanks"}, {"label": "RefillAnimationStage", "type": "u8", "notes": "Refill animation stage"}], "return": null, "notes": "Updates the energy tank squares on the HUD"}, {"label": "DrawHudEnergy", "addr": {"U": "526D4", "E": "527A0", "J": "526D4"}, "size": "598", "mode": "thumb", "params": [{"label": "FileNum", "type": "u8", "notes": "File number (0 = in-game, 1 = file A, 2 = file B, 3 = file C)"}], "return": null, "notes": "Draws the energy HUD"}, {"label": "DrawHudMissileDigits", "addr": {"U": "52C6C", "E": "52D38", "J": "52C6C"}, "size": "100", "mode": "thumb", "params": [{"label": "HundredsPlace", "type": "u16", "notes": "Hundreds place"}, {"label": "TensPlace", "type": "u16", "notes": "Tens place"}, {"label": "OnesPlace", "type": "u16", "notes": "Ones place"}, {"label": "HighlightFlag", "type": "u16", "notes": "Highlight flag"}], "return": null, "notes": "Draws the missiles digits on the HUD"}, {"label": "DrawHudSuperMissileDigits", "addr": {"U": "52D6C", "E": "52E38", "J": "52D6C"}, "size": "D8", "mode": "thumb", "params": [{"label": "TensPlace", "type": "u16", "notes": "Tens place"}, {"label": "OnesPlace", "type": "u16", "notes": "Ones place"}, {"label": "HighlightFlag", "type": "u16", "notes": "Highlight flag"}], "return": null, "notes": "Draws the super missiles digits on the HUD"}, {"label": "DrawHudPowerBombDigits", "addr": {"U": "52E44", "E": "52F10", "J": "52E44"}, "size": "D8", "mode": "thumb", "params": [{"label": "TensPlace", "type": "u16", "notes": "Tens place"}, {"label": "OnesPlace", "type": "u16", "notes": "Ones place"}, {"label": "HighlightFlag", "type": "u16", "notes": "Highlight flag"}], "return": null, "notes": "Draws the power bombs digits on the HUD"}, {"label": "DrawHudMissiles", "addr": {"U": "52F1C", "E": "52FE8", "J": "52F1C"}, "size": "220", "mode": "thumb", "params": [{"label": "UpdateHighlightFlag", "type": "bool", "notes": "Update highlight flag"}], "return": null, "notes": "Draws the missile HUD"}, {"label": "DrawHudPowerBombs", "addr": {"U": "5313C", "E": "53208", "J": "5313C"}, "size": "1F8", "mode": "thumb", "params": [{"label": "UpdateHighlightFlag", "type": "bool", "notes": "Update highlight flag"}], "return": null, "notes": "Draws the power bomb HUD"}, {"label": "DrawHudSuperMissiles", "addr": {"U": "53334", "E": "53400", "J": "53334"}, "size": "1F8", "mode": "thumb", "params": [{"label": "UpdateHighlightFlag", "type": "bool", "notes": "Update highlight flag"}], "return": null, "notes": "Draws the super missile HUD"}, {"label": "DrawHudWeaponHighlight", "addr": {"U": "5352C", "E": "535F8", "J": "5352C"}, "size": "3BC", "mode": "thumb", "params": null, "return": null, "notes": "Draws the highlight of the weapons on the HUD"}, {"label": "DrawHudPistolBar", "addr": {"U": "538E8", "E": "539B4", "J": "538E8"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Draws the HUD in suitless"}, {"label": "DrawHud", "addr": {"U": "53930", "E": "539FC", "J": "53930"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Calls all the DrawHUD weapons functions, DrawHUDSuitless if in suitless and DrawHUDOAM"}, {"label": "CheckTimerDisplayed", "addr": {"U": "53968", "E": "53A34", "J": "53968"}, "size": "40", "mode": "thumb", "params": null, "return": {"label": "TimerType", "type": "u8", "notes": "1 for Mother Brain, 2 for Mecha Ridley, 0 otherwise"}, "notes": "Checks which escape timer should be activated"}, {"label": "CheckTimerShouldStop", "addr": {"U": "539A8", "E": "53A74", "J": "539A8"}, "size": "38", "mode": "thumb", "params": null, "return": {"label": "TimerShouldStop", "type": "bool", "notes": "Timer should stop"}, "notes": "Checks if samus has finished the escape"}, {"label": "UpdateEscapeTimerOam", "addr": {"U": "539E0", "E": "53AAC", "J": "539E0"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Updates the OAM of the escape timer"}, {"label": "StartTimedEscape", "addr": {"U": "53A48", "E": "53B14", "J": "53A48"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Starts an escape"}, {"label": "SetTimerDigits", "addr": {"U": "53AA8", "E": "53B74", "J": "53AA8"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Sets the timer depending on the escape and the difficulty"}, {"label": "UpdateEscapeTimer", "addr": {"U": "53B64", "E": "53C30", "J": "53B64"}, "size": "104", "mode": "thumb", "params": null, "return": null, "notes": "Updates the escape timer"}, {"label": "LoadCommonSpriteGfx", "addr": {"U": "53C68", "E": "53D34", "J": "53C68"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Loads the common sprites GFX (32BAC8)"}, {"label": "ResetRefillAnimations", "addr": {"U": "53C8C", "E": "53D58", "J": "53C8C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Sets all the refill animations to 0"}, {"label": "ResetHudDigitsAnimation", "addr": {"U": "53CB0", "E": "53D7C", "J": "53CB0"}, "size": "120", "mode": "thumb", "params": null, "return": null, "notes": "Resets all the info related to the HUD and the particles if necessary"}, {"label": "CheckParticleEffectOnScreen", "addr": {"U": "53DD0", "E": "53E9C", "J": "53DD0"}, "size": "98", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Checks if the particle effect in r0 is on screen"}, {"label": "DrawParticleEffect", "addr": {"U": "53E68", "E": "53F34", "J": "53E68"}, "size": "170", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Draw the particle effect in r0"}, {"label": "ProcessParticleEffects", "addr": {"U": "53FD8", "E": "540A4", "J": "53FD8"}, "size": "114", "mode": "thumb", "params": null, "return": null, "notes": "Calls the subroutines and draws all the particle effects"}, {"label": "SetParticleEffect", "addr": {"U": "540EC", "E": "541B8", "J": "540EC"}, "size": "A0", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "EffectNum", "type": "u8", "enum": "ParticleEffect", "notes": "Effect number"}], "return": null, "notes": "Sets a new particle effect"}, {"label": "UpdateParticleEffectAnimation", "addr": {"U": "5418C", "E": "54258", "J": "5418C"}, "size": "50", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}, {"label": "OamPtr", "type": "Oam *", "notes": "OAM pointer"}], "return": {"label": "AnimationEnded", "type": "bool", "notes": "Animation ended"}, "notes": "Updates the animation of the particle effect in r0"}, {"label": "SetCurrParticleEffectOamFramePtr", "addr": {"U": "541DC", "E": "542A8", "J": "541DC"}, "size": "14", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}, {"label": "OamPtr", "type": "Oam *", "notes": "OAM pointer"}], "return": null, "notes": "Sets the current particle effect OAM frame pointer"}, {"label": "ParticleSpriteSplashWaterSmall", "addr": {"U": "541F0", "E": "542BC", "J": "541F0"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash water small subroutine"}, {"label": "ParticleSpriteSplashWaterBig", "addr": {"U": "54234", "E": "54300", "J": "54234"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash water big subroutine"}, {"label": "ParticleSpriteSplashWaterHuge", "addr": {"U": "54278", "E": "54344", "J": "54278"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash water huge subroutine"}, {"label": "ParticleSpriteSplashLavaSmall", "addr": {"U": "542BC", "E": "54388", "J": "542BC"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash lava small subroutine"}, {"label": "ParticleSpriteSplashLavaBig", "addr": {"U": "54300", "E": "543CC", "J": "54300"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash lava big subroutine"}, {"label": "ParticleSpriteSplashLavaHuge", "addr": {"U": "54344", "E": "54410", "J": "54344"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash lava huge subroutine"}, {"label": "ParticleSpriteSplashAcidSmall", "addr": {"U": "54388", "E": "54454", "J": "54388"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash acid small subroutine"}, {"label": "ParticleSpriteSplashAcidBig", "addr": {"U": "543CC", "E": "54498", "J": "543CC"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash acid big subroutine"}, {"label": "ParticleParticleSpriteSplashAcidHuge", "addr": {"U": "54410", "E": "544DC", "J": "54410"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite splash acid huge subroutine"}, {"label": "ParticleShootingBeamLeft", "addr": {"U": "54454", "E": "54520", "J": "54454"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam left subroutine"}, {"label": "ParticleShootingBeamRight", "addr": {"U": "5448C", "E": "54558", "J": "5448C"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam right subroutine"}, {"label": "ParticleShootingBeamDiagonallyUpLeft", "addr": {"U": "544C4", "E": "54590", "J": "544C4"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam diagonally up left subroutine"}, {"label": "ParticleShootingBeamDiagonallyUpRight", "addr": {"U": "544FC", "E": "545C8", "J": "544FC"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam diagonally up right subroutine"}, {"label": "ParticleShootingBeamDiagonallyDownLeft", "addr": {"U": "54534", "E": "54600", "J": "54534"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam diagonally down left subroutine"}, {"label": "ParticleShootingBeamDiagonallyDownRight", "addr": {"U": "5456C", "E": "54638", "J": "5456C"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam diagonally down right subroutine"}, {"label": "ParticleShootingBeamUpLeft", "addr": {"U": "545A4", "E": "54670", "J": "545A4"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam up left subroutine"}, {"label": "ParticleShootingBeamUpRight", "addr": {"U": "545DC", "E": "546A8", "J": "545DC"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam up right subroutine"}, {"label": "ParticleShootingBeamDownLeft", "addr": {"U": "54614", "E": "546E0", "J": "54614"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam down left subroutine"}, {"label": "ParticleShootingBeamDownRight", "addr": {"U": "5464C", "E": "54718", "J": "5464C"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shooting beam down right subroutine"}, {"label": "ParticleBomb", "addr": {"U": "54684", "E": "54750", "J": "54684"}, "size": "44", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Bomb subroutine"}, {"label": "ParticleMissileTrail", "addr": {"U": "546C8", "E": "54794", "J": "546C8"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Missile trail subroutine"}, {"label": "ParticleSuperMissileTrail", "addr": {"U": "54700", "E": "547CC", "J": "54700"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Super missile trail subroutine"}, {"label": "ParticleBeamTrailingRight", "addr": {"U": "54738", "E": "54804", "J": "54738"}, "size": "48", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Beam trailing right subroutine"}, {"label": "ParticleBeamTrailingLeft", "addr": {"U": "54780", "E": "5484C", "J": "54780"}, "size": "48", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Beam trailing left subroutine"}, {"label": "ParticleChargedLongBeamTrail", "addr": {"U": "547C8", "E": "54894", "J": "547C8"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Charged long beam trail subroutine"}, {"label": "ParticleChargedIceBeamTrail", "addr": {"U": "547FC", "E": "548C8", "J": "547FC"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Charged ice beam trail subroutine"}, {"label": "ParticleChargedWaveBeamTrail", "addr": {"U": "54830", "E": "548FC", "J": "54830"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Charged wave beam trail subroutine"}, {"label": "ParticleChargedPlasmaBeamTrail", "addr": {"U": "54864", "E": "54930", "J": "54864"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Charged plasma beam trail subroutine"}, {"label": "ParticleChargedFullBeamTrail", "addr": {"U": "54898", "E": "54964", "J": "54898"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Charged full beam trail subroutine"}, {"label": "ParticleChargedPistolTrail", "addr": {"U": "548CC", "E": "54998", "J": "548CC"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Charged pistol trail subroutine"}, {"label": "ParticleSpriteExplosionHuge", "addr": {"U": "54900", "E": "549CC", "J": "54900"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite explosion huge subroutine"}, {"label": "ParticleSpriteExplosionSmall", "addr": {"U": "54938", "E": "54A04", "J": "54938"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite explosion small subroutine"}, {"label": "ParticleSpriteExplosionMedium", "addr": {"U": "54970", "E": "54A3C", "J": "54970"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite explosion medium subroutine"}, {"label": "ParticleSpriteExplosionBig", "addr": {"U": "549A8", "E": "54A74", "J": "549A8"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite explosion big subroutine"}, {"label": "ParticleSpriteExplosionSingleThenBig", "addr": {"U": "549E0", "E": "54AAC", "J": "549E0"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sprite explosion single then big subroutine"}, {"label": "ParticleScrewAttackDestroyed", "addr": {"U": "54A18", "E": "54AE4", "J": "54A18"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Screw attack destroyed subroutine"}, {"label": "ParticleShinesparkDestroyed", "addr": {"U": "54A50", "E": "54B1C", "J": "54A50"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Shinespark destroyed subroutine"}, {"label": "ParticleSudoScrewDestroyed", "addr": {"U": "54A88", "E": "54B54", "J": "54A88"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Sudo screw destroyed subroutine"}, {"label": "ParticleSpeedboosterDestroyed", "addr": {"U": "54AC0", "E": "54B8C", "J": "54AC0"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Speedbooster destroyed subroutine"}, {"label": "ParticleMainBossDeath", "addr": {"U": "54AF8", "E": "54BC4", "J": "54AF8"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Main boss death subroutine"}, {"label": "ParticleFreezingSpriteWithIce", "addr": {"U": "54B30", "E": "54BFC", "J": "54B30"}, "size": "40", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Freezing sprite with ice subroutine"}, {"label": "ParticleFreezingSpriteWithChargedIce", "addr": {"U": "54B70", "E": "54C3C", "J": "54B70"}, "size": "40", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Freezing sprite with charged ice subroutine"}, {"label": "ParticleHittingSomethingWithBaseBeam", "addr": {"U": "54BB0", "E": "54C7C", "J": "54BB0"}, "size": "3C", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with base beam or charged base beam subroutine"}, {"label": "ParticleHittingSomethingWithLongBeam", "addr": {"U": "54BEC", "E": "54CB8", "J": "54BEC"}, "size": "40", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with long beam or charged long beam subroutine"}, {"label": "ParticleHittingSomethingWithIceBeam", "addr": {"U": "54C2C", "E": "54CF8", "J": "54C2C"}, "size": "3C", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with ice beam subroutine"}, {"label": "ParticleHittingSomethingWithWaveBeam", "addr": {"U": "54C68", "E": "54D34", "J": "54C68"}, "size": "40", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with wave beam subroutine"}, {"label": "ParticleHittingSomethingWithFullBeamNoPlasma", "addr": {"U": "54CA8", "E": "54D74", "J": "54CA8"}, "size": "3C", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with full beam no plasma subroutine"}, {"label": "ParticleHittingSomethingWithPlasmaBeam", "addr": {"U": "54CE4", "E": "54DB0", "J": "54CE4"}, "size": "3C", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with plasma beam subroutine"}, {"label": "ParticleHittingSomethingWithFullBeam", "addr": {"U": "54D20", "E": "54DEC", "J": "54D20"}, "size": "3C", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with full beam subroutine"}, {"label": "ParticleHittingSomethingInvicible", "addr": {"U": "54D5C", "E": "54E28", "J": "54D5C"}, "size": "40", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something invicible subroutine"}, {"label": "ParticleHittingSomethingWithMissile", "addr": {"U": "54D9C", "E": "54E68", "J": "54D9C"}, "size": "40", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with missile subroutine"}, {"label": "ParticleHittingSomethingWithSuperMissile", "addr": {"U": "54DDC", "E": "54EA8", "J": "54DDC"}, "size": "50", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Hitting something with super missile subroutine"}, {"label": "ParticleSmallDust", "addr": {"U": "54E2C", "E": "54EF8", "J": "54E2C"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Small dust subroutine"}, {"label": "ParticleMediumDust", "addr": {"U": "54E60", "E": "54F2C", "J": "54E60"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Medium dust subroutine"}, {"label": "ParticleTwoMediumDust", "addr": {"U": "54E94", "E": "54F60", "J": "54E94"}, "size": "34", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Two medium dust subroutine"}, {"label": "ParticleSecondSmallDust", "addr": {"U": "54EC8", "E": "54F94", "J": "54EC8"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Second Small dust subroutine"}, {"label": "ParticleSecondMediumDust", "addr": {"U": "54F00", "E": "54FCC", "J": "54F00"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Second medium dust subroutine"}, {"label": "ParticleSecondTwoMediumDust", "addr": {"U": "54F38", "E": "55004", "J": "54F38"}, "size": "38", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle effect Second two medium dust subroutine"}, {"label": "PlayBeginToChargeBeamSound", "addr": {"U": "54F70", "E": "5503C", "J": "54F70"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound depending on the beams activated when beginning to charge a beam"}, {"label": "PlayShootingChargedBeamSound", "addr": {"U": "54FF8", "E": "550C4", "J": "54FF8"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound depending on the beams activated when shooting a charged beam"}, {"label": "PlayBeamFullyChargedSound", "addr": {"U": "55080", "E": "5514C", "J": "55080"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound depending on the beams activated when charging a fully charged beam"}, {"label": "ParticleChargingBeam", "addr": {"U": "55108", "E": "551D4", "J": "55108"}, "size": "100", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle Charging beam subroutine"}, {"label": "ParticleEscape", "addr": {"U": "55208", "E": "552D4", "J": "55208"}, "size": "A8", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle Escape subroutine"}, {"label": "ParticleSamusReflection", "addr": {"U": "552B0", "E": "5537C", "J": "552B0"}, "size": "94", "mode": "thumb", "params": [{"label": "ParticleEffectPtr", "type": "ParticleEffect *", "notes": "Particle effect pointer"}], "return": null, "notes": "Particle Samus relfection subroutine"}, {"label": "StartVerticalScreenShake", "addr": {"U": "55344", "E": "55410", "J": "55344"}, "size": "34", "mode": "thumb", "params": [{"label": "Duration", "type": "u8"}, {"label": "param_1", "type": "u8"}], "return": null, "notes": "Starts a vertical screen shake"}, {"label": "StartHorizontalScreenShake", "addr": {"U": "55378", "E": "55444", "J": "55378"}, "size": "34", "mode": "thumb", "params": [{"label": "Duration", "type": "u8"}, {"label": "param_1", "type": "u8"}], "return": {"label": "Timer", "type": "u8", "notes": "Timer?"}, "notes": "Starts an horizontal screen shake"}, {"label": "StartHorizontalScreenShake_Unused", "addr": {"U": "553AC", "E": "55478", "J": "553AC"}, "size": "30", "mode": "thumb", "params": [{"label": "Duration", "type": "u8"}], "return": {"label": "Timer", "type": "u8"}, "notes": "Starts an horizontal screen shake, unused"}, {"label": "UpdateVerticalScreenShake", "addr": {"U": "553DC", "E": "554A8", "J": "553DC"}, "size": "68", "mode": "thumb", "params": null, "return": {"label": "YPositionOffset", "type": "u8", "notes": "Y position offset"}, "notes": "Updates the vertical screen shake and returns the Y position offset for the backgrounds"}, {"label": "UpdateHorizontalScreenShake", "addr": {"U": "55444", "E": "55510", "J": "55444"}, "size": "68", "mode": "thumb", "params": null, "return": {"label": "XPositionOffset", "type": "u8", "notes": "X position offset"}, "notes": "Updates the horizontal screen shake and returns the X position offset for the backgrounds"}, {"label": "SetTransparencyAndBGEffects", "addr": {"U": "554AC", "E": "55578", "J": "554AC"}, "size": "54C", "mode": "thumb", "params": null, "return": null, "notes": "Sets the room transparency and the backgrounds effects"}, {"label": "GetBGSizeFlag", "addr": {"U": "559F8", "E": "55AC4", "J": "559F8"}, "size": "2C", "mode": "thumb", "params": [{"label": "BGSize", "type": "u8", "notes": "Background size"}], "return": {"label": "SizeFlag", "type": "u8", "notes": "Size flag"}, "notes": "Returns the corresponding size flag for the BGCNT registers"}, {"label": "CheckRoomIsDark", "addr": {"U": "55A24", "E": "55AF0", "J": "55A24"}, "size": "1C", "mode": "thumb", "params": null, "return": {"label": "IsDark", "type": "u16", "notes": "0xFFFF if room is dark, 0 otherwise"}, "notes": "Checks if BG0 is dark"}, {"label": "UpdateBLDCNT", "addr": {"U": "55A40", "E": "55B0C", "J": "55A40"}, "size": "9C", "mode": "thumb", "params": [{"label": "Action", "type": "u8"}, {"label": "BldcntValue", "type": "u16", "notes": "BLDCNT Value"}], "return": null, "notes": "Updates the BLDCNT register value with r1 immediatly"}, {"label": "UpdateBLDALPHA", "addr": {"U": "55BD0", "E": "55C9C", "J": "55BD0"}, "size": "54", "mode": "thumb", "params": [{"label": "EvaCoefficient", "type": "u8", "notes": "EVA coefficient"}, {"label": "EvbCoefficient", "type": "u8", "notes": "EVB coefficient"}, {"label": "param_2", "type": "u8"}, {"label": "FadingRelated", "type": "u8", "notes": "Fading related"}], "return": null, "notes": "Queries a BLDALPHA update"}, {"label": "ApplyNewTransparencyEffects", "addr": {"U": "55C24", "E": "55CF0", "J": "55C24"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Applies the new transparency effects (BLDALPHA and BLDCNT?)"}, {"label": "ApplyNewBLDALPHA", "addr": {"U": "55CDC", "E": "55DA8", "J": "55CDC"}, "size": "D8", "mode": "thumb", "params": [{"label": "BldalphaRelatedStructPtr", "type": "u8 *", "notes": "BLDALPHA related struct pointer?"}], "return": null, "notes": "Applies the new BLDALPHA transparency values"}, {"label": "LoadRoom", "addr": {"U": "55F7C", "E": "56048", "J": "55F7C"}, "size": "26C", "mode": "thumb", "params": null, "return": null, "notes": "Loads the current room"}, {"label": "LoadTileset", "addr": {"U": "561E8", "E": "562B4", "J": "561E8"}, "size": "21C", "mode": "thumb", "params": null, "return": null, "notes": "Loads the current tileset"}, {"label": "LoadRoomEntry", "addr": {"U": "56404", "E": "564D0", "J": "56404"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Loads the current room entry"}, {"label": "LoadRoomBackgrounds", "addr": {"U": "5656C", "E": "56638", "J": "5656C"}, "size": "158", "mode": "thumb", "params": null, "return": null, "notes": "Loads the current room backgrounds"}, {"label": "RemoveNeverReformBlocksTanks", "addr": {"U": "566C4", "E": "56790", "J": "566C4"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Calls RemoveNeverReformBlocks and RemoveCollectedTanks"}, {"label": "ResetRoomInfoOnTransition", "addr": {"U": "566D4", "E": "567A0", "J": "566D4"}, "size": "3F4", "mode": "thumb", "params": null, "return": null, "notes": "Resets all the room related info when a transition happens"}, {"label": "SetAutomaticBGMovement", "addr": {"U": "56AC8", "E": "56B94", "J": "56AC8"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Sets the BG0 and BG3 scrolling depending on the room effect/background 3 scrolling method"}, {"label": "RleDecompress", "addr": {"U": "56D18", "E": "56DE4", "J": "56D18"}, "size": "110", "mode": "thumb", "params": [{"label": "DataType", "type": "u8", "notes": "Data type (0 = tilemap, 1 = BG)"}, {"label": "SourceAddress", "type": "u8 *", "notes": "Source address"}, {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}], "return": {"label": "Always0", "type": "bool", "notes": "Always 0 (probably an error flag)"}, "notes": "RLE decompression algorithm"}, {"label": "UpdateRoomInfo", "addr": {"U": "56FD0", "E": "57098", "J": "56FD0"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Calls different functions related to updating room info"}, {"label": "UpdateBGPositions", "addr": {"U": "570AC", "E": "57174", "J": "570AC"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Updates the positions of all the backgrounds, checks for position offsets of screenshakes"}, {"label": "CheckDMA3Ended", "addr": {"U": "5743C", "E": "57504", "J": "5743C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the DMA operation on the third channel has ended (probably unused)"}, {"label": "ProcessPowerBombExplosion", "addr": {"U": "5745C", "E": "57524", "J": "5745C"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Power bomb explosion subroutine"}, {"label": "PowerBombExplosion", "addr": {"U": "574A4", "E": "5756C", "J": "574A4"}, "size": "248", "mode": "thumb", "params": null, "return": null, "notes": "Handles the power bomb explosion"}, {"label": "StartPowerBombExplosion", "addr": {"U": "576EC", "E": "577B4", "J": "576EC"}, "size": "48", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "param_2", "type": "u8"}], "return": null, "notes": "Starts a power bomb explosion at r0 and r1"}, {"label": "SetCurrPowerBomb0x12To0", "addr": {"U": "57734", "E": "577FC", "J": "57734"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Sets Current Power Bomb + 0x12 to 0"}, {"label": "PowerBombExplosionBegin", "addr": {"U": "57740", "E": "57808", "J": "57740"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Called before the explosion begins, initialize default values"}, {"label": "PowerBombExplosionEnd", "addr": {"U": "577B8", "E": "57880", "J": "577B8"}, "size": "154", "mode": "thumb", "params": null, "return": null, "notes": "Called multiple times at the end of the explosion, does some works on the IO registers"}, {"label": "UpdateGadoraHatch", "addr": {"U": "5790C", "E": "579D4", "J": "5790C"}, "size": "AC", "mode": "thumb", "params": [{"label": "XPosition", "type": "u16", "notes": "X Position"}, {"label": "YPosition", "type": "u16", "notes": "Y Position"}, {"label": "Action", "type": "u8", "notes": "Action (0 = close, 1 = open)"}], "return": null, "notes": "Activates/deactivates the hatch for the gadora"}, {"label": "UpdateInGameTimer", "addr": {"U": "579B8", "E": "57A80", "J": "579B8"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the in game timer and sets the max in game time flag"}, {"label": "UpdateDISPCNT", "addr": {"U": "57BD8", "E": "57CA0", "J": "57BD8"}, "size": "74", "mode": "thumb", "params": [{"label": "Operation", "type": "u8", "notes": "Operation (0 = remove, 1 = add)"}, {"label": "Value", "type": "u16"}], "return": null, "notes": "Updates the DISPCNT register value with r1"}, {"label": "LoadExplodingRoomDuringZebesEscape", "addr": {"U": "57D04", "E": "57DCC", "J": "57D04"}, "size": "C8", "mode": "thumb", "params": [{"label": "AreaId", "type": "u8", "enum": "AreaID", "notes": "Area ID"}, {"label": "RoomId1", "type": "u8", "notes": "Room ID + 1"}, {"label": "BGXPosition", "type": "u16", "notes": "Background X position"}, {"label": "BGYPosition", "type": "u16", "notes": "Background Y position"}], "return": null, "notes": "Loads a room for the tourian escape cutscene"}, {"label": "SetupClipdataCode", "addr": {"U": "57DCC", "E": "57E94", "J": "57DCC"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Copies to clipdata code to non gameplay RAM"}, {"label": "CheckHazardAtPosition", "addr": {"U": "58080", "E": "58148", "J": "58080"}, "size": "40", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": {"label": "HazardType", "type": "u8", "enum": "HazardType", "notes": "Hazard type"}, "notes": "Checks for the current affecting clipdata at the position in r0 and r1"}, {"label": "CheckCurrentAffectingHazardAndVerySpecialClipdata", "addr": {"U": "580C0", "E": "58188", "J": "580C0"}, "size": "DC", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "BlockYPosition", "type": "u16", "notes": "Block Y position"}, {"label": "BlockXPosition", "type": "u16", "notes": "Block X position"}, {"label": "param_3", "type": "u8"}], "return": {"label": "HazardType", "type": "u8", "enum": "HazardType", "notes": "Hazard type"}, "notes": "Sets the current affecting hazard and returns it"}, {"label": "CheckCanUseElevator", "addr": {"U": "5819C", "E": "58264", "J": "5819C"}, "size": "C4", "mode": "thumb", "params": null, "return": {"label": "CannotBeUsed", "type": "bool", "notes": "Cannot be used"}, "notes": "Checks if samus can use the elevator"}, {"label": "CheckGroundTypeUnderSamus", "addr": {"U": "58260", "E": "58328", "J": "58260"}, "size": "64", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": {"label": "GroundType", "type": "u8", "enum": "GroundTypeUnderSamus", "notes": "Ground type"}, "notes": "Checks for a ground effect clipdata"}, {"label": "ProcessScrolls", "addr": {"U": "582C4", "E": "5838C", "J": "582C4"}, "size": "64", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer"}], "return": null, "notes": "Processes the 2 current scrolls if within, calls UpdateCurrentScrolls and ScrollScreen"}, {"label": "ScrollScreen", "addr": {"U": "58328", "E": "583F0", "J": "58328"}, "size": "BC", "mode": "thumb", "params": [{"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}], "return": null, "notes": "Scrolls the screen"}, {"label": "ProcessScrollX", "addr": {"U": "583E4", "E": "584AC", "J": "583E4"}, "size": "40", "mode": "thumb", "params": [{"label": "ActiveScrollPtr", "type": "ActiveScroll *", "notes": "Active scroll pointer"}, {"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer"}], "return": {"label": "ScreenXPosition", "type": "u16", "notes": "Screen X position"}, "notes": "Processes the X part of the scroll in r0"}, {"label": "ProcessScrollY", "addr": {"U": "58424", "E": "584EC", "J": "58424"}, "size": "54", "mode": "thumb", "params": [{"label": "ActiveScrollPtr", "type": "ActiveScroll *", "notes": "Active scroll pointer"}, {"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer"}], "return": {"label": "ScreenYPosition", "type": "u16", "notes": "Screen Y position"}, "notes": "Processes the Y part of the scroll in r0"}, {"label": "LoadRoomScrolls", "addr": {"U": "58478", "E": "58540", "J": "58478"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Loads the scrolls of the current room"}, {"label": "UpdateCurrScrolls", "addr": {"U": "584D8", "E": "585A0", "J": "584D8"}, "size": "168", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer"}], "return": null, "notes": "Updates the 2 current scrolls, also checks for extended bounds (when taking an elevator and when triggered by a breakable block)"}, {"label": "ProcessGeneralScrolling", "addr": {"U": "58640", "E": "58708", "J": "58640"}, "size": "1F4", "mode": "thumb", "params": null, "return": null, "notes": "Processes scrolling in general (automatic, slow, scrolls, lock screen)"}, {"label": "DefaultScroll", "addr": {"U": "58834", "E": "588FC", "J": "58834"}, "size": "14", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer"}], "return": null, "notes": "Handles the automatic scrolling on a room with no scrolls"}, {"label": "DefaultScrollY", "addr": {"U": "58848", "E": "58910", "J": "58848"}, "size": "100", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer"}], "return": null, "notes": "Handles the automatic Y scrolling on a room with no scrolls"}, {"label": "DefaultScrollX", "addr": {"U": "58948", "E": "58A10", "J": "58948"}, "size": "D0", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer"}], "return": null, "notes": "Handles the automatic X scrolling on a room with no scrolls"}, {"label": "UpdateRoomEffectAndHazePosition", "addr": {"U": "58A18", "E": "58AE0", "J": "58A18"}, "size": "2A8", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer"}], "return": null, "notes": "Updates the haze and effect position"}, {"label": "HandleMovingBG0", "addr": {"U": "58CC0", "E": "58D88", "J": "58CC0"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the automatic scrolling of the background 0"}, {"label": "GetBG3ScrollingValues", "addr": {"U": "58D20", "E": "58DE8", "J": "58D20"}, "size": "80", "mode": "thumb", "params": null, "return": {"label": "XYScrollingValue", "type": "u8", "notes": "X/Y scrolling value"}, "notes": "Gets the X/Y scrolling values of the background 3 depending on the current room entry BG3 scrolling"}, {"label": "ScrollBG3", "addr": {"U": "58DA0", "E": "58E68", "J": "58DA0"}, "size": "124", "mode": "thumb", "params": null, "return": null, "notes": "Scrolls the background 3"}, {"label": "HandleMovingBG3", "addr": {"U": "58F14", "E": "58FDC", "J": "58F14"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the automatic scrolling of the background 3"}, {"label": "ScrollBG2", "addr": {"U": "58F40", "E": "59008", "J": "58F40"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Scrolls the background 2"}, {"label": "DestroyNonReformBlocks", "addr": {"U": "592C4", "E": "5938C", "J": "592C4"}, "size": "6C", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer?"}], "return": {"label": "ValidBlock", "type": "bool", "notes": "Valid block?"}, "notes": "Handles the destruction of non-reform blocks"}, {"label": "BombChainBlockRelated", "addr": {"U": "59330", "E": "593F8", "J": "59330"}, "size": "3C", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer?"}], "return": {"label": "Always1", "type": "bool", "notes": "Always 1"}, "notes": "Handles the destruction of a single block in a bomb chain"}, {"label": "DestroySingleBreakableBlock", "addr": {"U": "5936C", "E": "59434", "J": "5936C"}, "size": "3C", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer?"}], "return": {"label": "Always1", "type": "bool", "notes": "Always 1"}, "notes": "Handles the destruction of a single block"}, {"label": "Destroy2x2Block", "addr": {"U": "593A8", "E": "59470", "J": "593A8"}, "size": "D8", "mode": "thumb", "params": [{"label": "CoordinatesPtr", "type": "u8 *", "notes": "Coordinates pointer?"}], "return": {"label": "Always1", "type": "bool", "notes": "Always 1"}, "notes": "Handles the destruction of a 2x2 block"}, {"label": "RemoveNeverReformBlocks", "addr": {"U": "59500", "E": "595C8", "J": "59500"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Removes the never reform blocks when loading a room"}, {"label": "RemoveNeverReformBlockInClipdataBG", "addr": {"U": "59580", "E": "59648", "J": "59580"}, "size": "64", "mode": "thumb", "params": [{"label": "XPosition", "type": "u8", "notes": "X position"}, {"label": "YPosition", "type": "u8", "notes": "Y position"}], "return": null, "notes": "Removes the never reform block from the clipdata/background"}, {"label": "CheckRevealOrDestroyNonBombBlock", "addr": {"U": "59770", "E": "59838", "J": "59770"}, "size": "84", "mode": "thumb", "params": [{"label": "RevealableBlockDataPtr", "type": "RevealableBlockData *", "notes": "Revealable block data pointer"}], "return": {"label": "ShouldDestroyBlock", "type": "bool", "notes": "Should destroy block"}, "notes": "Checks if a non bomb block should reveal itself"}, {"label": "CheckRevealOrDestroyBombBlock", "addr": {"U": "597F4", "E": "598BC", "J": "597F4"}, "size": "88", "mode": "thumb", "params": [{"label": "RevealableBlockDataPtr", "type": "RevealableBlockData *", "notes": "Revealable block data pointer"}], "return": {"label": "ShouldDestroyBlock", "type": "bool", "notes": "Should destroy block"}, "notes": "Checks if a bomb block should reveal itself"}, {"label": "ApplyCurrClipdataAffectingAction", "addr": {"U": "5987C", "E": "59944", "J": "5987C"}, "size": "164", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "ClipdataBlockValue", "type": "u16", "notes": "Clipdata block value"}], "return": {"label": "Unused", "type": "u32", "notes": "Unused?"}, "notes": "Applies the current clipdata affecting action"}, {"label": "SamusApplyScrewSpeedDamageToEnvironment", "addr": {"U": "59A9C", "E": "59B64", "J": "59A9C"}, "size": "B8", "mode": "thumb", "params": [{"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "DestructingAction", "type": "u16", "notes": "Destructing action (0 = none, 1 = speedbooster, 2 = screw attack, 3 = both)"}], "return": {"label": "ClipdataValue", "type": "u16", "notes": "Clipdata value?"}, "notes": "Applies the speedbooster/screw attack destructing action (return value can be garbage from caller)"}, {"label": "UpdateBrokenReformBlocks", "addr": {"U": "59B54", "E": "59C1C", "J": "59B54"}, "size": "120", "mode": "thumb", "params": null, "return": null, "notes": "Updates the broken blocks"}, {"label": "BreakingOrReformingBlockAnimation", "addr": {"U": "59C74", "E": "59D3C", "J": "59C74"}, "size": "134", "mode": "thumb", "params": [{"label": "BreakingOrReformingBlockPtr", "type": "BreakingOrReformingBlock *", "notes": "Broken reform block pointer"}], "return": null, "notes": "Handles the animation of a block breaking/reforming"}, {"label": "StoreBrokenReformBlock", "addr": {"U": "59DA8", "E": "59E70", "J": "59DA8"}, "size": "AC", "mode": "thumb", "params": [{"label": "BlockType", "type": "u8", "notes": "Block type"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "param_3", "type": "u8"}], "return": {"label": "Stored", "type": "bool"}, "notes": "Stores in RAM a new broken reform block"}, {"label": "StoreBrokenNonReformBlock", "addr": {"U": "59E54", "E": "59F1C", "J": "59E54"}, "size": "A4", "mode": "thumb", "params": [{"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "BlockType", "type": "u8", "notes": "Block type"}], "return": null, "notes": "Stores a broken non reform block in RAM"}, {"label": "CheckSamusInReformingBlock", "addr": {"U": "59F70", "E": "5A038", "J": "59F70"}, "size": "70", "mode": "thumb", "params": [{"label": "BlockXPosition", "type": "u8", "notes": "Block X position"}, {"label": "BlockYPosition", "type": "u8", "notes": "Block Y position"}], "return": {"label": "InBlock", "type": "bool", "notes": "In block"}, "notes": "Checks if samus is in the reforming block at r0 and r1"}, {"label": "StartBombChain", "addr": {"U": "59FE0", "E": "5A0A8", "J": "59FE0"}, "size": "B8", "mode": "thumb", "params": [{"label": "BombChainType", "type": "u8", "enum": "BombChainType", "notes": "Bomb chain type"}, {"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}], "return": {"label": "ChainStarted", "type": "bool", "notes": "Chain started"}, "notes": "Starts a bomb chain"}, {"label": "ProcessBombChains", "addr": {"U": "5A098", "E": "5A160", "J": "5A098"}, "size": "298", "mode": "thumb", "params": null, "return": null, "notes": "Processes the current bomb chains"}, {"label": "CheckStartNewSubBombChain", "addr": {"U": "5A330", "E": "5A3F8", "J": "5A330"}, "size": "B0", "mode": "thumb", "params": [{"label": "Direction", "type": "u8", "notes": "Direction (0 = up, 1 = down, 2 = left, 3 = right)"}, {"label": "XPosition", "type": "u8", "notes": "X position"}, {"label": "YPosition", "type": "u8", "notes": "Y position"}], "return": null, "notes": "Checks if a new sub bomb chain should start"}, {"label": "MotherBrainUpdateGlass", "addr": {"U": "5A484", "E": "5A54C", "J": "5A484"}, "size": "D8", "mode": "thumb", "params": [{"label": "Always0", "type": "u8", "notes": "Always 0?"}, {"label": "param_1", "type": "u16"}, {"label": "param_2", "type": "u16"}, {"label": "param_3", "type": "u16"}], "return": null, "notes": "Updates the GFX for the mother brain glass"}, {"label": "SetBG1BlockValue", "addr": {"U": "5A55C", "E": "5A624", "J": "5A55C"}, "size": "CC", "mode": "thumb", "params": [{"label": "Value", "type": "u16"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Sets the value for a BG1 block"}, {"label": "SetRawBG1BlockValue", "addr": {"U": "5A628", "E": "5A6F0", "J": "5A628"}, "size": "24", "mode": "thumb", "params": [{"label": "Value", "type": "u16"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Sets the value for a BG1 block (does not update tilemap nor VRAM)"}, {"label": "SetClipdataBlockValue", "addr": {"U": "5A64C", "E": "5A714", "J": "5A64C"}, "size": "24", "mode": "thumb", "params": [{"label": "Value", "type": "u16"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": null, "notes": "Sets the value for a clipdata block"}, {"label": "CheckSamusTouchingCodeTriggeringClipdata", "addr": {"U": "5A670", "E": "5A738", "J": "5A670"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Calls CheckTouchingTransitionOrTank, checks for transparency changes, calls CheckWalkingOnCrumbleBlock and CheckGrabbingCrumbleBlock"}, {"label": "ApplyClipdataChangingTransparency", "addr": {"U": "5A6C8", "E": "5A790", "J": "5A6C8"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Applies the clipdata behavior that changes transparency"}, {"label": "CheckClipBehaviorValueChangesBLDALPHA", "addr": {"U": "5A770", "E": "5A838", "J": "5A770"}, "size": "30", "mode": "thumb", "params": [{"label": "ClipdataBehaviorValue", "type": "u16", "enum": "ClipdataBehaviorType", "notes": "Clipdata behavior value"}], "return": {"label": "Bldalpha", "type": "u16", "notes": "BLDALPHA"}, "notes": "Checks for a BLDALPHA change"}, {"label": "CheckSamusOnCrumbleBlock", "addr": {"U": "5A7A0", "E": "5A868", "J": "5A7A0"}, "size": "108", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is walking on a crumble block (also checks for slow ones)"}, {"label": "CheckTouchingTransitionOnElevator", "addr": {"U": "5A8A8", "E": "5A970", "J": "5A8A8"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is touching a transition when taking an elevator"}, {"label": "CheckTouchingTransitionOrTank", "addr": {"U": "5A96C", "E": "5AA34", "J": "5A96C"}, "size": "420", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is touching a transition or a tank"}, {"label": "FinishCollectingTank", "addr": {"U": "5AD8C", "E": "5AE54", "J": "5AD8C"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of collecting a tank"}, {"label": "FinishCollectedAbility", "addr": {"U": "5ADEC", "E": "5AEB4", "J": "5ADEC"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of collecting an ability"}, {"label": "CheckGrabbingCrumbleBlock", "addr": {"U": "5AE1C", "E": "5AEE4", "J": "5AE1C"}, "size": "104", "mode": "thumb", "params": [{"label": "Always0", "type": "bool", "notes": "Always 0"}], "return": null, "notes": "Checks if samus is grabbing a crumble block (also checks for slow ones)"}, {"label": "CheckOpeningHatch", "addr": {"U": "5AF20", "E": "5AFE8", "J": "5AF20"}, "size": "180", "mode": "thumb", "params": [{"label": "XPositionBlocks", "type": "u16", "notes": "X position (blocks)"}, {"label": "YPositionBlocks", "type": "u16", "notes": "Y position (blocks)"}], "return": {"label": "DoorBehavior", "type": "u8", "notes": "Door behavior (0 = not opening, 1 = opening, 2 = locked)"}, "notes": "Checks if the hatch should open"}, {"label": "SetItemAsCollected", "addr": {"U": "5B0A0", "E": "5B168", "J": "5B0A0"}, "size": "74", "mode": "thumb", "params": [{"label": "XPosition", "type": "u16", "notes": "X position"}, {"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "ItemType", "type": "u8", "notes": "Item type"}], "return": null, "notes": "Sets an item as collected"}, {"label": "RemoveCollectedTanks", "addr": {"U": "5B114", "E": "5B1DC", "J": "5B114"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Removes the collected items when loading a room"}, {"label": "CallMotherBrainUpdateGlass", "addr": {"U": "5B1D8", "E": "5B2A0", "J": "5B1D8"}, "size": "74", "mode": "thumb", "params": [{"label": "Stage", "type": "u8"}], "return": null, "notes": "Calls MotherBrainUpdateGlass with the good parameters"}, {"label": "SetYellowTintForPowerBombExplosion", "addr": {"U": "5B584", "E": "5B64C", "J": "5B584"}, "size": "A0", "mode": "thumb", "params": [{"label": "param_0", "type": "u8"}], "return": null, "notes": "Handles the yellow tint when a power bomb explosion happens"}, {"label": "PlayCutscene", "addr": {"U": "5BFD4", "E": "5C09C", "J": "5BFD4"}, "size": "A0", "mode": "thumb", "params": [{"label": "CutsceneNum", "type": "u8", "enum": "Cutscene", "notes": "Cutscene number"}], "return": null, "notes": "Plays a cutscene"}, {"label": "StartSpecialBGFading", "addr": {"U": "5C074", "E": "5C13C", "J": "5C074"}, "size": "18", "mode": "thumb", "params": [{"label": "FadeType", "type": "u8", "enum": "SpecialBGFadeType", "notes": "Fade type"}], "return": null, "notes": "Starts a special background fading"}, {"label": "BG3OFSRelated", "addr": {"U": "5C158", "E": "5C220", "J": "5C158"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Changes the Which Background Position Is Written To BG30FS global variable"}, {"label": "ProcessSpecialFadingEffect", "addr": {"U": "5C460", "E": "5C528", "J": "5C460"}, "size": "60", "mode": "thumb", "params": null, "return": {"label": "unk", "type": "bool"}, "notes": "Processes the current special fading effect"}, {"label": "EscapeFailedFade", "addr": {"U": "5C77C", "E": "5C844", "J": "5C77C"}, "size": "98", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the escape failed fade"}, {"label": "BeforeChozodiaEscapeFade", "addr": {"U": "5C814", "E": "5C8DC", "J": "5C814"}, "size": "98", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Subroutine for the before chozodia escape fade"}, {"label": "BeforeTourianEscapeFade", "addr": {"U": "5C924", "E": "5C9EC", "J": "5C924"}, "size": "78", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the before tourian escape fade"}, {"label": "BeforeGettingFullyPoweredFade", "addr": {"U": "5C99C", "E": "5CA64", "J": "5C99C"}, "size": "BC", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the before getting fully powered fade"}, {"label": "BeforeRidleySpawnFade", "addr": {"U": "5CA58", "E": "5CB20", "J": "5CA58"}, "size": "80", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the before ridley spawn fade"}, {"label": "BeforeStatueOpeningFade", "addr": {"U": "5CAD8", "E": "5CBA0", "J": "5CAD8"}, "size": "A0", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the before statue opening fade"}, {"label": "BeforeIntroTextFade", "addr": {"U": "5CB78", "E": "5CC40", "J": "5CB78"}, "size": "A4", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the before intro text fade"}, {"label": "SetBGHazeEffect", "addr": {"U": "5CFE0", "E": "5D0A8", "J": "5CFE0"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Sets the background haze effect depending on the Haze Data table and the room effect"}, {"label": "SetupHazeCode", "addr": {"U": "5D118", "E": "5D1E0", "J": "5D118"}, "size": {"U": "2C0", "E": "2CC", "J": "2C0"}, "mode": "thumb", "params": [{"label": "HazeValue", "type": "u8", "enum": "HazeType", "notes": "Haze value"}], "return": null, "notes": "Tranfers a function to RAM depending on the current haze value"}, {"label": "ResetHazeLoops", "addr": {"U": "5D3D8", "E": "5D4AC", "J": "5D3D8"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Resets the haze loops"}, {"label": "ProcessHaze", "addr": {"U": "5D5BC", "E": "5D690", "J": "5D5BC"}, "size": "1AC", "mode": "thumb", "params": null, "return": {"label": "PowerBombEndedAndRoomHasHaze", "type": "bool", "notes": "Power bomb ended and room has haze"}, "notes": "Calls the Haze Process Code, if a power bomb ended and the room has a haze effect Set Background Haze Effect is called and the function returns 1"}, {"label": "HazeBG3", "addr": {"U": "5D768", "E": "5D83C", "J": "5D768"}, "size": "C0", "mode": "thumb", "params": null, "return": null, "notes": "Haze BG3 code"}, {"label": "HazeBG3StrongEffectWeakOutside", "addr": {"U": "5D828", "E": "5D8FC", "J": "5D828"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Haze BG3 (strong in effect, weak outside) code"}, {"label": "HazeBG3NoneEffectWeakOutside", "addr": {"U": "5D940", "E": "5DA14", "J": "5D940"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Haze BG3 (none in effect, weak outside) code"}, {"label": "HazeBG3BG2StrongEffectWeakOutsideMediumEverywhere", "addr": {"U": "5D9B0", "E": "5DA84", "J": "5D9B0"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Haze BG3/BG2 (Strong In Effect, Weak Outside For BG3 And Medium Everywhere For BG2) code"}, {"label": "HazePowerBombExpanding", "addr": {"U": "5DB2C", "E": "5DC00", "J": "5DB2C"}, "size": "118", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Haze Power Bomb Expanding code"}, {"label": "HazePowerBombRetracting", "addr": {"U": "5DC44", "E": "5DD18", "J": "5DC44"}, "size": "118", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Haze Power Bomb Retracting code"}, {"label": "TransferAnimatedGraphics", "addr": {"U": "5DD5C", "E": "5DE30", "J": "5DD5C"}, "size": {"U": "270", "E": "290", "J": "270"}, "mode": "thumb", "params": null, "return": null, "notes": "Transfers the animated graphics from WRAM to VRAM depending on the Animated graphics to update"}, {"label": "UpdateAnimatedGraphics", "addr": {"U": "5DFCC", "E": "5E0C0", "J": "5DFCC"}, "size": "164", "mode": "thumb", "params": null, "return": null, "notes": "Updates the animated graphics"}, {"label": "LoadAnimatedTileset", "addr": {"U": "5E130", "E": "5E224", "J": "5E130"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Loads the animated graphics of the current room"}, {"label": "UpdateAnimatedPalette", "addr": {"U": "5E2B4", "E": "5E3A8", "J": "5E2B4"}, "size": "170", "mode": "thumb", "params": null, "return": null, "notes": "Updates the animated palette"}, {"label": "LoadAnimatedPalette", "addr": {"U": "5E424", "E": "5E518", "J": "5E424"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animated palette should be disabled when loading a room"}, {"label": "CheckPlayLightningEffect", "addr": {"U": "5E500", "E": "5E5F4", "J": "5E500"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Checks if lightning effects should play"}, {"label": "ProcessSpecialBGEffect", "addr": {"U": "5E5CC", "E": "5E6C0", "J": "5E5CC"}, "size": "12C", "mode": "thumb", "params": null, "return": {"label": "unk", "type": "u8"}, "notes": "Processes the current special background effect"}, {"label": "StartSpecialBGEffect", "addr": {"U": "5E6F8", "E": "5E7EC", "J": "5E6F8"}, "size": "68", "mode": "thumb", "params": [{"label": "Effect", "type": "u8", "enum": "SpecialBGEffect"}], "return": {"label": "EffectStarted", "type": "bool", "notes": "Effect started"}, "notes": "Starts a special background effect"}, {"label": "UpdateHatchAnimation", "addr": {"U": "5E8F8", "E": "5E9EC", "J": "5E8F8"}, "size": "15C", "mode": "thumb", "params": [{"label": "param_0", "type": "u8"}, {"label": "HatchNum", "type": "u32", "notes": "Hatch number"}], "return": null, "notes": "Updates the closing/opening animation of an hatch"}, {"label": "CheckEnterDoor", "addr": {"U": "5EBF0", "E": "5ECE4", "J": "5EBF0"}, "size": "1A4", "mode": "thumb", "params": [{"label": "YPosition", "type": "u16", "notes": "Y position"}, {"label": "XPosition", "type": "u16", "notes": "X position"}], "return": {"label": "DoorFound", "type": "bool", "notes": "Door found"}, "notes": "Checks if the door samus is entering is valid, if yes makes samus enter the door"}, {"label": "CheckAreaConnection", "addr": {"U": "5ED94", "E": "5EE88", "J": "5ED94"}, "size": "1B0", "mode": "thumb", "params": [{"label": "YPositionBlocks", "type": "u16", "notes": "Y position (blocks)"}, {"label": "XPositionBlocks", "type": "u16", "notes": "X position (blocks)"}], "return": {"label": "DoorFound", "type": "bool", "notes": "Door found"}, "notes": "Checks if the area connection is valid, if yes makes samus enter the door"}, {"label": "ProcessDoorType", "addr": {"U": "5EF44", "E": "5F038", "J": "5EF44"}, "size": "64", "mode": "thumb", "params": [{"label": "DoorType", "type": "u8", "enum": "DoorType", "notes": "Door type"}], "return": null, "notes": "Processes the door type in r0"}, {"label": "FindEventBasedDoor", "addr": {"U": "5EFA8", "E": "5F09C", "J": "5EFA8"}, "size": "5C", "mode": "thumb", "params": [{"label": "SourceDoorNum", "type": "u8", "notes": "Source door number"}], "return": {"label": "TargetDoorNum", "type": "u8", "notes": "Target door number if found, 0xFF otherwise"}, "notes": "Finds the new destination room for event based doors"}, {"label": "SetHatchAsOpened", "addr": {"U": "5F004", "E": "5F0F8", "J": "5F004"}, "size": "A0", "mode": "thumb", "params": [{"label": "Action", "type": "u8", "notes": "0 for checking if opened, 1 for setting source and destination, 2 for setting source"}, {"label": "DoorNum", "type": "u8", "notes": "Door number"}], "return": {"label": "HatchWasUnopened", "type": "bool", "notes": "Hatch was previously unopened"}, "notes": "Sets an hatch as opened"}, {"label": "CheckUnlockHatches", "addr": {"U": "5F0A4", "E": "5F198", "J": "5F0A4"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the doors should unlock"}, {"label": "LockHatches", "addr": {"U": "5F120", "E": "5F214", "J": "5F120"}, "size": "174", "mode": "thumb", "params": [{"label": "IsHatchLockEvent", "type": "bool", "notes": "Is hatch lock event"}], "return": null, "notes": "Locks the hatches"}, {"label": "LoadRoomDoors", "addr": {"U": "5F294", "E": "5F388", "J": "5F294"}, "size": "320", "mode": "thumb", "params": null, "return": null, "notes": "Loads the doors for the current rooms"}, {"label": "LockHatchesWithTimer", "addr": {"U": "5F5B4", "E": "5F6A8", "J": "5F5B4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calls LockHatches with 0 in r0, called when the doors are locked using the timer and not via a hatch lock event"}, {"label": "CheckHatchLockEvents", "addr": {"U": "5F5D8", "E": "5F6CC", "J": "5F5D8"}, "size": "16C", "mode": "thumb", "params": null, "return": null, "notes": "Checks for a hatch lock event in the current room, calls LockHatches with 1 in r0"}, {"label": "CheckPlayCutsceneDuringTransition", "addr": {"U": "5F744", "E": "5F838", "J": "5F744"}, "size": "B8", "mode": "thumb", "params": [{"label": "Area", "type": "u8", "enum": "AreaID"}, {"label": "DestinationRoomPlus1", "type": "u8", "notes": "Destination room + 1"}], "return": null, "notes": "Checks if a cutscene should play when going through a transition"}, {"label": "CheckPlayCutsceneDuringElevator", "addr": {"U": "5F7FC", "E": "5F8F0", "J": "5F7FC"}, "size": "F8", "mode": "thumb", "params": null, "return": null, "notes": "Checks if a cutscene should play when using an elevator"}, {"label": "IntroSamusCloseUp", "addr": {"U": "5F8F4", "E": "5F9E8", "J": "5F8F4"}, "size": {"U": "464", "E": "460", "J": "464"}, "mode": "thumb", "params": null, "return": {"label": "Stage", "type": "u8", "notes": "5 if ended, 0 otherwise"}, "notes": "Handles the samus close up at the beginning of the game"}, {"label": "UpgradeSuitCutscene", "addr": {"U": "5FDCC", "E": "5FEBC", "J": "5FDCC"}, "size": {"U": "5A8", "E": "59C", "J": "5A8"}, "mode": "thumb", "params": [{"label": "CutsceneNum", "type": "u8", "notes": "Cutscene number"}, {"label": "CutsceneFlag", "type": "u8", "notes": "Cutscene flag"}], "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus upgrading suit cutscene (both varia and full suit)"}, {"label": "MakeBackgroundFlash", "addr": {"U": "603C4", "E": "604A8", "J": "603C4"}, "size": "58", "mode": "thumb", "params": [{"label": "FlashType", "type": "u8", "notes": "Flash type (0 = slight yellow flash, 1 = transparency change for statue long, 2 = heavy yellow flash 3 = quick flash)"}], "return": null, "notes": "Starts a flash background effect"}, {"label": "StartInGameCutscene", "addr": {"U": "6041C", "E": "60500", "J": "6041C"}, "size": "18", "mode": "thumb", "params": [{"label": "CutsceneNum", "type": "u8", "enum": "InGameCutscene", "notes": "Cutscene number"}], "return": null, "notes": "Starts an in game cutscene"}, {"label": "ProcessInGameCutscene", "addr": {"U": "60434", "E": "60518", "J": "60434"}, "size": "AC", "mode": "thumb", "params": null, "return": null, "notes": "Updates the in game cutscene, calls the subroutine"}, {"label": "InitInGameCutscene", "addr": {"U": "604E0", "E": "605C4", "J": "604E0"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Initializes an in game cutscene"}, {"label": "EventFunctions", "addr": {"U": "608BC", "E": "609A0", "J": "608BC"}, "size": "6C", "mode": "thumb", "params": [{"label": "Action", "type": "u8", "notes": "0 if clearing event, 1 if setting event, 2 if toggling event, 3 if checking event"}, {"label": "Event", "type": "u8", "enum": "Event"}], "return": {"label": "EventIsSet", "type": "bool", "notes": "Event is set"}, "notes": "Event function, used to manipulate events"}, {"label": "CheckPlayRoomMusicTrack", "addr": {"U": "60928", "E": "60A0C", "J": "60928"}, "size": "BC", "mode": "thumb", "params": [{"label": "AreaId", "type": "u8", "enum": "AreaID", "notes": "Area ID"}, {"label": "RoomId", "type": "u8", "notes": "Room ID"}], "return": null, "notes": "Calls CheckSetNewMusicTrack, plays the destination room music if necessary"}, {"label": "CheckPlayLoadingJingle", "addr": {"U": "609E4", "E": "60AC8", "J": "609E4"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the loading jingle should play"}, {"label": "StartNewDemo", "addr": {"U": "60B20", "E": "60C04", "J": "60B20"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Starts a new demo"}, {"label": "InitNewDemo", "addr": {"U": "60B7C", "E": "60C60", "J": "60B7C"}, "size": "140", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a new demo"}, {"label": "ReturnOne", "addr": {"U": "60E28", "E": "60F10", "J": "60E28"}, "size": "4", "mode": "thumb", "params": null, "return": {"label": "Always1", "type": "bool", "notes": "Always 1"}, "notes": "Returns 1 (used for cutscenes)"}, {"label": "ZebesEscapeCutsceneSubroutine", "addr": {"U": "60E2C", "E": "60F14", "J": "60E2C"}, "size": "94", "mode": "thumb", "params": null, "return": {"label": "CutsceneEnded", "type": "bool", "notes": "Cutscene ended"}, "notes": "Subroutine for the tourian escape"}, {"label": "UpdateMusicAfterCutsceneSkip", "addr": {"U": "60EC0", "E": "60FA8", "J": "60EC0"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Updates the music after skipping a cutscene"}, {"label": "EndCutscene", "addr": {"U": "60EF4", "E": "60FDC", "J": "60EF4"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Called at the end of a cutscene"}, {"label": "CutscenesSubroutine", "addr": {"U": "61044", "E": "6112C", "J": "61044"}, "size": "1E4", "mode": "thumb", "params": null, "return": {"label": "CutsceneEnded", "type": "bool", "notes": "Cutscene ended"}, "notes": "Main subroutine for all cutscenes"}, {"label": "EndCutscene", "addr": {"U": "61228", "E": "61310", "J": "61228"}, "size": "4", "mode": "thumb", "params": null, "return": {"label": "End", "type": "bool", "notes": "Always 1"}, "notes": "Returns 1 to indicate end of cutscene functions"}, {"label": "KraidRisingRising", "addr": {"U": "6240C", "E": "62528", "J": "6240C"}, "size": "2EC", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the kraid rising part of the kraid rising cutscene"}, {"label": "KraidRisingOpeningEyes", "addr": {"U": "6280C", "E": "62928", "J": "6280C"}, "size": "188", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles kraid opening his eyes part of the kraid rising cutscene"}, {"label": "KraidRisingInit", "addr": {"U": "62994", "E": "62AB0", "J": "62994"}, "size": "190", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the kraid rising cutscene"}, {"label": "KraidRisingSubroutine", "addr": {"U": "62B24", "E": "62C40", "J": "62B24"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the kraid rising cutscene"}, {"label": "StoryTextCutscenesInit", "addr": {"U": "62B90", "E": "62CAC", "J": "62B90"}, "size": "FC", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize a story text cutscene"}, {"label": "StoryTextCutscenesSubroutine", "addr": {"U": "62FD8", "E": "630F4", "J": "62FD8"}, "size": "30", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the story text cutscenes (intro, after landing on Chozodia and another one?)"}, {"label": "MotherBrainCloseUpLookingAtSamus", "addr": {"U": "63008", "E": "63124", "J": "63008"}, "size": "234", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the mother brain looking at samus part of the mother brain close up cutscene"}, {"label": "MotherBrainCloseUpEyeOpening", "addr": {"U": "63284", "E": "633A0", "J": "63284"}, "size": "23C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the eye opening part of the mother brain close up cutscene"}, {"label": "MotherBrainCloseUpTankView", "addr": {"U": "634C0", "E": "635DC", "J": "634C0"}, "size": "C4", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the view of mother brain in her tank from up top (beginning) part of the mother brain close up cutscene"}, {"label": "MotherBrainCloseUpInit", "addr": {"U": "63584", "E": "636A0", "J": "63584"}, "size": "B8", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the mother brain close up cutscene"}, {"label": "MotherBrainCloseUpSubroutine", "addr": {"U": "6363C", "E": "63758", "J": "6363C"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Mother brain close up cutscene subroutine"}, {"label": "RidleyInSpaceShipLeaving", "addr": {"U": "63884", "E": "639A0", "J": "63884"}, "size": "298", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the ship leaving (end) part of the ridley in space cutscene"}, {"label": "RidleyInSpaceRidleySuspicious", "addr": {"U": "63BE0", "E": "63CFC", "J": "63BE0"}, "size": "1B0", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the ridley being suspicious part of the ridley in space cutscene"}, {"label": "RidleyInSpaceRedAlert", "addr": {"U": "63D90", "E": "63EAC", "J": "63D90"}, "size": "1C4", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the red alert part of the ridley in space cutscene"}, {"label": "RidleyInSpaceViewOfShip", "addr": {"U": "63FB4", "E": "640D0", "J": "63FB4"}, "size": "1B4", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the view on the ship in space (beginning) part of the ridley in space cutscene"}, {"label": "RidleyInSpaceCutsceneInit", "addr": {"U": "642BC", "E": "643D8", "J": "642BC"}, "size": "15C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the ridley in space cutscene"}, {"label": "RidleyInSpaceSubroutine", "addr": {"U": "64418", "E": "64534", "J": "64418"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the ridley in space cutscene"}, {"label": "RidleyLandingRidleyFlying", "addr": {"U": "647D0", "E": "648EC", "J": "647D0"}, "size": "178", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the ridley flying part of the ridley landing cutscene"}, {"label": "RidleyLandingShipLanding", "addr": {"U": "649B4", "E": "64AD0", "J": "649B4"}, "size": "5A8", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the shi landing part of the ridley landing cutscene"}, {"label": "RidleyLandingShipInSpace", "addr": {"U": "64FE0", "E": "650FC", "J": "64FE0"}, "size": "108", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the ship in space part of the ridley landing cutscene"}, {"label": "RidleyLandingInit", "addr": {"U": "650E8", "E": "65204", "J": "650E8"}, "size": "19C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0?"}, "notes": "Initialize the ridley landing cutscene"}, {"label": "RidleyLandingSubroutine", "addr": {"U": "65284", "E": "653A0", "J": "65284"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the ridley landing cutscene"}, {"label": "RidleySpawnRidleyFlyingIn", "addr": {"U": "65304", "E": "65420", "J": "65304"}, "size": "19C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the ridley flying towards the camera part of the ridley spawn cutscene"}, {"label": "RidleySpawnHelmetReflection", "addr": {"U": "65540", "E": "6565C", "J": "65540"}, "size": "12C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the ridley in the helmet reflection part of the ridley spawn cutscene"}, {"label": "RidleySpawnSamusLookingUp", "addr": {"U": "6566C", "E": "65788", "J": "6566C"}, "size": "7C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the samus looking up part of the ridley spawn cutscene"}, {"label": "RidleySpawnCutsceneInit", "addr": {"U": "656E8", "E": "65804", "J": "656E8"}, "size": "1BC", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the ridley spawn cutscene"}, {"label": "RidleySpawnSubroutine", "addr": {"U": "658A4", "E": "659C0", "J": "658A4"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the ridley spawn cutscene"}, {"label": "MechaRidleySeesSamusEyeOpen", "addr": {"U": "65924", "E": "65A40", "J": "65924"}, "size": "100", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the eye opening part (the entire cutscene) of the mecha ridley sees samus cutscene"}, {"label": "MechaRidleySeesSamusInit", "addr": {"U": "65A24", "E": "65B40", "J": "65A24"}, "size": "148", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the mecha ridley sees samus cutscene"}, {"label": "MechaRidleySeesSamusSubroutine", "addr": {"U": "65B6C", "E": "65C88", "J": "65B6C"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the mecha ridley sees samus cutscene"}, {"label": "GettingFullyPoweredSuitAnimation", "addr": {"U": "65BD8", "E": "65CF4", "J": "65BD8"}, "size": "204", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the animation (entire cutscene) part of the getting fully powered suit cutscene"}, {"label": "GettingFullyPoweredSuitInit", "addr": {"U": "66020", "E": "6613C", "J": "66020"}, "size": "33C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the getting fully powered suit cutscene"}, {"label": "GettingFullyPoweredSuitSubroutine", "addr": {"U": "6635C", "E": "66478", "J": "6635C"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the getting fully powered suit cutscene"}, {"label": "BeforeRuinsTestSamusCloseUp", "addr": {"U": "663C8", "E": "664E4", "J": "663C8"}, "size": "270", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the samus close up part of the before charlie cutscene"}, {"label": "BeforeRuinsTestWallAndGreyVoice", "addr": {"U": "66638", "E": "66754", "J": "66638"}, "size": "2D8", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the wall view and the grey voice part of the before charlie cutscene"}, {"label": "BeforeRuinsTestChozoWallSides", "addr": {"U": "66A30", "E": "66B4C", "J": "66A30"}, "size": "70", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the view on the sides of the chozo wall part of the before charlie cutscene"}, {"label": "BeforeRuinsTestInit", "addr": {"U": "66AA0", "E": "66BBC", "J": "66AA0"}, "size": "130", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the before charlie cutscene"}, {"label": "BeforeRuinsTestSubroutine", "addr": {"U": "66BD0", "E": "66CEC", "J": "66BD0"}, "size": "30", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the before charlie cutscene"}, {"label": "StatueOpeningOpening", "addr": {"U": "66C00", "E": "66D1C", "J": "66C00"}, "size": "164", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the statue opening cutscene"}, {"label": "StatueOpeningInit", "addr": {"U": "66D64", "E": "66E80", "J": "66D64"}, "size": "2B0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the statue opening cutscene"}, {"label": "StatueOpeningSubroutine", "addr": {"U": "67014", "E": "67130", "J": "67014"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "unk", "type": "u8"}, "notes": "Subroutine for the statue opening cutscene"}, {"label": "EnterTourianAnimation", "addr": {"U": "67080", "E": "6719C", "J": "67080"}, "size": "310", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the animation of the metroids (entire cutscene) part of the enter tourian cutscene"}, {"label": "EnterTourianInit", "addr": {"U": "6794C", "E": "67A68", "J": "6794C"}, "size": "3C0", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the entering tourian cutscene"}, {"label": "EnterTourianSubroutine", "addr": {"U": "67D0C", "E": "67E28", "J": "67D0C"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the enter tourian cutscene"}, {"label": "SamusInBlueShipPoweringUp", "addr": {"U": "67D8C", "E": "67EA8", "J": "67D8C"}, "size": "F8", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the blue ship powering up (entire cutscene) part of the samus in blue ship cutscene"}, {"label": "SamusInBlueShipInit", "addr": {"U": "67F90", "E": "680AC", "J": "67F90"}, "size": "12C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Initialize the samus in blue ship cutscene"}, {"label": "SamusInBlueShipSubroutine", "addr": {"U": "680BC", "E": "681D8", "J": "680BC"}, "size": "34", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the samus in blue ship cutscene"}, {"label": "CheckDrawTimeAndTanks", "addr": {"U": "6895C", "E": "68A78", "J": "6895C"}, "size": "FC", "mode": "thumb", "params": [{"label": "DonTDrawFlag", "type": "bool", "notes": "Don't draw flag"}], "return": null, "notes": "Draws the pause screen info (in game time and tanks)"}, {"label": "MapScreenOamRelated", "addr": {"U": "695BC", "E": "696D8", "J": "695BC"}, "size": "F0", "mode": "thumb", "params": null, "return": null, "notes": "General handler for the map screen OAM"}, {"label": "CutsceneProcessOAM", "addr": {"U": "69DC8", "E": "69EE4", "J": "69DC8"}, "size": "3B8", "mode": "thumb", "params": [{"label": "Length", "type": "u32"}, {"label": "CutsceneOamDataPtr", "type": "Oam *", "notes": "Cutscene OAM data pointer"}, {"label": "OamArrayPtr", "type": "OamArray *", "notes": "OAM array pointer"}], "return": null, "notes": "Processes a cutscene OAM Data and writes to OAM data"}, {"label": "MapScreenSubroutine", "addr": {"U": "6A180", "E": "6A29C", "J": "6A180"}, "size": "178", "mode": "thumb", "params": null, "return": {"label": "LeavingMapScreen", "type": "bool", "notes": "Leaving map screen"}, "notes": "Map screen main loop"}, {"label": "MapScreenInit", "addr": {"U": "6A434", "E": "6A550", "J": "6A434"}, "size": {"U": "AA0", "E": "AA0", "J": "ABC"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the map screen"}, {"label": "DetermineViewableAreaMaps", "addr": {"U": "6AED4", "E": "6AFF0", "J": "6AEF0"}, "size": "138", "mode": "thumb", "params": null, "return": null, "notes": "Determines which maps can be viewed in the pause screen"}, {"label": "GetMinimapData", "addr": {"U": "6B0F8", "E": "6B214", "J": "6B114"}, "size": "148", "mode": "thumb", "params": [{"label": "MinimapNum", "type": "u8", "notes": "Minimap number"}, {"label": "DestinationAddress", "type": "u16 *", "notes": "Destination address"}], "return": null, "notes": "Gets the minimap data"}, {"label": "CheckSustainedInputForScrolling", "addr": {"U": "6C0E0", "E": "6C204", "J": "6C0FC"}, "size": {"U": "74", "E": "88", "J": "74"}, "mode": "thumb", "params": null, "return": null, "notes": "Checks for sustained input when on specific menus (map screen and file select)"}, {"label": "UpdateMinimap", "addr": {"U": "6C154", "E": "6C28C", "J": "6C170"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calls different functions related to updating the minimap"}, {"label": "SetMinimapSquareExplored", "addr": {"U": "6C178", "E": "6C2B0", "J": "6C194"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Sets a minimap tile to be explored"}, {"label": "CheckForUnexploredMinimapSquare", "addr": {"U": "6C39C", "E": "6C4D4", "J": "6C3B8"}, "size": "D8", "mode": "thumb", "params": null, "return": null, "notes": "Checks if samus is on an unexplored minimap tile"}, {"label": "CheckUpdateMinimapOnDoorTransition", "addr": {"U": "6C474", "E": "6C5AC", "J": "6C490"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Does check for the minimap when taking a transition"}, {"label": "UpdateCornerMinimapNewSquareEntered", "addr": {"U": "6C518", "E": "6C650", "J": "6C534"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the minimap GFX for the explored tiles"}, {"label": "DrawCornerMinimap", "addr": {"U": "6C5B4", "E": "6C6EC", "J": "6C5D0"}, "size": {"U": "100", "E": "D4", "J": "100"}, "mode": "thumb", "params": null, "return": null, "notes": "Draws the minimap"}, {"label": "SetMinimapSquaresWithObtainedItems", "addr": {"U": "6CA44", "E": "6CB50", "J": "6CA60"}, "size": "6C", "mode": "thumb", "params": [{"label": "AreaId", "type": "u8", "enum": "AreaID", "notes": "Area ID"}, {"label": "DestinationAddress", "type": "u16 *", "notes": "Destination address"}], "return": null, "notes": "Sets tiles with obtained items when loading a new map for an area"}, {"label": "MinimapSetDownloadedSquares", "addr": {"U": "6CAB0", "E": "6CBBC", "J": "6CACC"}, "size": "128", "mode": "thumb", "params": [{"label": "AreaId", "type": "u8", "enum": "AreaID", "notes": "Area ID"}, {"label": "DestinationAddress", "type": "u16 *", "notes": "Destination address"}], "return": null, "notes": "Checks if the map has been downloaded and sets the unexplored tiles when loading a new map for an area"}, {"label": "UpdateMinimapSquareForCollectedItem", "addr": {"U": "6CBD8", "E": "6CCE4", "J": "6CBF4"}, "size": "90", "mode": "thumb", "params": [{"label": "ItemXPosition", "type": "u8", "notes": "Item X position"}, {"label": "ItemYPosition", "type": "u8", "notes": "Item Y position"}], "return": null, "notes": "Updates the minimap square for collected items"}, {"label": "LoadMinimapSquaresWithObtainedItems", "addr": {"U": "6CCCC", "E": "6CDD8", "J": "6CCE8"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Loads the minimap tiles with obtained items when loading a save file"}, {"label": "UpdateMinimapChunk", "addr": {"U": "6CD84", "E": "6CE90", "J": "6CDA0"}, "size": "174", "mode": "thumb", "params": [{"label": "Event", "type": "u8", "enum": "Event"}], "return": null, "notes": "Updates a minimap chunk (for boss marks and ship)"}, {"label": "CountTanksInArea", "addr": {"U": "6CEF8", "E": "6D004", "J": "6CF14"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Counts the numbers collected tanks in the current area"}, {"label": "DrawTimeAndTanks", "addr": {"U": "6D060", "E": "6D16C", "J": "6D07C"}, "size": "2D4", "mode": "thumb", "params": [{"label": "param_0", "type": "u8"}, {"label": "param_1", "type": "u8"}], "return": null, "notes": "Draw the in game time and the tanks on the map screen"}, {"label": "GetAllMinimapData", "addr": {"U": "6DF80", "E": "6E070", "J": "6DF9C"}, "size": "7C", "mode": "thumb", "params": [{"label": "AlwaysFF", "type": "u8", "notes": "Always 0xFF?"}], "return": null, "notes": "Loads all the areas minimap in the WRAM"}, {"label": "CheckExploredAreas", "addr": {"U": "6DFFC", "E": "6E0EC", "J": "6E018"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks which areas have at least one visited tile bit set used to allow the view of said area in the pause screen"}, {"label": "MapScreenCheckInput", "addr": {"U": "6E04C", "E": "6E13C", "J": "6E068"}, "size": "1A8", "mode": "thumb", "params": null, "return": null, "notes": "Subroutine for the map screen"}, {"label": "MapScreenChangeArea", "addr": {"U": "6E2D0", "E": "6E3C0", "J": "6E2EC"}, "size": "190", "mode": "thumb", "params": null, "return": null, "notes": "Handles changing the map viewed on the map screen"}, {"label": "GetCharacterWidth", "addr": {"U": "6E460", "E": "6E550", "J": "6E47C"}, "size": "24", "mode": "thumb", "params": [{"label": "CharacterId", "type": "u16", "notes": "Character ID"}], "return": {"label": "CharacterWidth", "type": "u8", "notes": "Character width (0xA if invalid)"}, "notes": "Gets the width of the character in r0 using the Character Width table"}, {"label": "DrawCharacterForText", "addr": {"U": "6E484", "E": "6E574", "J": "6E4A0"}, "size": {"U": "4B8", "E": "4E4", "J": "4B8"}, "mode": "thumb", "params": [{"label": "CharacterID", "type": "u16", "notes": "Character ID"}, {"label": "DestinationAddress", "type": "u16 *", "notes": "Destination address"}, {"label": "Indent", "type": "u16"}, {"label": "Color", "type": "u8"}], "return": null, "notes": "Draws a character for a text (description in equipment screen and story text)"}, {"label": "DrawCharacterForMessage", "addr": {"U": "6E93C", "E": "6EA58", "J": "6E958"}, "size": {"U": "5F0", "E": "614", "J": "5F0"}, "mode": "thumb", "params": [{"label": "CharacterID", "type": "u16", "notes": "Character ID"}, {"label": "DestinationAddress", "type": "u16 *", "notes": "Destination address"}, {"label": "Indent", "type": "u16"}, {"label": "Color", "type": "u8"}], "return": null, "notes": "Draws a character for a message (item pop-up, area names...)"}, {"label": "DrawCharacterForLocationText", "addr": {"U": "6EF2C", "E": "6F06C", "J": "6EF48"}, "size": "EC", "mode": "thumb", "params": [{"label": "param_0", "type": "u8"}, {"label": "PtrToTextPtr", "type": "u16 **", "notes": "Pointer to text pointer"}], "return": null, "notes": "Draws the characters for the location text in r1"}, {"label": "DrawLocationText", "addr": {"U": "6F018", "E": "6F158", "J": "6F034"}, "size": {"U": "90", "E": "9C", "J": "90"}, "mode": "thumb", "params": [{"label": "LocationTextId", "type": "u8", "notes": "Location text ID"}, {"label": "GfxSlot", "type": "u8", "notes": "Graphics slot"}], "return": null, "notes": "Calls the function above with the good paramaters"}, {"label": "StartStoryText", "addr": {"U": "6F404", "E": "6F550", "J": "6F420"}, "size": "20", "mode": "thumb", "params": [{"label": "StoryTextId", "type": "u8", "notes": "Story text ID"}], "return": null, "notes": "Starts a story text"}, {"label": "StartFileScreenText", "addr": {"U": "6F5A4", "E": "6F6F0", "J": "6F5C0"}, "size": "20", "mode": "thumb", "params": [{"label": "MessageNum", "type": "u8", "notes": "Message number"}], "return": null, "notes": "Starts a file screen text"}, {"label": "ProcessCurrMessage", "addr": {"U": "6F98C", "E": "6FAD8", "J": "6F9A8"}, "size": "140", "mode": "thumb", "params": [{"label": "CurrMessagePtr", "type": "CurrMessage *", "notes": "Current message pointer"}, {"label": "TextPtr", "type": "u16 *", "tags": ["text"], "notes": "Text pointer"}, {"label": "DestinationAddress", "type": "u16 *", "tags": ["text"], "notes": "Destination address"}], "return": {"label": "LineState", "type": "u8", "notes": "Line state (0 = no new line, 1 = new line, 2 = message end)"}, "notes": "Processes the current message"}, {"label": "UpdateMinimapAnimatedPalettes", "addr": {"U": "6FD00", "E": "6FE4C", "J": "6FD1C"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Updates the minimap animated palette"}, {"label": "UpdateSuitType", "addr": {"U": "6FEE4", "E": "70030", "J": "6FF00"}, "size": "68", "mode": "thumb", "params": [{"label": "NewSuitType", "type": "u8", "enum": "SuitType", "notes": "New suit type"}], "return": null, "notes": "Updates the suit type of samus"}, {"label": "DrawStatusScreenItems", "addr": {"U": "6FF4C", "E": "70098", "J": "6FF68"}, "size": "D4", "mode": "thumb", "params": [{"label": "RowToDraw", "type": "u8", "notes": "Row to draw"}], "return": {"label": "DoneDrawing", "type": "bool", "notes": "Done drawing"}, "notes": "Draws the status screen row in r0"}, {"label": "DrawStatusScreenTanksAmounts", "addr": {"U": "70180", "E": "702CC", "J": "7019C"}, "size": "1A4", "mode": "thumb", "params": null, "return": null, "notes": "Draws the status screen"}, {"label": "DrawStatusScreenSingleTankAmount", "addr": {"U": "70414", "E": "70560", "J": "70430"}, "size": "120", "mode": "thumb", "params": [{"label": "RowToDraw", "type": "u8", "notes": "Row to draw?"}, {"label": "Amount", "type": "u16"}, {"label": "AlwaysB", "type": "u8", "notes": "Always 0xB?"}, {"label": "IsAtMaxFlag", "type": "bool", "notes": "Is at max flag"}], "return": null, "notes": "Draws a single status screen tank amount"}, {"label": "SetStatusScreenBombVisibility", "addr": {"U": "709C0", "E": "70B0C", "J": "709DC"}, "size": "26C", "mode": "thumb", "params": [{"label": "TilemapOffset", "type": "u32", "notes": "Tilemap offset"}], "return": null, "notes": "Sets the visibiliy for the bombs in the status screen"}, {"label": "CheckSelectPressedOnStatusScreen", "addr": {"U": "70F58", "E": "710A4", "J": "70F74"}, "size": "14", "mode": "thumb", "params": [{"label": "SelectFlag", "type": "u8", "enum": "ButtonInput", "notes": "Always 4"}], "return": {"label": "SelectPressed", "type": "bool", "notes": "Select pressed"}, "notes": "Checks if the select button is pressed when on the status screen"}, {"label": "StatusScreenInputRelated", "addr": {"U": "71800", "E": "7194C", "J": "7181C"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Subroutine for the status screen"}, {"label": "GetCurrentEquipmentSelected", "addr": {"U": "71894", "E": "719E0", "J": "718B0"}, "size": "1A8", "mode": "thumb", "params": [{"label": "StatusSlot", "type": "u8", "notes": "Status Slot"}], "return": {"label": "EquipmentID", "type": "u8", "notes": "Equipment ID (Enum in order starting with long beam = 0 and ending with space jump = 10, unknown item = 11, pistol = 12 and none = 80)"}, "notes": "Gets the ID of the current equipment selected on the status screen"}, {"label": "EasySleepMenuSubroutine", "addr": {"U": "71F70", "E": "720BC", "J": "71F8C"}, "size": "1D4", "mode": "thumb", "params": null, "return": {"label": "Selection", "type": "u8", "notes": "1 if leaving with input, 2 if leaving with \"no\" option, 0 otherwise"}, "notes": "Subroutine for the easy sleep menu"}, {"label": "ChozoStatueHintMovement", "addr": {"U": "72204", "E": "72350", "J": "72220"}, "size": "46C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the target on a chozo statue hint"}, {"label": "ChozoStatueHintScrolling", "addr": {"U": "72670", "E": "727BC", "J": "7268C"}, "size": "248", "mode": "thumb", "params": null, "return": null, "notes": "Handles the camera scrolling on a chozo statue hint"}, {"label": "ChozoStatueHintSubroutine", "addr": {"U": "728B8", "E": "72A04", "J": "728D4"}, "size": "25C", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for a chozo statue hint"}, {"label": "ChozoStatueHintChangeArea", "addr": {"U": "72B14", "E": "72C60", "J": "72B30"}, "size": "A4", "mode": "thumb", "params": [{"label": "ChozoStatueXPositionPtr", "type": "u8 *", "notes": "Chozo statue X position pointer"}, {"label": "ChozoStatueYPositionPtr", "type": "u8 *", "notes": "Chozo statue Y position pointer"}, {"label": "param_2", "type": "u8 *"}, {"label": "ChozoStatueTargetPathPtr", "type": "u8 *", "notes": "Chozo statue target path pointer?"}], "return": null, "notes": "Chozo statue hint change area"}, {"label": "ChozoStatueHintCheckEvents", "addr": {"U": "73050", "E": "7319C", "J": "7306C"}, "size": "7C", "mode": "thumb", "params": [{"label": "ArrayOffset", "type": "u8", "notes": "Array offset?"}], "return": {"label": "HintActivation", "type": "s8", "notes": "-1 if not activated, 0 if activated, 1 if de-activated"}, "notes": "Checks for events/flags to see if a target is activated"}, {"label": "CheckActivatedChozoStatueTargets", "addr": {"U": "730CC", "E": "73218", "J": "730E8"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks which targets are activated"}, {"label": "CheckUnvisitedAreaHasChozoHint", "addr": {"U": "73108", "E": "73254", "J": "73124"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Checks if a non-explored area has an hint, used to allow the view of said area in the pause screen"}, {"label": "DrawMapScreenBossFlames", "addr": {"U": "73150", "E": "7329C", "J": "7316C"}, "size": "F8", "mode": "thumb", "params": null, "return": null, "notes": "Draws the boss flames target and handles the animation"}, {"label": "ReadSram", "addr": {"U": "7329C", "E": "733E8", "J": "732B8"}, "size": {"U": "64", "E": "50", "J": "64"}, "mode": "thumb", "params": null, "return": null, "notes": "Main function that reads the SRAM"}, {"label": "WriteSramData", "addr": {"U": "73CE4", "E": "73E1C", "J": "73D00"}, "size": "350", "mode": "thumb", "params": null, "return": null, "notes": "Writes to the SRAM"}, {"label": "LoadSramData", "addr": {"U": "74034", "E": "7416C", "J": "74050"}, "size": "2AC", "mode": "thumb", "params": null, "return": null, "notes": "Loads the SRAM data of the current save file to the RAM"}, {"label": "WriteAsciiString", "addr": {"U": "742E0", "E": "74418", "J": "742FC"}, "size": "24", "mode": "thumb", "params": [{"label": "DestinationAddress", "type": "s8 *", "tags": ["ascii"], "notes": "Destination address"}, {"label": "StringPtr", "type": "s8 *", "tags": ["ascii"], "notes": "String pointer"}, {"label": "Length", "type": "u8"}], "return": null, "notes": "Writes a string to r0"}, {"label": "WriteSramArrays", "addr": {"U": "747BC", "E": "748F4", "J": "747D8"}, "size": "100", "mode": "thumb", "params": null, "return": null, "notes": "Writes the arrays to the SRAM arrays"}, {"label": "LoadSramArrays", "addr": {"U": "748BC", "E": "749F4", "J": "748D8"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Loads the SRAM arrays of the current save file to the RAM"}, {"label": "BackupTimeAttackForSram", "addr": {"U": "74F58", "E": "75090", "J": "74F74"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Saves the time attack password/IGT to SRAM flash"}, {"label": "LoadDemoRamValues", "addr": {"U": "75364", "E": "7549C", "J": "75380"}, "size": "130", "mode": "thumb", "params": [{"label": "LoadingSamusDataFlag", "type": "bool", "notes": "Loading Samus data flag"}, {"label": "DemoNum", "type": "u8", "notes": "Demo number"}], "return": null, "notes": "Loads the demo RAM values"}, {"label": "CheckLoadSaveFile", "addr": {"U": "7596C", "E": "75AB0", "J": "75990"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the save is new, either calls the Init or Load function"}, {"label": "InitSaveFile", "addr": {"U": "75A94", "E": "75BD8", "J": "75AB8"}, "size": "164", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a save file, sets most data to default values (0 or 0xffff)"}, {"label": "EraseSramMenuSubroutine", "addr": {"U": "75C30", "E": "75D74", "J": "75C54"}, "size": "14C", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the erase SRAM menu"}, {"label": "EraseSramMenuProcessInput", "addr": {"U": "75D7C", "E": "75EC0", "J": "75DA0"}, "size": "54", "mode": "thumb", "params": null, "return": {"label": "ReturnValueOfErasesrammenucheckforinput", "type": "u8", "notes": "Return value of EraseSramMenuCheckForInput"}, "notes": "Processes the inputs"}, {"label": "EraseSramMenuCheckForInput", "addr": {"U": "75E7C", "E": "75FC0", "J": "75EA0"}, "size": "10C", "mode": "thumb", "params": null, "return": {"label": "Input", "type": "u8", "notes": "Input (0 = none, 1 = erasing, 2 = no first window)"}, "notes": "Checks for input"}, {"label": "EraseSramMenuInit", "addr": {"U": "75F88", "E": "760CC", "J": "75FAC"}, "size": {"U": "24C", "E": "244", "J": "244"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the SRAM Menu"}, {"label": "EraseSramMenuProcessOAM", "addr": {"U": "76364", "E": "764A0", "J": "76380"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff"}, {"label": "LoadSpecialGraphicsData", "addr": {"U": "763F0", "E": "7652C", "J": "7640C"}, "size": "18", "mode": "thumb", "params": [{"label": "SpecialGfxDataPtr", "type": "u8 *", "tags": ["lz", "gfx"], "notes": "Special graphics data pointer"}], "return": null, "notes": "Calls LZ77UnCompReadNormalWrite16bit and loads the graphics data in r0"}, {"label": "LoadSpecialGraphicsData_Copy", "addr": {"U": "76408", "E": "76544", "J": "76424"}, "size": "18", "mode": "thumb", "params": [{"label": "SpecialGfxDataPtr", "type": "u8 *", "tags": ["lz", "gfx"], "notes": "Special graphics data pointer"}], "return": null, "notes": "Calls LZ77UnCompReadNormalWrite16bit and loads the graphics data in r0, copy of above"}, {"label": "TitleScreenProcessOAM", "addr": {"U": "7644C", "E": "76588", "J": "76468"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Calls the handler that renders the OAM"}, {"label": "TitleScreenFadingIn", "addr": {"U": "764C8", "E": "76604", "J": "764E4"}, "size": "118", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the fading in part of the title screen"}, {"label": "TitleScreenSubroutine", "addr": {"U": "771A0", "E": "77354", "J": "771BC"}, "size": {"U": "178", "E": "188", "J": "178"}, "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the title screen"}, {"label": "TitleScreenIdle", "addr": {"U": "77318", "E": "774DC", "J": "77334"}, "size": "B0", "mode": "thumb", "params": null, "return": {"label": "Action", "type": "u8", "notes": "Action (0 = none, 1 = input detected 2 = starting demo)"}, "notes": "Handles the sparkles and the logo glow animations"}, {"label": "TitleScreenInit", "addr": {"U": "7745C", "E": "77620", "J": "77478"}, "size": {"U": "2A0", "E": "300", "J": "2A0"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the title screen"}, {"label": "GameOverSubroutine", "addr": {"U": "778C4", "E": "77BD0", "J": "778E0"}, "size": "210", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the game over menu"}, {"label": "GameOverMenuDetectInput", "addr": {"U": "77AD4", "E": "77DE0", "J": "77AF0"}, "size": "78", "mode": "thumb", "params": null, "return": {"label": "AnOptionWasSelected", "type": "bool", "notes": "An option was selected"}, "notes": "Checks for input"}, {"label": "GameOverMenuUpdateTextGfx", "addr": {"U": "77B4C", "E": "77E58", "J": "77B68"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the text graphics depending on if it's selected"}, {"label": "GameOverMenuInit", "addr": {"U": "77BA8", "E": "77EB4", "J": "77BC4"}, "size": {"U": "230", "E": "228", "J": "230"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the game over menu"}, {"label": "GameOverMenuLettersAnimation", "addr": {"U": "77FF4", "E": "782F4", "J": "78010"}, "size": "180", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animation of the GAME OVER letters"}, {"label": "GameOverMenuProcessOAM", "addr": {"U": "781FC", "E": "784FC", "J": "78218"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff"}, {"label": "FileSelectMenuProcessOAM", "addr": {"U": "7824C", "E": "7854C", "J": "78268"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff"}, {"label": "CopyTimeAttackTime", "addr": {"U": "7A1A4", "E": "7A494", "J": "7A1C0"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Copies the time attack time to non gameplay RAM"}, {"label": "FileSelectOptionsSubroutine", "addr": {"U": "7A7E4", "E": "7AAD4", "J": "7A800"}, "size": "248", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the settings menu"}, {"label": "ResetIOTransfterInfo", "addr": {"U": "7AA2C", "E": "7AD1C", "J": "7AA48"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Resets the IO transfer info"}, {"label": "StartNesMetroid", "addr": {"U": "7AA74", "E": "7AD64", "J": "7AA90"}, "size": "150", "mode": "thumb", "params": null, "return": {"label": "PressedBToCancel", "type": "bool", "notes": "Pressed B to cancel"}, "notes": "Subroutine for NES Metroid (does not handle running the game)"}, {"label": "StereoSelectionSubroutine", "addr": {"U": "7AC54", "E": "7AF44", "J": "7AC70"}, "size": "BC", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the stereo selection"}, {"label": "SoundTestSubroutine", "addr": {"U": "7AD10", "E": "7B000", "J": "7AD2C"}, "size": {"U": "2F8", "E": "300", "J": "2F8"}, "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the sound test"}, {"label": "TimeAttackRecordsSubroutine", "addr": {"U": "7B144", "E": "7B43C", "J": "7B160"}, "size": "5D8", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the time attack records"}, {"label": "LoadTimeAttackTimeForRecord", "addr": {"U": "7B744", "E": "7BA3C", "J": "7B760"}, "size": "110", "mode": "thumb", "params": [{"label": "TimeAttackId", "type": "u8", "notes": "Time attack ID"}], "return": null, "notes": "Load time attack time for record"}, {"label": "LoadTimeAttackPasswordForRecord", "addr": {"U": "7B92C", "E": "7BC24", "J": "7B948"}, "size": "BC", "mode": "thumb", "params": [{"label": "Part", "type": "u8", "notes": "Part (0 = normal first half, 1 = normal second half 2 = 100% first half, 3 = 100% second half)"}], "return": null, "notes": "Loads a part of a time attack password in VRAM for the time attack record menu"}, {"label": "MetroidFusionLinkSubroutine", "addr": {"U": "7B9E8", "E": "7BCE0", "J": "7BA04"}, "size": "73C", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the metroid fusion link"}, {"label": "FileSelectMenuSubroutine", "addr": {"U": "7C124", "E": "7C41C", "J": "7C140"}, "size": {"U": "1DC", "E": "1DC", "J": "1EC"}, "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the file select menu"}, {"label": "FileSelectFading", "addr": {"U": "7C300", "E": "7C5F8", "J": "7C32C"}, "size": "1B0", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the fadings for the file select menu"}, {"label": "FileSelectMenuInit", "addr": {"U": "7C5E0", "E": "7C8DC", "J": "7C614"}, "size": {"U": "448", "E": "480", "J": "414"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the file select menu"}, {"label": "DisplaySaveFileInfo", "addr": {"U": "7CB2C", "E": "7CE60", "J": "7CB2C"}, "size": "224", "mode": "thumb", "params": null, "return": null, "notes": "Main function that displays the info on the save files"}, {"label": "DisplaySaveFileHealth", "addr": {"U": "7CD50", "E": "7D084", "J": "7CD50"}, "size": "74", "mode": "thumb", "params": [{"label": "FileNum", "type": "u8", "notes": "File number"}], "return": null, "notes": "Display health on a save file"}, {"label": "CheckInputtingTimeAttackCode", "addr": {"U": "7D588", "E": "7D8C0", "J": "7D610"}, "size": "A4", "mode": "thumb", "params": null, "return": {"label": "FullyEntered", "type": "bool", "notes": "Fully entered"}, "notes": "Checks for the time attack input"}, {"label": "SoftResetSubroutine", "addr": {"U": "7EF9C", "E": "7F2D4", "J": "7EFF8"}, "size": {"U": "54", "E": "160", "J": "54"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for a soft reset"}, {"label": "GetValueFromTimeAttackSeed", "addr": {"U": "7F148", "E": "7F840", "J": "7F1A4"}, "size": "24", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "Value", "type": "u32"}], "return": {"label": "SeedValue", "type": "u32", "notes": "Seed value"}, "notes": "Gets a value from the seed depending on r1"}, {"label": "GenerateTimeAttackPassword", "addr": {"U": "7F2B0", "E": "7F9A8", "J": "7F30C"}, "size": "C0", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "DestinationArray", "type": "u8 *", "notes": "Destination array"}, {"label": "Size", "type": "u32"}], "return": null, "notes": "Generates a time attack password based on r0 and puts it in r1"}, {"label": "IsSaveFileInvalid", "addr": {"U": "7F370", "E": "7FA68", "J": "7F3CC"}, "size": "8C", "mode": "thumb", "params": null, "return": {"label": "Invalid", "type": "bool"}, "notes": "Checks if a save file is legit (Compares IGT at bosses with anti-cheat IGT)"}, {"label": "TimeAttackPasswordSeedFunction1", "addr": {"U": "7F694", "E": "7FD90", "J": "7F6F0"}, "size": "44", "mode": "thumb", "params": [{"label": "param_0", "type": "u32"}, {"label": "param_1", "type": "u32"}], "return": null, "notes": "Function that calls other functions in a pseudo random way to shuffle the seed values"}, {"label": "TimeAttackPasswordSeedFunction2", "addr": {"U": "7F6D8", "E": "7FDD4", "J": "7F734"}, "size": "44", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "param_1", "type": "u32"}], "return": null, "notes": "Function that calls other functions in a pseudo random way to shuffle the seed values"}, {"label": "TimeAttackPasswordSeedFunction3", "addr": {"U": "7F71C", "E": "7FE18", "J": "7F778"}, "size": "44", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "param_1", "type": "u32"}], "return": null, "notes": "Function that calls other functions in a pseudo random way to shuffle the seed values"}, {"label": "TimeAttackPasswordSeedFunction4", "addr": {"U": "7F760", "E": "7FE5C", "J": "7F7BC"}, "size": "50", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "param_1", "type": "u32"}], "return": null, "notes": "Function that calls other functions in a pseudo random way to shuffle the seed values"}, {"label": "TimeAttackPasswordSeedFunction5", "addr": {"U": "7F7B0", "E": "7FEAC", "J": "7F80C"}, "size": "44", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "param_1", "type": "u32"}], "return": null, "notes": "Function that calls other functions in a pseudo random way to shuffle the seed values"}, {"label": "TimeAttackPasswordSeedFunction6", "addr": {"U": "7F7F4", "E": "7FEF0", "J": "7F850"}, "size": "50", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "param_1", "type": "u32"}], "return": null, "notes": "Function that calls other functions in a pseudo random way to shuffle the seed values"}, {"label": "TimeAttackPasswordSeedFunction7", "addr": {"U": "7F844", "E": "7FF40", "J": "7F8A0"}, "size": "58", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "param_1", "type": "u32"}], "return": null, "notes": "Function that calls other functions in a pseudo random way to shuffle the seed values"}, {"label": "TimeAttackPasswordSeedFunction8", "addr": {"U": "7F89C", "E": "7FF98", "J": "7F8F8"}, "size": "60", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "param_1", "type": "u32"}], "return": null, "notes": "Function that calls other functions in a pseudo random way to shuffle the seed values"}, {"label": "RandomizeTimeAttackPasswordSeed", "addr": {"U": "7F8FC", "E": "7FFF8", "J": "7F958"}, "size": "84", "mode": "thumb", "params": [{"label": "Seed", "type": "u32"}, {"label": "RandomNum", "type": "u32", "notes": "Random number"}], "return": null, "notes": "Randomizes some values of the seed"}, {"label": "GenerateTimeAttackPasswordSeed", "addr": {"U": "7F980", "E": "8007C", "J": "7F9DC"}, "size": "1C8", "mode": "thumb", "params": [{"label": "TimeAttackDataPtr", "type": "TimeAttackData *", "notes": "Time attack data pointer"}], "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Generates a time attack password seed and calls GenerateTimeAttackPassword"}, {"label": "CheckSetNewTimeAttackRecord", "addr": {"U": "7FB48", "E": "80244", "J": "7FBA4"}, "size": "21C", "mode": "thumb", "params": null, "return": {"label": "NewRecordSet", "type": "bool", "notes": "New record set"}, "notes": "Checks if a new time attack record should be set"}, {"label": "CalculateOamPart4", "addr": {"U": "7FF58", "E": "80654", "J": "7FFB4"}, "size": "19C", "mode": "thumb", "params": [{"label": "SineYArrayOffset", "type": "u16", "notes": "Sine Y array offset"}, {"label": "Divisor", "type": "u16"}, {"label": "OamSlot", "type": "u32", "notes": "OAM slot"}], "return": null, "notes": "Calculates the part 4 of the OAM (used for special cases such as cutscenes and menus)"}, {"label": "VBlankCodeDuringIntroFuzz", "addr": {"U": "80184", "E": "80884", "J": "801E0"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during intro fuzz"}, {"label": "IntroInit", "addr": {"U": "801DC", "E": "808DC", "J": "80238"}, "size": {"U": "1D4", "E": "1E0", "J": "1D4"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the intro"}, {"label": "IntroTextProcessOAM", "addr": {"U": "803B0", "E": "80ABC", "J": "8040C"}, "size": "1A0", "mode": "thumb", "params": null, "return": null, "notes": "Processes the text OAM for the intro"}, {"label": "IntroEmergencyOrder", "addr": {"U": "806D0", "E": "80DDC", "J": "8072C"}, "size": "E8", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the \"Emergency Order\" part of the intro"}, {"label": "IntroShipFlyingTowardsCameraProcessOAM", "addr": {"U": "807B8", "E": "80EC4", "J": "80814"}, "size": "134", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff for the ship flying towards the camera"}, {"label": "IntroShipFlyingTowardsCamera", "addr": {"U": "808EC", "E": "80FF8", "J": "80948"}, "size": "9C", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the ship flying towards camera part of the intro"}, {"label": "IntroSamusInHerShip", "addr": {"U": "80988", "E": "81094", "J": "809E4"}, "size": "100", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the samus in her ship part of the intro"}, {"label": "IntroExterminate", "addr": {"U": "80A88", "E": "81194", "J": "80AE4"}, "size": "F0", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the \"Exterminate...\" part of the intro"}, {"label": "IntroViewOfZebesProcessOAM", "addr": {"U": "80B78", "E": "81284", "J": "80BD4"}, "size": "154", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff for the view of zebes"}, {"label": "IntroViewOfZebes", "addr": {"U": "80CCC", "E": "813D8", "J": "80D28"}, "size": {"U": "12C", "E": "134", "J": "12C"}, "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the view of zebes part of the intro"}, {"label": "IntroDefeat", "addr": {"U": "80DF8", "E": "8150C", "J": "80E54"}, "size": "100", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the \"And defeat...\" part of the intro"}, {"label": "IntroMotherBrain", "addr": {"U": "80EF8", "E": "8160C", "J": "80F54"}, "size": "120", "mode": "thumb", "params": null, "return": {"label": "Always0", "type": "bool", "notes": "Always 0"}, "notes": "Handles the mother brain view part of the intro"}, {"label": "IntroFuzzProcessOAM", "addr": {"U": "81018", "E": "8172C", "J": "81074"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff for the fuzz"}, {"label": "IntroFuzz", "addr": {"U": "810A0", "E": "817B4", "J": "810FC"}, "size": {"U": "DC", "E": "D4", "J": "DC"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the fuzz part of the intro"}, {"label": "TitleIntroSubroutine", "addr": {"U": "8117C", "E": "81888", "J": "811D8"}, "size": "CC", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the intro"}, {"label": "VBlankCodeDuringIntro", "addr": {"U": "81248", "E": "81954", "J": "812A4"}, "size": "D8", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during intro"}, {"label": "TourianEscapeSamusSurroundedCalcBG2Position", "addr": {"U": "81684", "E": "81D90", "J": "816E0"}, "size": "104", "mode": "thumb", "params": null, "return": null, "notes": "Calculates the new position and size of the BG2 for the camera zooming out effect"}, {"label": "TourianEscapeInit", "addr": {"U": "81D04", "E": "823FC", "J": "81D60"}, "size": {"U": "12C", "E": "120", "J": "12C"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the tourian escape"}, {"label": "TourianEscapeZebesExploding", "addr": {"U": "81E30", "E": "8251C", "J": "81E8C"}, "size": {"U": "834", "E": "830", "J": "834"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the rooms exploding and the ship leaving the planet with zebes exploding in the background part of the cutscene"}, {"label": "TourianEscapeSamusInHerShip", "addr": {"U": "82664", "E": "82D4C", "J": "826C0"}, "size": {"U": "36C", "E": "354", "J": "36C"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus in her ship part of the cutscene"}, {"label": "TourianEscapeSamusLookingAround", "addr": {"U": "829D0", "E": "830A0", "J": "82A2C"}, "size": {"U": "288", "E": "280", "J": "288"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus looking left and right in her ship part of the cutscene"}, {"label": "TourianEscapeSamusSurrounded", "addr": {"U": "82C58", "E": "83320", "J": "82CB4"}, "size": {"U": "178", "E": "174", "J": "178"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus being surrounded by space pirates part of the cutscene"}, {"label": "TourianEscapeSamusFlyingIn", "addr": {"U": "82DD0", "E": "83494", "J": "82E2C"}, "size": "1D0", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus flying towards the camera part of the cutscene"}, {"label": "TourianEscapeSamusChasedByPirates", "addr": {"U": "82FA0", "E": "83664", "J": "82FFC"}, "size": {"U": "424", "E": "420", "J": "424"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus being chased by pirates part of the cutscene"}, {"label": "TourianEscapeSamusChasedPiratesFiring", "addr": {"U": "833C4", "E": "83A84", "J": "83420"}, "size": {"U": "49C", "E": "488", "J": "49C"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus being chased by pirates that shoots beams part of the cutscene"}, {"label": "TourianEscapeSamusGettingShot", "addr": {"U": "83860", "E": "83F0C", "J": "838BC"}, "size": {"U": "4B0", "E": "4A8", "J": "4B0"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus flying in space and getting shot down part of the cutscene"}, {"label": "TourianEscapeSamusGoingToCrash", "addr": {"U": "83D10", "E": "843B4", "J": "83D6C"}, "size": {"U": "198", "E": "194", "J": "198"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus going to crash on zebes part of the cutscene"}, {"label": "TourianEscapeSamusCrashing", "addr": {"U": "83EA8", "E": "84548", "J": "83F04"}, "size": {"U": "25C", "E": "250", "J": "25C"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus crashing on zebes part of the cutscene"}, {"label": "TourianEscapeSamusLookingAtSky", "addr": {"U": "84104", "E": "84798", "J": "84160"}, "size": {"U": "288", "E": "28C", "J": "288"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus looking at the sky part of the cutscene"}, {"label": "TourianEscapeSamusLookingAtMotherShip", "addr": {"U": "8438C", "E": "84A24", "J": "843E8"}, "size": {"U": "388", "E": "378", "J": "388"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the samus looking at the mother ship part of the cutscene"}, {"label": "TourianEscapeCallSubroutines", "addr": {"U": "84714", "E": "84D9C", "J": "84770"}, "size": "E4", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Calls the other subroutines for the tourian escape cutscene, ends when the big monologue text ended"}, {"label": "FusionGalleryInit", "addr": {"U": "84870", "E": "84EF8", "J": "848CC"}, "size": {"U": "1D0", "E": "1D4", "J": "1D0"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the fusion gallery"}, {"label": "FusionGalleryDisplay", "addr": {"U": "84A40", "E": "850CC", "J": "84A9C"}, "size": "120", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Handles the gallery displaying the fusion images"}, {"label": "FusionGallerySubroutine", "addr": {"U": "84B60", "E": "851EC", "J": "84BBC"}, "size": "D4", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the fusion gallery"}, {"label": "LoadInGameTimerEndingGraphics", "addr": {"U": "84FB0", "E": "85B44", "J": "8500C"}, "size": {"U": "204", "E": "234", "J": "204"}, "mode": "thumb", "params": null, "return": null, "notes": "Loads the graphics for the IGT and completion percentage display at the end of the game"}, {"label": "VBlankCodeDuringGallery", "addr": {"U": "851B4", "E": "85D78", "J": "85210"}, "size": "164", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during gallery, ending image and credits"}, {"label": "VBlankCodeDuringEndScreen", "addr": {"U": "85318", "E": "85EDC", "J": "85374"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during end screen"}, {"label": "VBlankCodeDuringUnlockedOptions", "addr": {"U": "853C0", "E": "85F84", "J": "8541C"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during unlocked options"}, {"label": "CreditsInit", "addr": {"U": "85464", "E": "86028", "J": "854C0"}, "size": {"U": "1F8", "E": "1F4", "J": "1F8"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the credits"}, {"label": "DisplayCreditLine", "addr": {"U": "8565C", "E": "8621C", "J": "856B8"}, "size": {"U": "398", "E": "3F0", "J": "398"}, "mode": "thumb", "params": [{"label": "LineNum", "type": "u32", "notes": "Line Number"}], "return": {"label": "unk", "type": "u32"}, "notes": "Displays a line of text in the credits"}, {"label": "DisplayCredits", "addr": {"U": "859F4", "E": "8660C", "J": "85A50"}, "size": "18C", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Displays the credits"}, {"label": "CreditsChozoWallMovement", "addr": {"U": "85B80", "E": "86798", "J": "85BDC"}, "size": "90", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the scrolling of the wall at the end of the credits"}, {"label": "CreditsChozoWallZoom", "addr": {"U": "85C10", "E": "86828", "J": "85C6C"}, "size": {"U": "1F8", "E": "1F0", "J": "1F8"}, "mode": "thumb", "params": null, "return": {"label": "Stage", "type": "u8", "notes": "2 if ended, 0 otherwise"}, "notes": "Handles the zooming on the chozo wall at the end of the credits"}, {"label": "EndScreenInit", "addr": {"U": "85E08", "E": "86A18", "J": "85E64"}, "size": {"U": "248", "E": "244", "J": "248"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the end screen (before the ending image and after the credits)"}, {"label": "EndScreenSamusPosing", "addr": {"U": "86050", "E": "86C5C", "J": "860AC"}, "size": {"U": "764", "E": "77C", "J": "764"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles samus posing before the ending image"}, {"label": "EndingImageInit", "addr": {"U": "867B4", "E": "873D8", "J": "86810"}, "size": {"U": "29C", "E": "320", "J": "29C"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the ending image"}, {"label": "EndingImageDisplayText", "addr": {"U": "86A50", "E": "876F8", "J": "86AAC"}, "size": {"U": "23C", "E": "244", "J": "23C"}, "mode": "thumb", "params": null, "return": null, "notes": "Displays the text on an ending image (IGT and completion percentage)"}, {"label": "EndingImageDisplay", "addr": {"U": "86C8C", "E": "8793C", "J": "86CE8"}, "size": "1EC", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the display of the ending image"}, {"label": "UnlockedOptionsInit", "addr": {"U": "86E78", "E": "87B28", "J": "86ED4"}, "size": {"U": "158", "E": "148", "J": "158"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the unlocked options pop up after the ending image"}, {"label": "UnlockedOptionsPopUp", "addr": {"U": "86FD0", "E": "87C70", "J": "8702C"}, "size": "20C", "mode": "thumb", "params": null, "return": {"label": "Action", "type": "u8", "notes": "Action (0 = nothing, 1 = changing pop-up, 2 = leaving)"}, "notes": "Handles the pop up displaying what has been unlocked after beating the game"}, {"label": "CreditsSubroutine", "addr": {"U": "871DC", "E": "87E7C", "J": "87238"}, "size": "208", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the credits (credits, end screen ending image and unlocked options)"}, {"label": "GalleryInit", "addr": {"U": "873E4", "E": "88084", "J": "87440"}, "size": "238", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the gallery"}, {"label": "GalleryDisplay", "addr": {"U": "8761C", "E": "882BC", "J": "87678"}, "size": "15C", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Handles the gallery displaying the ending images"}, {"label": "GallerySubroutine", "addr": {"U": "87778", "E": "88418", "J": "877D4"}, "size": "D4", "mode": "thumb", "params": null, "return": {"label": "Leaving", "type": "bool"}, "notes": "Subroutine for the gallery"}, {"label": "VBlankDuringChozodiaEscape", "addr": {"U": "8784C", "E": "884EC", "J": "878A8"}, "size": "EC", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during the chozodia escape"}, {"label": "GetPercentAndEndingNum", "addr": {"U": "87AEC", "E": "8878C", "J": "87B48"}, "size": "11C", "mode": "thumb", "params": null, "return": {"label": "ItemCountsAndEndingNum", "type": "u32", "notes": "Item counts and ending number"}, "notes": "Calculates the ending percentage and determines the ending number"}, {"label": "ChozodiaEscapeProcessOAM", "addr": {"U": "87C08", "E": "888A8", "J": "87C64"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Processes a part of the OAM related stuff (ship exploding, escape ship leaving the planet and mission accomplished text)"}, {"label": "ChozodiaEscapeProcessOAM2", "addr": {"U": "87CFC", "E": "8899C", "J": "87D58"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Processes a part of the OAM related stuff (ship opening/escape ship leaving and escape ship arriving)"}, {"label": "ChozodiaEscapeInit", "addr": {"U": "87E4C", "E": "88AEC", "J": "87EA8"}, "size": {"U": "30C", "E": "308", "J": "30C"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the chozodia escape"}, {"label": "ChozodiaEscapeEscapeShipLeaving", "addr": {"U": "88158", "E": "88DF4", "J": "881B4"}, "size": "184", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the escape ship leaving part"}, {"label": "ChozodiaEscapeMotherShipHeatingUp", "addr": {"U": "882DC", "E": "88F78", "J": "88338"}, "size": "22C", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the mother ship heating up part"}, {"label": "ChozodiaEscapeMotherShipBlowingUp", "addr": {"U": "88508", "E": "891A4", "J": "88564"}, "size": {"U": "3EC", "E": "3E4", "J": "3EC"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the mother ship blowing up part"}, {"label": "ChozodiaEscapeEscapeShipLeavingPlanet", "addr": {"U": "888F4", "E": "89588", "J": "88950"}, "size": {"U": "30C", "E": "31C", "J": "30C"}, "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Handles the escape ship leaving the planet part"}, {"label": "ChozodiaEscapeMissionAccomplished", "addr": {"U": "88C00", "E": "898A4", "J": "88C5C"}, "size": {"U": "15C", "E": "144", "J": "15C"}, "mode": "thumb", "params": null, "return": {"label": "Stage", "type": "u8", "notes": "2 if ended, 0 otherwise"}, "notes": "Handles the mission accomplished part"}, {"label": "ChozodiaEscapeSubroutine", "addr": {"U": "88D5C", "E": "899E8", "J": "88DB8"}, "size": "144", "mode": "thumb", "params": null, "return": {"label": "Ended", "type": "bool"}, "notes": "Subroutine for the chozodia escape"}, {"label": "SetSIOCNTStartBitActive", "addr": {"U": "89D64", "E": "8A9F0", "J": "89DC0"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the \"Start Bit\" flag of SIOCNT"}, {"label": "CheckError", "addr": {"U": "89F94", "E": "8AC20", "J": "89FF0"}, "size": "198", "mode": "thumb", "params": null, "return": {"label": "unk", "type": "u32"}, "notes": "Checks if an error has occured and calls DisplayError? If yes"}, {"label": "DetectError", "addr": {"U": "8A3AC", "E": "8B038", "J": "8A408"}, "size": "120", "mode": "thumb", "params": [{"label": "param_0", "type": "u32"}, {"label": "param_1", "type": "u32"}, {"label": "param_2", "type": "u32"}], "return": {"label": "ErrorFlag", "type": "bool", "notes": "Error flag"}, "notes": "Detects if an error has occured"}, {"label": "SetSIOCNTStartBitActive_Duplicate", "addr": {"U": "8A840", "E": "8B4CC", "J": "8A89C"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the \"Start Bit\" flag of SIOCNT, same code as 89d64"}, {"label": "bx_r0", "addr": {"U": "8ABF8", "E": "8B884", "J": "8AC54"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r0"}, {"label": "bx_r1", "addr": {"U": "8ABFC", "E": "8B888", "J": "8AC58"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r1"}, {"label": "bx_r2", "addr": {"U": "8AC00", "E": "8B88C", "J": "8AC5C"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r2"}, {"label": "bx_r3", "addr": {"U": "8AC04", "E": "8B890", "J": "8AC60"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r3"}, {"label": "bx_r4", "addr": {"U": "8AC08", "E": "8B894", "J": "8AC64"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r4"}, {"label": "bx_r5", "addr": {"U": "8AC0C", "E": "8B898", "J": "8AC68"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r5"}, {"label": "bx_r6", "addr": {"U": "8AC10", "E": "8B89C", "J": "8AC6C"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r6"}, {"label": "bx_r7", "addr": {"U": "8AC14", "E": "8B8A0", "J": "8AC70"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r7"}, {"label": "bx_r8", "addr": {"U": "8AC18", "E": "8B8A4", "J": "8AC74"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r8"}, {"label": "bx_r9", "addr": {"U": "8AC1C", "E": "8B8A8", "J": "8AC78"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r9"}, {"label": "bx_r10", "addr": {"U": "8AC20", "E": "8B8AC", "J": "8AC7C"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r10"}, {"label": "bx_r11", "addr": {"U": "8AC24", "E": "8B8B0", "J": "8AC80"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r11"}, {"label": "bx_r12", "addr": {"U": "8AC28", "E": "8B8B4", "J": "8AC84"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r12"}, {"label": "bx_r13", "addr": {"U": "8AC2C", "E": "8B8B8", "J": "8AC88"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r13"}, {"label": "bx_r14", "addr": {"U": "8AC30", "E": "8B8BC", "J": "8AC8C"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "bx r14"}, {"label": "Divide_Signed", "addr": {"U": "8AC34", "E": "8B8C0", "J": "8AC90"}, "size": "94", "mode": "thumb", "params": [{"label": "Dividend", "type": "s32"}, {"label": "Divisor", "type": "s32"}], "return": {"label": "Quotient", "type": "s32"}, "notes": "Function __divsi3 from divmod.c in libgcc"}, {"label": "DivideBy0Handler", "addr": {"U": "8ACC8", "E": "8B954", "J": "8AD24"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Divide by 0 handler (empty)"}, {"label": "DoubleToInt_Overflow", "addr": {"U": "8ACCC", "E": "8B958", "J": "8AD28"}, "size": "44", "mode": "thumb", "params": [{"label": "DoubleUpper32Bits", "type": "u32", "notes": "Double upper 32 bits"}, {"label": "DoubleLower32Bits", "type": "u32", "notes": "Double lower 32 bits"}], "return": {"label": "Integer", "type": "s32"}, "notes": "If the double is >= 2^31, treat as integer overflow and return a negative value"}, {"label": "Modulo_Signed", "addr": {"U": "8AD10", "E": "8B99C", "J": "8AD6C"}, "size": "D0", "mode": "thumb", "params": [{"label": "Dividend", "type": "s32"}, {"label": "Divisor", "type": "s32"}], "return": {"label": "Remainder", "type": "s32"}, "notes": "Function __modsi3 from divmod.c in libgcc"}, {"label": "Divide_Unsigned", "addr": {"U": "8ADE0", "E": "8BA6C", "J": "8AE3C"}, "size": "78", "mode": "thumb", "params": [{"label": "Dividend", "type": "u32"}, {"label": "Divisor", "type": "u32"}], "return": {"label": "Quotient", "type": "u32"}, "notes": "Function __udivsi3 from udivmod.c in libgcc"}, {"label": "Modulo_Unsigned", "addr": {"U": "8AE58", "E": "8BAE4", "J": "8AEB4"}, "size": "C0", "mode": "thumb", "params": [{"label": "Dividend", "type": "u32"}, {"label": "Divisor", "type": "u32"}], "return": {"label": "Remainder", "type": "u32"}, "notes": "Function __umodsi3 from udivmod.c in libgcc"}, {"label": "PackDouble", "addr": {"U": "8AF18", "E": "8BBA4", "J": "8AF74"}, "size": "148", "mode": "thumb", "params": [{"label": "PtrToUnpackedData", "type": "FloatingPointNum *", "notes": "Pointer to unpacked data"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function pack_d from fp-bit.c in libgcc"}, {"label": "UnpackDouble", "addr": {"U": "8B060", "E": "8BCEC", "J": "8B0BC"}, "size": "D8", "mode": "thumb", "params": [{"label": "PtrToDoubleValue", "type": "u32 *", "notes": "Pointer to double value"}, {"label": "PtrToUnpackedData", "type": "FloatingPointNum *", "notes": "Pointer to unpacked data"}], "return": null, "notes": "Function unpack_d in fp-bit.c in libgcc"}, {"label": "AddDoubleParts", "addr": {"U": "8B138", "E": "8BDC4", "J": "8B194"}, "size": "26C", "mode": "thumb", "params": [{"label": "PtrToUnpackedDouble1", "type": "FloatingPointNum *", "notes": "Pointer to unpacked double 1"}, {"label": "PtrToUnpackedDouble2", "type": "FloatingPointNum *", "notes": "Pointer to unpacked double 2"}, {"label": "PtrToTempUnpackedDouble", "type": "FloatingPointNum *", "notes": "Pointer to temp unpacked double"}], "return": {"label": "PtrToUnpackedDoubleResult", "type": "FloatingPointNum *", "notes": "Pointer to unpacked double result"}, "notes": "Function _fpadd_parts in fp-bit.c in libgcc"}, {"label": "AddDoubles", "addr": {"U": "8B3A4", "E": "8C030", "J": "8B400"}, "size": "30", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function add from fp-bit.c in libgcc"}, {"label": "SubtractDoubles", "addr": {"U": "8B3D4", "E": "8C060", "J": "8B430"}, "size": "38", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function sub from fp-bit.c in libgcc"}, {"label": "MultiplyDoubles", "addr": {"U": "8B40C", "E": "8C098", "J": "8B468"}, "size": "2A8", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function multiply from fp-bit.c in libgcc"}, {"label": "DivideDoubles", "addr": {"U": "8B6B4", "E": "8C340", "J": "8B710"}, "size": "188", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function divide from fp-bit.c in libgcc"}, {"label": "CompareDoubleParts", "addr": {"U": "8B83C", "E": "8C4C8", "J": "8B898"}, "size": "100", "mode": "thumb", "params": [{"label": "PtrToUnpackedDouble1", "type": "FloatingPointNum *", "notes": "Pointer to unpacked double 1"}, {"label": "PtrToUnpackedDouble2", "type": "FloatingPointNum *", "notes": "Pointer to unpacked double 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function __fpcmp_parts from fp-bit.c in libgcc"}, {"label": "CompareDoubles", "addr": {"U": "8B93C", "E": "8C5C8", "J": "8B998"}, "size": "2C", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function compare from fp-bit.c in libgcc"}, {"label": "DoublesEqual", "addr": {"U": "8B968", "E": "8C5F4", "J": "8B9C4"}, "size": "4C", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _eq_f2 from fp-bit.c in libgcc"}, {"label": "DoublesNotEqual", "addr": {"U": "8B9B4", "E": "8C640", "J": "8BA10"}, "size": "4C", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _ne_f2 from fp-bit.c in libgcc"}, {"label": "DoublesGreaterThan", "addr": {"U": "8BA00", "E": "8C68C", "J": "8BA5C"}, "size": "4C", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _gt_f2 from fp-bit.c in libgcc"}, {"label": "DoublesGreaterEqual", "addr": {"U": "8BA4C", "E": "8C6D8", "J": "8BAA8"}, "size": "4C", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _ge_f2 from fp-bit.c in libgcc"}, {"label": "DoublesLessThan", "addr": {"U": "8BA98", "E": "8C724", "J": "8BAF4"}, "size": "4C", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _lt_f2 from fp-bit.c in libgcc"}, {"label": "DoublesLessEqual", "addr": {"U": "8BAE4", "E": "8C770", "J": "8BB40"}, "size": "4C", "mode": "thumb", "params": [{"label": "Double1Upper32Bits", "type": "u32", "notes": "Double 1 upper 32 bits"}, {"label": "Double1Lower32Bits", "type": "u32", "notes": "Double 1 lower 32 bits"}, {"label": "Double2Upper32Bits", "type": "u32", "notes": "Double 2 upper 32 bits"}, {"label": "Double2Lower32Bits", "type": "u32", "notes": "Double 2 lower 32 bits"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _le_f2 from fp-bit.c in libgcc"}, {"label": "IntToDouble", "addr": {"U": "8BB30", "E": "8C7BC", "J": "8BB8C"}, "size": "7C", "mode": "thumb", "params": [{"label": "Integer", "type": "s32"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function si_to_float from fp-bit.c in libgcc"}, {"label": "DoubleToInt", "addr": {"U": "8BBAC", "E": "8C838", "J": "8BC08"}, "size": "74", "mode": "thumb", "params": [{"label": "DoubleUpper32Bits", "type": "u32", "notes": "Double upper 32 bits"}, {"label": "DoubleLower32Bits", "type": "u32", "notes": "Double lower 32 bits"}], "return": {"label": "Integer", "type": "s32"}, "notes": "Function float_to_si from fp-bit.c in libgcc"}, {"label": "NegateDouble", "addr": {"U": "8BC20", "E": "8C8AC", "J": "8BC7C"}, "size": "28", "mode": "thumb", "params": [{"label": "DoubleUpper32Bits", "type": "u32", "notes": "Double upper 32 bits"}, {"label": "DoubleLower32Bits", "type": "u32", "notes": "Double lower 32 bits"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function negate from fp-bit.c in libgcc"}, {"label": "CreateDouble", "addr": {"U": "8BC48", "E": "8C8D4", "J": "8BCA4"}, "size": "28", "mode": "thumb", "params": [{"label": "Class", "type": "u32", "enum": "FloatingPointClass"}, {"label": "Sign", "type": "u32"}, {"label": "NormalizedExponent", "type": "s32", "notes": "Normalized exponent"}, {"label": "FractionLowerBits", "type": "u32", "notes": "Fraction lower bits"}, {"label": "FractionUpperBits", "type": "u32", "notes": "Fraction upper bits"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function __make_dp from fp-bit.c in libgcc"}, {"label": "DoubleToFloat", "addr": {"U": "8BC70", "E": "8C8FC", "J": "8BCCC"}, "size": "44", "mode": "thumb", "params": [{"label": "DoubleUpper32Bits", "type": "u32", "notes": "Double upper 32 bits"}, {"label": "DoubleLower32Bits", "type": "u32", "notes": "Double lower 32 bits"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function df_to_sf from fp-bit.c in libgcc"}, {"label": "PackFloat", "addr": {"U": "8BCB4", "E": "8C940", "J": "8BD10"}, "size": "B8", "mode": "thumb", "params": [{"label": "PtrToUnpackedData", "type": "FloatingPointNum *", "notes": "Pointer to unpacked data"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function pack_d from fp-bit.c in libgcc"}, {"label": "UnpackFloat", "addr": {"U": "8BD6C", "E": "8C9F8", "J": "8BDC8"}, "size": "7C", "mode": "thumb", "params": [{"label": "PtrToFloatValue", "type": "u32 *", "notes": "Pointer to float value"}, {"label": "PtrToUnpackedData", "type": "FloatingPointNum *", "notes": "Pointer to unpacked data"}], "return": null, "notes": "Function unpack_d in fp-bit.c in libgcc"}, {"label": "AddFloatParts", "addr": {"U": "8BDE8", "E": "8CA74", "J": "8BE44"}, "size": "17C", "mode": "thumb", "params": [{"label": "PtrToUnpackedFloat1", "type": "FloatingPointNum *", "notes": "Pointer to unpacked float 1"}, {"label": "PtrToUnpackedFloat2", "type": "FloatingPointNum *", "notes": "Pointer to unpacked float 2"}, {"label": "PtrToTempUnpackedFloat", "type": "FloatingPointNum *", "notes": "Pointer to temp unpacked float"}], "return": {"label": "PtrToUnpackedFloatResult", "type": "FloatingPointNum *", "notes": "Pointer to unpacked float result"}, "notes": "Function _fpadd_parts in fp-bit.c in libgcc"}, {"label": "AddFloats", "addr": {"U": "8BF64", "E": "8CBF0", "J": "8BFC0"}, "size": "2C", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function add from fp-bit.c in libgcc"}, {"label": "SubtractFloats", "addr": {"U": "8BF90", "E": "8CC1C", "J": "8BFEC"}, "size": "34", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function sub from fp-bit.c in libgcc"}, {"label": "MultiplyFloats", "addr": {"U": "8BFC4", "E": "8CC50", "J": "8C020"}, "size": "164", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function multiply from fp-bit.c in libgcc"}, {"label": "DivideFloats", "addr": {"U": "8C128", "E": "8CDB4", "J": "8C184"}, "size": "EC", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function divide from fp-bit.c in libgcc"}, {"label": "CompareFloatParts", "addr": {"U": "8C214", "E": "8CEA0", "J": "8C270"}, "size": "E4", "mode": "thumb", "params": [{"label": "PtrToUnpackedFloat1", "type": "FloatingPointNum *", "notes": "Pointer to unpacked float 1"}, {"label": "PtrToUnpackedFloat2", "type": "FloatingPointNum *", "notes": "Pointer to unpacked float 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function __fpcmp_parts from fp-bit.c in libgcc"}, {"label": "CompareFloats", "addr": {"U": "8C2F8", "E": "8CF84", "J": "8C354"}, "size": "28", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function compare from fp-bit.c in libgcc"}, {"label": "FloatsEqual", "addr": {"U": "8C320", "E": "8CFAC", "J": "8C37C"}, "size": "48", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _eq_f2 from fp-bit.c in libgcc"}, {"label": "FloatsNotEqual", "addr": {"U": "8C368", "E": "8CFF4", "J": "8C3C4"}, "size": "48", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _ne_f2 from fp-bit.c in libgcc"}, {"label": "FloatsGreaterThan", "addr": {"U": "8C3B0", "E": "8D03C", "J": "8C40C"}, "size": "48", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _gt_f2 from fp-bit.c in libgcc"}, {"label": "FloatsGreaterEqual", "addr": {"U": "8C3F8", "E": "8D084", "J": "8C454"}, "size": "48", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _ge_f2 from fp-bit.c in libgcc"}, {"label": "FloatsLessThan", "addr": {"U": "8C440", "E": "8D0CC", "J": "8C49C"}, "size": "48", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _lt_f2 from fp-bit.c in libgcc"}, {"label": "FloatsLessEqual", "addr": {"U": "8C488", "E": "8D114", "J": "8C4E4"}, "size": "48", "mode": "thumb", "params": [{"label": "Float1", "type": "u32", "notes": "Float 1"}, {"label": "Float2", "type": "u32", "notes": "Float 2"}], "return": {"label": "ComparisonResult", "type": "s8", "notes": "Comparison result (-1 = less, 0 = equal, 1 = greater)"}, "notes": "Function _le_f2 from fp-bit.c in libgcc"}, {"label": "IntToFloat", "addr": {"U": "8C4D0", "E": "8D15C", "J": "8C52C"}, "size": "60", "mode": "thumb", "params": [{"label": "Integer", "type": "s32"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function si_to_float from fp-bit.c in libgcc"}, {"label": "FloatToInt", "addr": {"U": "8C530", "E": "8D1BC", "J": "8C58C"}, "size": "68", "mode": "thumb", "params": [{"label": "FloatValue", "type": "u32", "notes": "Float value"}], "return": {"label": "Integer", "type": "s32"}, "notes": "Function float_to_si from fp-bit.c in libgcc"}, {"label": "NegateFloat", "addr": {"U": "8C598", "E": "8D224", "J": "8C5F4"}, "size": "24", "mode": "thumb", "params": [{"label": "FloatValue", "type": "u32", "notes": "Float value"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function negate from fp-bit.c in libgcc"}, {"label": "CreateFloat", "addr": {"U": "8C5BC", "E": "8D248", "J": "8C618"}, "size": "18", "mode": "thumb", "params": [{"label": "Class", "type": "u32", "enum": "FloatingPointClass"}, {"label": "Sign", "type": "u32"}, {"label": "NormalizedExponent", "type": "s32", "notes": "Normalized exponent"}, {"label": "Fraction", "type": "u32"}], "return": {"label": "FloatValue", "type": "u32", "notes": "Float value"}, "notes": "Function __make_fp from fp-bit.c in libgcc"}, {"label": "FloatToDouble", "addr": {"U": "8C5D4", "E": "8D260", "J": "8C630"}, "size": "2C", "mode": "thumb", "params": [{"label": "FloatValue", "type": "u32", "notes": "Float value"}], "return": {"label": "DoubleValue", "type": "u32", "notes": "Double value (uses r0 and r1)"}, "notes": "Function sf_to_df from fp-bit.c in libgcc"}, {"label": "RightShiftLongInt", "addr": {"U": "8C600", "E": "8D28C", "J": "8C65C"}, "size": "34", "mode": "thumb", "params": [{"label": "LongIntLower32Bits", "type": "u32", "notes": "Long int lower 32 bits"}, {"label": "LongIntUpper32Bits", "type": "u32", "notes": "Long int upper 32 bits"}, {"label": "ShiftAmount", "type": "u32", "notes": "Shift amount"}], "return": {"label": "LongInt", "type": "u32", "notes": "Long int (uses r0 and r1)"}, "notes": "Right shift long integer"}, {"label": "MultiplyLongInts", "addr": {"U": "8C634", "E": "8D2C0", "J": "8C690"}, "size": "70", "mode": "thumb", "params": [{"label": "LongInt1Lower32Bits", "type": "u32", "notes": "Long int 1 lower 32 bits"}, {"label": "LongInt1Upper32Bits", "type": "u32", "notes": "Long int 1 upper 32 bits"}, {"label": "LongInt2Lower32Bits", "type": "u32", "notes": "Long int 2 lower 32 bits"}, {"label": "LongInt2Upper32Bits", "type": "u32", "notes": "Long int 2 upper 32 bits"}], "return": {"label": "LongInt", "type": "u32", "notes": "Long int (uses r0 and r1)"}, "notes": "Multiply long integers"}, {"label": "NegateLongInt", "addr": {"U": "8C6A4", "E": "8D330", "J": "8C700"}, "size": "18", "mode": "thumb", "params": [{"label": "LongIntLower32Bits", "type": "u32", "notes": "Long int lower 32 bits"}, {"label": "LongIntUpper32Bits", "type": "u32", "notes": "Long int upper 32 bits"}], "return": {"label": "LongInt", "type": "u32", "notes": "Long int (uses r0 and r1)"}, "notes": "Negate long integer"}, {"label": "MemoryCopy", "addr": {"U": "8C6BC", "E": "8D348", "J": "8C718"}, "size": "60", "mode": "thumb", "params": [{"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}, {"label": "SourceAddress", "type": "u8 *", "notes": "Source address"}, {"label": "Size", "type": "u32"}], "return": {"label": "DestinationAddress", "type": "u8 *", "notes": "Destination address"}, "notes": "Function memcpy from memcpy.c in libgcc"}]