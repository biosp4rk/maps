{"version":3,"file":"constants.js","sourceRoot":"","sources":["src/constants.ts"],"names":[],"mappings":"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","sourcesContent":["\nexport const GAMES = [\n  {\n    label: 'Metroid Fusion',\n    value: 'mf',\n  },\n  {\n    label: 'Metroid Zero Mission',\n    value: 'zm',\n  }\n];\n\nexport const MAP_RAM = 'ram';\nexport const MAP_CODE = 'code';\nexport const MAP_DATA = 'data';\nexport const MAP_STRUCTS = 'structs';\nexport const MAP_ENUMS = 'enums';\n\nexport const MAPS = [\n  {\n    label: 'RAM',\n    value: MAP_RAM\n  },\n  {\n    label: 'ROM Code',\n    value: MAP_CODE\n  },\n  {\n    label: 'ROM Data',\n    value: MAP_DATA\n  },\n  {\n    label: 'Structs',\n    value: MAP_STRUCTS\n  },\n  {\n    label: 'Enums',\n    value: MAP_ENUMS\n  }\n];\n\nexport enum TableType {\n  None,\n  RamList,\n  CodeList,\n  DataList,\n  StructList,\n  EnumList,\n  StructDef,\n  EnumDef\n}\n\nexport const REGIONS = ['U', 'E', 'J', 'C'];\n\nexport const KEY_ADDR = 'addr';\nexport const KEY_COUNT = 'count';\nexport const KEY_DESC = 'desc';\nexport const KEY_ENUM = 'enum';\nexport const KEY_LABEL = 'label';\nexport const KEY_LEN = 'length';\nexport const KEY_MODE = 'mode';\nexport const KEY_NOTES = 'notes';\nexport const KEY_OFF = 'offset';\nexport const KEY_PARAMS = 'params';\nexport const KEY_RET = 'return';\nexport const KEY_SIZE = 'size';\nexport const KEY_TAGS = 'tags';\nexport const KEY_TYPE = 'type';\nexport const KEY_VAL = 'val';\nexport const KEY_VALS = 'vals';\nexport const KEY_VARS = 'vars';\n\nconst HEAD_ADDR = 'Address';\nconst HEAD_DESC = 'Description';\nconst HEAD_LABEL = 'Label';\nconst HEAD_LEN = 'Length';\nconst HEAD_NOTES = 'Notes';\nconst HEAD_OFF = 'Offset';\nconst HEAD_PARAMS = 'Arguments';\nconst HEAD_RET = 'Returns';\nconst HEAD_SIZE = 'Size';\nconst HEAD_TAGS = 'Category';\nconst HEAD_TYPE = 'Type';\nconst HEAD_VAL = 'Value';\nconst HEAD_VALS = 'Values';\nconst HEAD_VARS = 'Variables';\n\nconst HEADINGS: { [key: string]: string } = {\n  [KEY_ADDR]: HEAD_ADDR,\n  [KEY_DESC]: HEAD_DESC,\n  [KEY_LABEL]: HEAD_LABEL,\n  [KEY_LEN]: HEAD_LEN,\n  [KEY_NOTES]: HEAD_NOTES,\n  [KEY_OFF]: HEAD_OFF,\n  [KEY_PARAMS]: HEAD_PARAMS,\n  [KEY_RET]: HEAD_RET,\n  [KEY_SIZE]: HEAD_SIZE,\n  [KEY_TAGS]: HEAD_TAGS,\n  [KEY_TYPE]: HEAD_TYPE,\n  [KEY_VAL]: HEAD_VAL,\n  [KEY_VALS]: HEAD_VALS,\n  [KEY_VARS]: HEAD_VARS\n};\n\nexport const CATEGORIES: { [key: string]: string } = {\n  'flags': 'Flags',\n  'ascii': 'ASCII',\n  'text': 'Text',\n  'rle': 'RLE',\n  'lz': 'LZ',\n  'gfx': 'Graphics',\n  'tilemap': 'Tilemap',\n  'palette': 'Palette',\n  'oam_frame': 'OAM frame',\n  'bg_blocks': 'BG block map',\n  'bg_map': 'BG tilemap',\n  'thumb': 'THUMB',\n  'arm': 'ARM',\n};\n\nexport function getMainTableType(map: string): TableType {\n  switch(map) {\n    case MAP_RAM: return TableType.RamList;\n    case MAP_DATA: return TableType.DataList;\n    case MAP_CODE: return TableType.CodeList;\n    case MAP_STRUCTS: return TableType.StructList;\n    case MAP_ENUMS: return TableType.EnumList;\n    default: return TableType.None;\n  }\n}\n\nexport function getHeading(key: string): string {\n  return HEADINGS[key];\n}\n\nexport function getHideableColumns(tableType: TableType): { head: string; key: string; }[] {\n  if (tableType === TableType.RamList || tableType === TableType.DataList) {\n    return [\n      {\n        head: HEAD_LEN,\n        key: KEY_LEN\n      },\n      {\n        head: HEAD_TAGS,\n        key: KEY_TAGS\n      },\n      {\n        head: HEAD_TYPE,\n        key: KEY_TYPE\n      },\n      {\n        head: HEAD_LABEL,\n        key: KEY_LABEL\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  } else if (tableType === TableType.CodeList) {\n    return [\n      {\n        head: HEAD_LEN,\n        key: KEY_LEN\n      },\n      {\n        head: HEAD_LABEL,\n        key: KEY_LABEL\n      },\n      {\n        head: HEAD_PARAMS,\n        key: KEY_PARAMS\n      },\n      {\n        head: HEAD_RET,\n        key: KEY_RET\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  } else if (tableType === TableType.StructList) {\n    return [\n      {\n        head: HEAD_LABEL,\n        key: KEY_LABEL\n      },\n      {\n        head: HEAD_SIZE,\n        key: KEY_SIZE\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  } else if (tableType === TableType.EnumList) {\n    return [\n      {\n        head: HEAD_LABEL,\n        key: KEY_LABEL\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  }\n  return [];\n}\n"]}