{"version":3,"file":"headings.js","sourceRoot":"","sources":["src/headings.ts"],"names":[],"mappings":"AACA,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC;AAChC,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,SAAS,GAAG,OAAO,CAAC;AACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,QAAQ,CAAC;AACjC,MAAM,CAAC,MAAM,OAAO,GAAG,SAAS,CAAC;AACjC,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC;AAChC,MAAM,CAAC,MAAM,OAAO,GAAG,OAAO,CAAC;AAC/B,MAAM,CAAC,MAAM,SAAS,GAAG,OAAO,CAAC;AAEjC,MAAM,SAAS,GAAG,SAAS,CAAC;AAC5B,MAAM,QAAQ,GAAG,QAAQ,CAAC;AAC1B,MAAM,SAAS,GAAG,MAAM,CAAC;AACzB,MAAM,SAAS,GAAG,UAAU,CAAC;AAC7B,MAAM,UAAU,GAAG,OAAO,CAAC;AAC3B,MAAM,SAAS,GAAG,WAAW,CAAC;AAC9B,MAAM,QAAQ,GAAG,SAAS,CAAC;AAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC;AAC1B,MAAM,QAAQ,GAAG,OAAO,CAAC;AACzB,MAAM,UAAU,GAAG,OAAO,CAAC;AAE3B,MAAM,QAAQ,GAA8B;IAC1C,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,OAAO,CAAC,EAAE,QAAQ;IACnB,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,SAAS,CAAC,EAAE,UAAU;IACvB,CAAC,SAAS,CAAC,EAAE,UAAU;IACvB,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,OAAO,CAAC,EAAE,QAAQ;IACnB,CAAC,OAAO,CAAC,EAAE,QAAQ;IACnB,CAAC,OAAO,CAAC,EAAE,QAAQ;CACpB,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAExE,MAAM,UAAU,UAAU,CAAC,GAAW;IACpC,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,GAAW;IAC5C,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,EAAE;QACnC,OAAO;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,OAAO;aACb;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,GAAG,EAAE,QAAQ;aACd;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,GAAG,EAAE,QAAQ;aACd;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;SACF,CAAC;KACH;SACI,IAAI,GAAG,KAAK,MAAM,EAAE;QACvB,OAAO;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,OAAO;aACb;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,GAAG,EAAE,QAAQ;aACd;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,OAAO;aACb;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;SACF,CAAC;KACH;IACD,OAAO,EAAE,CAAC;AACZ,CAAC","sourcesContent":["\nexport const KEY_ADDR = 'addr';\nexport const KEY_LEN = 'length';\nexport const KEY_TYPE = 'type';\nexport const KEY_TAGS = 'tags';\nexport const KEY_LABEL = 'label';\nexport const KEY_ARGS = 'params';\nexport const KEY_RET = 'returns';\nexport const KEY_OFF = 'offset';\nexport const KEY_VAL = 'value';\nexport const KEY_NOTES = 'notes';\n\nconst HEAD_ADDR = 'Address';\nconst HEAD_LEN = 'Length';\nconst HEAD_TYPE = 'Type';\nconst HEAD_TAGS = 'Category';\nconst HEAD_LABEL = 'Label';\nconst HEAD_ARGS = 'Arguments';\nconst HEAD_RET = 'Returns';\nconst HEAD_OFF = 'Offset';\nconst HEAD_VAL = 'Value';\nconst HEAD_NOTES = 'Notes';\n\nconst HEADINGS: { [key: string]: string } = {\n  [KEY_ADDR]: HEAD_ADDR,\n  [KEY_LEN]: HEAD_LEN,\n  [KEY_TYPE]: HEAD_TYPE,\n  [KEY_TAGS]: HEAD_TAGS,\n  [KEY_LABEL]: HEAD_LABEL,\n  [KEY_NOTES]: HEAD_NOTES,\n  [KEY_ARGS]: HEAD_ARGS,\n  [KEY_RET]: HEAD_RET,\n  [KEY_OFF]: HEAD_OFF,\n  [KEY_VAL]: HEAD_VAL\n};\n\nexport const SEARCHABLE_KEYS = [KEY_LABEL, KEY_ADDR, KEY_ARGS, KEY_RET];\n\nexport function getHeading(key: string): string {\n  return HEADINGS[key];\n}\n\nexport function getHideableColumns(map: string): { head: string; key: string; }[] {\n  if (map === 'ram' || map === 'data') {\n    return [\n      {\n        head: HEAD_LEN,\n        key: KEY_LEN\n      },\n      {\n        head: HEAD_TAGS,\n        key: KEY_TAGS\n      },\n      {\n        head: HEAD_TYPE,\n        key: KEY_TYPE\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  }\n  else if (map === 'code') {\n    return [\n      {\n        head: HEAD_LEN,\n        key: KEY_LEN\n      },\n      {\n        head: HEAD_ARGS,\n        key: KEY_ARGS\n      },\n      {\n        head: HEAD_RET,\n        key: KEY_RET\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  }\n  return [];\n}\n"]}