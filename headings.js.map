{"version":3,"file":"headings.js","sourceRoot":"","sources":["src/headings.ts"],"names":[],"mappings":"AACA,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,SAAS,GAAG,OAAO,CAAC;AACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,SAAS,GAAG,OAAO,CAAC;AACjC,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC;AAChC,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,SAAS,GAAG,OAAO,CAAC;AACjC,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC;AAChC,MAAM,CAAC,MAAM,UAAU,GAAG,QAAQ,CAAC;AACnC,MAAM,CAAC,MAAM,OAAO,GAAG,SAAS,CAAC;AACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,OAAO,GAAG,KAAK,CAAC;AAC7B,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC/B,MAAM,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAE/B,MAAM,SAAS,GAAG,SAAS,CAAC;AAC5B,MAAM,SAAS,GAAG,aAAa,CAAC;AAChC,MAAM,UAAU,GAAG,OAAO,CAAC;AAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC;AAC1B,MAAM,UAAU,GAAG,OAAO,CAAC;AAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC;AAC1B,MAAM,WAAW,GAAG,WAAW,CAAC;AAChC,MAAM,QAAQ,GAAG,SAAS,CAAC;AAC3B,MAAM,SAAS,GAAG,MAAM,CAAC;AACzB,MAAM,SAAS,GAAG,UAAU,CAAC;AAC7B,MAAM,SAAS,GAAG,MAAM,CAAC;AACzB,MAAM,QAAQ,GAAG,OAAO,CAAC;AACzB,MAAM,SAAS,GAAG,QAAQ,CAAC;AAC3B,MAAM,SAAS,GAAG,WAAW,CAAC;AAE9B,MAAM,QAAQ,GAA8B;IAC1C,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,SAAS,CAAC,EAAE,UAAU;IACvB,CAAC,OAAO,CAAC,EAAE,QAAQ;IACnB,CAAC,SAAS,CAAC,EAAE,UAAU;IACvB,CAAC,OAAO,CAAC,EAAE,QAAQ;IACnB,CAAC,UAAU,CAAC,EAAE,WAAW;IACzB,CAAC,OAAO,CAAC,EAAE,QAAQ;IACnB,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,OAAO,CAAC,EAAE,QAAQ;IACnB,CAAC,QAAQ,CAAC,EAAE,SAAS;IACrB,CAAC,QAAQ,CAAC,EAAE,SAAS;CACtB,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAA8B;IACnD,OAAO,EAAE,OAAO;IAChB,OAAO,EAAE,OAAO;IAChB,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,UAAU;IACjB,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,WAAW,EAAE,WAAW;IACxB,WAAW,EAAE,cAAc;IAC3B,QAAQ,EAAE,YAAY;IACtB,OAAO,EAAE,OAAO;IAChB,KAAK,EAAE,KAAK;CACb,CAAC;AAEF,MAAM,UAAU,UAAU,CAAC,GAAW;IACpC,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC;AAED,8BAA8B;AAC9B,MAAM,UAAU,kBAAkB,CAAC,GAAW;IAC5C,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,EAAE;QACnC,OAAO;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,OAAO;aACb;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,GAAG,EAAE,QAAQ;aACd;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,GAAG,EAAE,QAAQ;aACd;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;SACF,CAAC;KACH;SAAM,IAAI,GAAG,KAAK,MAAM,EAAE;QACzB,OAAO;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,OAAO;aACb;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,GAAG,EAAE,UAAU;aAChB;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,OAAO;aACb;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;SACF,CAAC;KACH;SAAM,IAAI,GAAG,KAAK,SAAS,EAAE;QAC5B,OAAO;YACL;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,GAAG,EAAE,QAAQ;aACd;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;SACF,CAAC;KACH;SAAM,IAAI,GAAG,KAAK,OAAO,EAAE;QAC1B,OAAO;YACL;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,SAAS;aACf;SACF,CAAC;KACH;IACD,OAAO,EAAE,CAAC;AACZ,CAAC","sourcesContent":["\nexport const KEY_ADDR = 'addr';\nexport const KEY_COUNT = 'count';\nexport const KEY_DESC = 'desc';\nexport const KEY_ENUM = 'enum';\nexport const KEY_LABEL = 'label';\nexport const KEY_LEN = 'length';\nexport const KEY_MODE = 'mode';\nexport const KEY_NOTES = 'notes';\nexport const KEY_OFF = 'offset';\nexport const KEY_PARAMS = 'params';\nexport const KEY_RET = 'returns';\nexport const KEY_SIZE = 'size';\nexport const KEY_TAGS = 'tags';\nexport const KEY_TYPE = 'type';\nexport const KEY_VAL = 'val';\nexport const KEY_VALS = 'vals';\nexport const KEY_VARS = 'vars';\n\nconst HEAD_ADDR = 'Address';\nconst HEAD_DESC = 'Description';\nconst HEAD_LABEL = 'Label';\nconst HEAD_LEN = 'Length';\nconst HEAD_NOTES = 'Notes';\nconst HEAD_OFF = 'Offset';\nconst HEAD_PARAMS = 'Arguments';\nconst HEAD_RET = 'Returns';\nconst HEAD_SIZE = 'Size';\nconst HEAD_TAGS = 'Category';\nconst HEAD_TYPE = 'Type';\nconst HEAD_VAL = 'Value';\nconst HEAD_VALS = 'Values';\nconst HEAD_VARS = 'Variables';\n\nconst HEADINGS: { [key: string]: string } = {\n  [KEY_ADDR]: HEAD_ADDR,\n  [KEY_DESC]: HEAD_DESC,\n  [KEY_LABEL]: HEAD_LABEL,\n  [KEY_LEN]: HEAD_LEN,\n  [KEY_NOTES]: HEAD_NOTES,\n  [KEY_OFF]: HEAD_OFF,\n  [KEY_PARAMS]: HEAD_PARAMS,\n  [KEY_RET]: HEAD_RET,\n  [KEY_SIZE]: HEAD_SIZE,\n  [KEY_TAGS]: HEAD_TAGS,\n  [KEY_TYPE]: HEAD_TYPE,\n  [KEY_VAL]: HEAD_VAL,\n  [KEY_VALS]: HEAD_VALS,\n  [KEY_VARS]: HEAD_VARS\n};\n\nexport const CATEGORIES: { [key: string]: string } = {\n  'flags': 'Flags',\n  'ascii': 'ASCII',\n  'text': 'Text',\n  'rle': 'RLE',\n  'lz': 'LZ',\n  'gfx': 'Graphics',\n  'tilemap': 'Tilemap',\n  'palette': 'Palette',\n  'oam_frame': 'OAM frame',\n  'bg_blocks': 'BG block map',\n  'bg_map': 'BG tilemap',\n  'thumb': 'THUMB',\n  'arm': 'ARM',\n};\n\nexport function getHeading(key: string): string {\n  return HEADINGS[key];\n}\n\n// TODO: use constants for map\nexport function getHideableColumns(map: string): { head: string; key: string; }[] {\n  if (map === 'ram' || map === 'data') {\n    return [\n      {\n        head: HEAD_LEN,\n        key: KEY_LEN\n      },\n      {\n        head: HEAD_TAGS,\n        key: KEY_TAGS\n      },\n      {\n        head: HEAD_TYPE,\n        key: KEY_TYPE\n      },\n      {\n        head: HEAD_LABEL,\n        key: KEY_LABEL\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  } else if (map === 'code') {\n    return [\n      {\n        head: HEAD_LEN,\n        key: KEY_LEN\n      },\n      {\n        head: HEAD_LABEL,\n        key: KEY_LABEL\n      },\n      {\n        head: HEAD_PARAMS,\n        key: KEY_PARAMS\n      },\n      {\n        head: HEAD_RET,\n        key: KEY_RET\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  } else if (map === 'structs') {\n    return [\n      {\n        head: HEAD_LABEL,\n        key: KEY_LABEL\n      },\n      {\n        head: HEAD_SIZE,\n        key: KEY_SIZE\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  } else if (map === 'enums') {\n    return [\n      {\n        head: HEAD_LABEL,\n        key: KEY_LABEL\n      },\n      {\n        head: HEAD_NOTES,\n        key: KEY_NOTES\n      }\n    ];\n  }\n  return [];\n}\n"]}